

local ScreenGui = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local joy = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local UIGradient = Instance.new("UIGradient")
local UICorner_2 = Instance.new("UICorner")
local UIGradient_2 = Instance.new("UIGradient")
local SAITAMA = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local UIGradient_3 = Instance.new("UIGradient")
local FidgetSpinner = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local UIGradient_4 = Instance.new("UIGradient")
local PAPYRUS = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local UIGradient_5 = Instance.new("UIGradient")
local Label = Instance.new("TextLabel")
local UIGradient_6 = Instance.new("UIGradient")
local UICorner_6 = Instance.new("UICorner")
local Label_2 = Instance.new("TextLabel")
local UIGradient_7 = Instance.new("UIGradient")
local UICorner_7 = Instance.new("UICorner")
local Chill = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local UIGradient_8 = Instance.new("UIGradient")
local Demon = Instance.new("TextButton")
local UICorner_9 = Instance.new("UICorner")
local UIGradient_9 = Instance.new("UIGradient")
local doggo = Instance.new("TextButton")
local UICorner_10 = Instance.new("UICorner")
local UIGradient_10 = Instance.new("UIGradient")

--Properties:

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

main.Name = "main"
main.Parent = ScreenGui
main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
main.Position = UDim2.new(0.406300455, 0, 0.374581933, 0)
main.Size = UDim2.new(0, 266, 0, 149)
main.Active = true
main.Draggable = true

joy.Name = ":joy:"
joy.Parent = main
joy.BackgroundColor3 = Color3.fromRGB(170, 170, 255)
joy.Position = UDim2.new(0.359712243, 0, 0, 0)
joy.Size = UDim2.new(0, 77, 0, 21)
joy.Font = Enum.Font.SourceSansBold
joy.Text = ":JOY:"
joy.TextColor3 = Color3.fromRGB(0, 0, 0)
joy.TextSize = 14.000
joy.MouseButton1Down:connect(function()




	Bypass = "death"
	loadstring(game:GetObjects("rbxassetid://5325226148")[1].Source)()
	local FavIDs = {
		340106355, --Nefl Crystals
		927529620, --Dimension
		876981900, --Fantasy
		398987889, --Ordinary Days
		1117396305, --Oh wait, it's you.
		885996042, --Action Winter Journey
		919231299, --Sprawling Idiot Effigy
		743466274, --Good Day Sunshine
		727411183, --Knife Fight
		1402748531, --The Earth Is Counting On You!
		595230126 --Robot Language
	}



	--The reality of my life isn't real but a Universe -makhail07
	wait(0.2)
	local Player = game:GetService("Players").LocalPlayer
	local lplr = game:GetService("Players").LocalPlayer
	local mouse = Player:GetMouse()
	local char = workspace.non
	local PlayerGui = Player.PlayerGui
	local Cam = workspace.CurrentCamera
	local Backpack = Player.Backpack
	local hum = char.Humanoid
	local hed = char.Head
	local root = char.HumanoidRootPart
	local rootj = root.RootJoint
	local tors = char.Torso
	local ra = char["Right Arm"]
	local la = char["Left Arm"]
	local rl = char["Right Leg"]
	local ll = char["Left Leg"]
	local neck = tors["Neck"]
	local RootCF = CFrame.fromEulerAnglesXYZ(-1.57, 0, 3.14)
	local RHCF = CFrame.fromEulerAnglesXYZ(0, 1.6, 0)
	local LHCF = CFrame.fromEulerAnglesXYZ(0, -1.6, 0)
	local maincolor = BrickColor.new("Really black")

	-------------------------------------------------------
	--Start Good Stuff--
	-------------------------------------------------------
	local cam = game.Workspace.CurrentCamera
	local CF = CFrame.new
	local angles = CFrame.Angles
	local attack = false
	local Euler = CFrame.fromEulerAnglesXYZ
	local Rad = math.rad
	local IT = Instance.new
	local BrickC = BrickColor.new
	local Cos = math.cos
	local Acos = math.acos
	local Sin = math.sin
	local Asin = math.asin
	local Abs = math.abs
	local Mrandom = math.random
	local Floor = math.floor
	local Vt = Vector3.new
	-------------------------------------------------------
	--End Good Stuff--
	-------------------------------------------------------
	local necko = CF(0, 1, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
	local RW = Instance.new("Weld") 
	local LW = Instance.new("Weld")
	local RH = tors["Right Hip"]
	local LH = tors["Left Hip"]
	RW.Name = "RW"
	RW.Part0 = tors 
	RW.C0 = CF(1.5, 0.5, 0)
	RW.C1 = CF(0, 0.5, 0) 
	RW.Part1 = ra
	RW.Parent = tors 
	LW.Name = "LW"
	LW.Part0 = tors 
	LW.C0 = CF(-1.5, 0.5, 0)
	LW.C1 = CF(0, 0.5, 0) 
	LW.Part1 = la
	LW.Parent = tors
	local Effects = {}
	local joyemoji = Instance.new('ParticleEmitter', tors)
	joyemoji.VelocitySpread = 2000
	joyemoji.Lifetime = NumberRange.new(1)
	joyemoji.Speed = NumberRange.new(40)
	joy= {}
	for i=0, 19 do
		joy[#joy+ 1] = NumberSequenceKeypoint.new(i/19, math.random(1, 1))
	end
	joyemoji.Size = NumberSequence.new(joy)
	joyemoji.Rate = 0
	joyemoji.LockedToPart = false
	joyemoji.LightEmission = 0
	joyemoji.Texture = "rbxassetid://73623723"
	joyemoji.Color = ColorSequence.new(BrickColor.new("Institutional white").Color)

	-------------------------------------------------------
	--Start Important Functions--
	-------------------------------------------------------


	function swait(num)
		if num == 0 or num == nil then
			game:service("RunService").Stepped:wait(0)
		else
			for i = 0, num do
				game:service("RunService").Stepped:wait(0)
			end
		end
	end
	function thread(f)
		coroutine.resume(coroutine.create(f))
	end
	function clerp(a, b, t)
		local qa = {
			QuaternionFromCFrame(a)
		}
		local qb = {
			QuaternionFromCFrame(b)
		}
		local ax, ay, az = a.x, a.y, a.z
		local bx, by, bz = b.x, b.y, b.z
		local _t = 1 - t
		return QuaternionToCFrame(_t * ax + t * bx, _t * ay + t * by, _t * az + t * bz, QuaternionSlerp(qa, qb, t))
	end
	function QuaternionFromCFrame(cf)
		local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
		local trace = m00 + m11 + m22
		if trace > 0 then
			local s = math.sqrt(1 + trace)
			local recip = 0.5 / s
			return (m21 - m12) * recip, (m02 - m20) * recip, (m10 - m01) * recip, s * 0.5
		else
			local i = 0
			if m00 < m11 then
				i = 1
			end
			if m22 > (i == 0 and m00 or m11) then
				i = 2
			end
			if i == 0 then
				local s = math.sqrt(m00 - m11 - m22 + 1)
				local recip = 0.5 / s
				return 0.5 * s, (m10 + m01) * recip, (m20 + m02) * recip, (m21 - m12) * recip
			elseif i == 1 then
				local s = math.sqrt(m11 - m22 - m00 + 1)
				local recip = 0.5 / s
				return (m01 + m10) * recip, 0.5 * s, (m21 + m12) * recip, (m02 - m20) * recip
			elseif i == 2 then
				local s = math.sqrt(m22 - m00 - m11 + 1)
				local recip = 0.5 / s
				return (m02 + m20) * recip, (m12 + m21) * recip, 0.5 * s, (m10 - m01) * recip
			end
		end
	end
	function QuaternionToCFrame(px, py, pz, x, y, z, w)
		local xs, ys, zs = x + x, y + y, z + z
		local wx, wy, wz = w * xs, w * ys, w * zs
		local xx = x * xs
		local xy = x * ys
		local xz = x * zs
		local yy = y * ys
		local yz = y * zs
		local zz = z * zs
		return CFrame.new(px, py, pz, 1 - (yy + zz), xy - wz, xz + wy, xy + wz, 1 - (xx + zz), yz - wx, xz - wy, yz + wx, 1 - (xx + yy))
	end
	function QuaternionSlerp(a, b, t)
		local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
		local startInterp, finishInterp
		if cosTheta >= 1.0E-4 then
			if 1 - cosTheta > 1.0E-4 then
				local theta = math.acos(cosTheta)
				local invSinTheta = 1 / Sin(theta)
				startInterp = Sin((1 - t) * theta) * invSinTheta
				finishInterp = Sin(t * theta) * invSinTheta
			else
				startInterp = 1 - t
				finishInterp = t
			end
		elseif 1 + cosTheta > 1.0E-4 then
			local theta = math.acos(-cosTheta)
			local invSinTheta = 1 / Sin(theta)
			startInterp = Sin((t - 1) * theta) * invSinTheta
			finishInterp = Sin(t * theta) * invSinTheta
		else
			startInterp = t - 1
			finishInterp = t
		end
		return a[1] * startInterp + b[1] * finishInterp, a[2] * startInterp + b[2] * finishInterp, a[3] * startInterp + b[3] * finishInterp, a[4] * startInterp + b[4] * finishInterp
	end
	function rayCast(Position, Direction, Range, Ignore)
		return game:service("Workspace"):FindPartOnRay(Ray.new(Position, Direction.unit * (Range or 999.999)), Ignore)
	end
	FELOADLIBRARY = {}
	loadstring(game:GetObjects("rbxassetid://5209815302")[1].Source)()
	local Create = FELOADLIBRARY.Create

	function getRegion(point,range,ignore)
		return workspace:FindPartsInRegion3WithIgnoreList(Region3.new(point-Vector3.new(1,1,1)*range/2,point+Vector3.new(1,1,1)*range/2),ignore,100)
	end

	function GetTorso(char)
		return char:FindFirstChild'Torso' or char:FindFirstChild'UpperTorso' or char:FindFirstChild'LowerTorso' or char:FindFirstChild'HumanoidRootPart'
	end

	local M = {C=math.cos,R=math.rad,S=math.sin,P=math.pi,RNG=math.random,MRS=math.randomseed,H=math.huge,RRNG = function(min,max,div) return math.rad(math.random(min,max)/(div or 1)) end}
	-------------------------------------------------------
	--Start Damage Function--
	-------------------------------------------------------
	function Damage(Part, hit, minim, maxim, knockback, Type, Property, Delay, HitSound, HitPitch)
		if hit.Parent == nil then
			return
		end
		local h = hit.Parent:FindFirstChildOfClass("Humanoid")
		for _, v in pairs(hit.Parent:children()) do
			if v:IsA("Humanoid") then
				h = v
			end
		end
		if h ~= nil and hit.Parent.Name ~= char.Name and hit.Parent:FindFirstChild("UpperTorso") ~= nil then

			--hit.Parent:FindFirstChild("Head"):BreakJoints()
		end

		if h ~= nil and hit.Parent.Name ~= char.Name and hit.Parent:FindFirstChild("Torso") ~= nil then
			if hit.Parent:findFirstChild("DebounceHit") ~= nil then
				if hit.Parent.DebounceHit.Value == true then
					return
				end
			end
			if insta == true then
				--hit.Parent:FindFirstChild("Head"):BreakJoints()
			end
			local c = Create("ObjectValue"){
				Name = "creator",
				Value = Player,
				Parent = h,
			}
			game:GetService("Debris"):AddItem(c, .5)
			if HitSound ~= nil and HitPitch ~= nil then
				CFuncs.Sound.Create(HitSound, hit, 1, HitPitch) 
			end
			local Damage = math.random(minim, maxim)
			local blocked = false
			local block = hit.Parent:findFirstChild("Block")
			if block ~= nil then
				if block.className == "IntValue" then
					if block.Value > 0 then
						blocked = true
						block.Value = block.Value - 1
						print(block.Value)
					end
				end
			end
			if blocked == false then
				h.Health = h.Health - Damage
				ShowDamage((Part.CFrame * CFrame.new(0, 0, (Part.Size.Z / 2)).p + Vector3.new(0, 1.5, 0)), -Damage, 1.5, tors.BrickColor.Color)
			else
				h.Health = h.Health - (Damage / 2)
				ShowDamage((Part.CFrame * CFrame.new(0, 0, (Part.Size.Z / 2)).p + Vector3.new(0, 1.5, 0)), -Damage, 1.5, tors.BrickColor.Color)
			end
			if Type == "Knockdown" then
				local hum = hit.Parent.Humanoid
				hum.PlatformStand = true
				coroutine.resume(coroutine.create(function(HHumanoid)
					swait(1)
					HHumanoid.PlatformStand = false
				end), hum)
				local angle = (hit.Position - (Property.Position + Vector3.new(0, 0, 0))).unit
				local bodvol = Create("BodyVelocity"){
					velocity = angle * knockback,
					P = 5000,
					maxForce = Vector3.new(8e+003, 8e+003, 8e+003),
					Parent = hit,
				}
				local rl = Create("BodyAngularVelocity"){
					P = 3000,
					maxTorque = Vector3.new(500000, 500000, 500000) * 50000000000000,
					angularvelocity = Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
					Parent = hit,
				}
				game:GetService("Debris"):AddItem(bodvol, .5)
				game:GetService("Debris"):AddItem(rl, .5)
			elseif Type == "Normal" then
				local vp = Create("BodyVelocity"){
					P = 500,
					maxForce = Vector3.new(math.huge, 0, math.huge),
					velocity = Property.CFrame.lookVector * knockback + Property.Velocity / 1.05,
				}
				if knockback > 0 then
					vp.Parent = hit.Parent.Torso
				end
				game:GetService("Debris"):AddItem(vp, .5)
			elseif Type == "Up" then
				local bodyVelocity = Create("BodyVelocity"){
					velocity = Vector3.new(0, 20, 0),
					P = 5000,
					maxForce = Vector3.new(8e+003, 8e+003, 8e+003),
					Parent = hit,
				}
				game:GetService("Debris"):AddItem(bodyVelocity, .5)
			elseif Type == "DarkUp" then
				coroutine.resume(coroutine.create(function()
					for i = 0, 1, 0.1 do
						swait()
						Effects.Block.Create(BrickColor.new("Black"), hit.Parent.Torso.CFrame, 5, 5, 5, 1, 1, 1, .08, 1)
					end
				end))
				local bodyVelocity = Create("BodyVelocity"){
					velocity = Vector3.new(0, 20, 0),
					P = 5000,
					maxForce = Vector3.new(8e+003, 8e+003, 8e+003),
					Parent = hit,
				}
				game:GetService("Debris"):AddItem(bodyVelocity, 1)
			elseif Type == "Snare" then
				local bp = Create("BodyPosition"){
					P = 2000,
					D = 100,
					maxForce = Vector3.new(math.huge, math.huge, math.huge),
					position = hit.Parent.Torso.Position,
					Parent = hit.Parent.Torso,
				}
				game:GetService("Debris"):AddItem(bp, 1)
			elseif Type == "Freeze" then
				local BodPos = Create("BodyPosition"){
					P = 50000,
					D = 1000,
					maxForce = Vector3.new(math.huge, math.huge, math.huge),
					position = hit.Parent.Torso.Position,
					Parent = hit.Parent.Torso,
				}
				local BodGy = Create("BodyGyro") {
					maxTorque = Vector3.new(4e+005, 4e+005, 4e+005) * math.huge ,
					P = 20e+003,
					Parent = hit.Parent.Torso,
					cframe = hit.Parent.Torso.CFrame,
				}
				hit.Parent.Torso.Anchored = true
				coroutine.resume(coroutine.create(function(Part) 
					swait(1.5)
					Part.Anchored = false
				end), hit.Parent.Torso)
				game:GetService("Debris"):AddItem(BodPos, 3)
				game:GetService("Debris"):AddItem(BodGy, 3)
			end
			local debounce = Create("BoolValue"){
				Name = "DebounceHit",
				Parent = hit.Parent,
				Value = true,
			}
			game:GetService("Debris"):AddItem(debounce, Delay)
			c = Create("ObjectValue"){
				Name = "creator",
				Value = Player,
				Parent = h,
			}
			game:GetService("Debris"):AddItem(c, .5)
		end
	end
	-------------------------------------------------------
	--End Damage Function--
	-------------------------------------------------------

	-------------------------------------------------------
	--Start Damage Function Customization--
	-------------------------------------------------------
	function ShowDamage(Pos, Text, Time, Color)
		local Rate = (1 / 30)
		local Pos = (Pos or Vector3.new(0, 0, 0))
		local Text = (Text or "")
		local Time = (Time or 2)
		local Color = (Color or Color3.new(255, 255, 1))
		local EffectPart = CFuncs.Part.Create(workspace, "SmoothPlastic", 0, 1, BrickColor.new(Color), "Effect", Vector3.new(0, 0, 0))
		EffectPart.Anchored = true
		local BillboardGui = Create("BillboardGui"){
			Size = UDim2.new(3, 0, 3, 0),
			Adornee = EffectPart,
			Parent = EffectPart,
		}
		local TextLabel = Create("TextLabel"){
			BackgroundTransparency = 1,
			Size = UDim2.new(1, 0, 1, 0),
			Text = Text,
			Font = "Bodoni",
			TextColor3 = Color,
			TextScaled = true,
			TextStrokeColor3 = Color3.fromRGB(0,0,0),
			Parent = BillboardGui,
		}
		game.Debris:AddItem(EffectPart, (Time))
		EffectPart.Parent = game:GetService("Workspace")
		delay(0, function()
			local Frames = (Time / Rate)
			for Frame = 1, Frames do
				wait(Rate)
				local Percent = (Frame / Frames)
				EffectPart.CFrame = CFrame.new(Pos) + Vector3.new(0, Percent, 0)
				TextLabel.TextTransparency = Percent
			end
			if EffectPart and EffectPart.Parent then
				EffectPart:Destroy()
			end
		end)
	end
	-------------------------------------------------------
	--End Damage Function Customization--
	-------------------------------------------------------

	function MagniDamage(Part, magni, mindam, maxdam, knock, Type)
		for _, c in pairs(workspace:children()) do
			local hum = c:findFirstChild("Humanoid")
			if hum ~= nil then
				local head = c:findFirstChild("Head")
				if head ~= nil then
					local targ = head.Position - Part.Position
					local mag = targ.magnitude
					if magni >= mag and c.Name ~= plr.Name then
						Damage(head, head, mindam, maxdam, knock, Type, root, 0.1, "http://www.roblox.com/asset/?id=0", 1.2)
					end
				end
			end
		end
	end


	CFuncs = {
		Part = {
			Create = function(Parent, Material, Reflectance, Transparency, BColor, Name, Size)
				local Part = Create("Part")({
					Parent = Parent,
					Reflectance = Reflectance,
					Transparency = Transparency,
					CanCollide = false,
					Locked = true,
					BrickColor = BrickColor.new(tostring(BColor)),
					Name = Name,
					Size = Size,
					Material = Material
				})
				RemoveOutlines(Part)
				return Part
			end
		},
		Mesh = {
			Create = function(Mesh, Part, MeshType, MeshId, OffSet, Scale)
				local Msh = Create(Mesh)({
					Parent = Part,
					Offset = OffSet,
					Scale = Scale
				})
				if Mesh == "SpecialMesh" then
					Msh.MeshType = MeshType
					Msh.MeshId = MeshId
				end
				return Msh
			end
		},
		Mesh = {
			Create = function(Mesh, Part, MeshType, MeshId, OffSet, Scale)
				local Msh = Create(Mesh)({
					Parent = Part,
					Offset = OffSet,
					Scale = Scale
				})
				if Mesh == "SpecialMesh" then
					Msh.MeshType = MeshType
					Msh.MeshId = MeshId
				end
				return Msh
			end
		},
		Weld = {
			Create = function(Parent, Part0, Part1, C0, C1)
				local Weld = Create("Weld")({
					Parent = Parent,
					Part0 = Part0,
					Part1 = Part1,
					C0 = C0,
					C1 = C1
				})
				return Weld
			end
		},
		Sound = {
			Create = function(id, par, vol, pit)
				coroutine.resume(coroutine.create(function()
					local S = Create("Sound")({
						Volume = vol,
						Pitch = pit or 1,
						SoundId = id,
						Parent = par or workspace
					})
					wait()
					S:play()
					game:GetService("Debris"):AddItem(S, 6)
				end))
			end
		},
		ParticleEmitter = {
			Create = function(Parent, Color1, Color2, LightEmission, Size, Texture, Transparency, ZOffset, Accel, Drag, LockedToPart, VelocityInheritance, EmissionDirection, Enabled, LifeTime, Rate, Rotation, RotSpeed, Speed, VelocitySpread)
				local fp = Create("ParticleEmitter")({
					Parent = Parent,
					Color = ColorSequence.new(Color1, Color2),
					LightEmission = LightEmission,
					Size = Size,
					Texture = Texture,
					Transparency = Transparency,
					ZOffset = ZOffset,
					Acceleration = Accel,
					Drag = Drag,
					LockedToPart = LockedToPart,
					VelocityInheritance = VelocityInheritance,
					EmissionDirection = EmissionDirection,
					Enabled = Enabled,
					Lifetime = LifeTime,
					Rate = Rate,
					Rotation = Rotation,
					RotSpeed = RotSpeed,
					Speed = Speed,
					VelocitySpread = VelocitySpread
				})
				return fp
			end
		}
	}
	function RemoveOutlines(part)
		part.TopSurface, part.BottomSurface, part.LeftSurface, part.RightSurface, part.FrontSurface, part.BackSurface = 10, 10, 10, 10, 10, 10
	end
	function CreatePart(FormFactor, Parent, Material, Reflectance, Transparency, BColor, Name, Size)
		local Part = Create("Part")({
			formFactor = FormFactor,
			Parent = Parent,
			Reflectance = Reflectance,
			Transparency = Transparency,
			CanCollide = false,
			Locked = true,
			BrickColor = BrickColor.new(tostring(BColor)),
			Name = Name,
			Size = Size,
			Material = Material
		})
		RemoveOutlines(Part)
		return Part
	end
	function CreateMesh(Mesh, Part, MeshType, MeshId, OffSet, Scale)
		local Msh = Create(Mesh)({
			Parent = Part,
			Offset = OffSet,
			Scale = Scale
		})
		if Mesh == "SpecialMesh" then
			Msh.MeshType = MeshType
			Msh.MeshId = MeshId
		end
		return Msh
	end
	function CreateWeld(Parent, Part0, Part1, C0, C1)
		local Weld = Create("Weld")({
			Parent = Parent,
			Part0 = Part0,
			Part1 = Part1,
			C0 = C0,
			C1 = C1
		})
		return Weld
	end


	-------------------------------------------------------
	--Start Effect Function--
	-------------------------------------------------------
	EffectModel = Instance.new("Model", char)
	Effects = {
		Block = {
			Create = function(brickcolor, cframe, x1, y1, z1, x3, y3, z3, delay, Type)
				local prt = CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, brickcolor, "Effect", Vector3.new())
				prt.Anchored = true
				prt.CFrame = cframe
				local msh = CFuncs.Mesh.Create("BlockMesh", prt, "", "", Vector3.new(0, 0, 0), Vector3.new(x1, y1, z1))
				game:GetService("Debris"):AddItem(prt, 10)
				if Type == 1 or Type == nil then
					table.insert(Effects, {
						prt,
						"Block1",
						delay,
						x3,
						y3,
						z3,
						msh
					})
				elseif Type == 2 then
					table.insert(Effects, {
						prt,
						"Block2",
						delay,
						x3,
						y3,
						z3,
						msh
					})
				else
					table.insert(Effects, {
						prt,
						"Block3",
						delay,
						x3,
						y3,
						z3,
						msh
					})
				end
			end
		},
		Sphere = {
			Create = function(brickcolor, cframe, x1, y1, z1, x3, y3, z3, delay)
				local prt = CFuncs.Part.Create(EffectModel, "Neon", 0, 0, brickcolor, "Effect", Vector3.new())
				prt.Anchored = true
				prt.CFrame = cframe
				local msh = CFuncs.Mesh.Create("SpecialMesh", prt, "Sphere", "", Vector3.new(0, 0, 0), Vector3.new(x1, y1, z1))
				game:GetService("Debris"):AddItem(prt, 10)
				table.insert(Effects, {
					prt,
					"Cylinder",
					delay,
					x3,
					y3,
					z3,
					msh
				})
			end
		},
		Cylinder = {
			Create = function(brickcolor, cframe, x1, y1, z1, x3, y3, z3, delay)
				local prt = CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, brickcolor, "Effect", Vector3.new())
				prt.Anchored = true
				prt.CFrame = cframe
				local msh = CFuncs.Mesh.Create("CylinderMesh", prt, "", "", Vector3.new(0, 0, 0), Vector3.new(x1, y1, z1))
				game:GetService("Debris"):AddItem(prt, 10)
				table.insert(Effects, {
					prt,
					"Cylinder",
					delay,
					x3,
					y3,
					z3,
					msh
				})
			end
		},
		Wave = {
			Create = function(brickcolor, cframe, x1, y1, z1, x3, y3, z3, delay)
				local prt = CFuncs.Part.Create(EffectModel, "Neon", 0, 0, brickcolor, "Effect", Vector3.new())
				prt.Anchored = true
				prt.CFrame = cframe
				local msh = CFuncs.Mesh.Create("SpecialMesh", prt, "FileMesh", "rbxassetid://20329976", Vector3.new(0, 0, 0), Vector3.new(x1 / 60, y1 / 60, z1 / 60))
				game:GetService("Debris"):AddItem(prt, 10)
				table.insert(Effects, {
					prt,
					"Cylinder",
					delay,
					x3 / 60,
					y3 / 60,
					z3 / 60,
					msh
				})
			end
		},
		Ring = {
			Create = function(brickcolor, cframe, x1, y1, z1, x3, y3, z3, delay)
				local prt = CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, brickcolor, "Effect", Vector3.new())
				prt.Anchored = true
				prt.CFrame = cframe
				local msh = CFuncs.Mesh.Create("SpecialMesh", prt, "FileMesh", "rbxassetid://3270017", Vector3.new(0, 0, 0), Vector3.new(x1, y1, z1))
				game:GetService("Debris"):AddItem(prt, 10)
				table.insert(Effects, {
					prt,
					"Cylinder",
					delay,
					x3,
					y3,
					z3,
					msh
				})
			end
		},
		Break = {
			Create = function(brickcolor, cframe, x1, y1, z1)
				local prt = CFuncs.Part.Create(EffectModel, "Neon", 0, 0, brickcolor, "Effect", Vector3.new(0.5, 0.5, 0.5))
				prt.Anchored = true
				prt.CFrame = cframe * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
				local msh = CFuncs.Mesh.Create("SpecialMesh", prt, "Sphere", "", Vector3.new(0, 0, 0), Vector3.new(x1, y1, z1))
				local num = math.random(10, 50) / 1000
				game:GetService("Debris"):AddItem(prt, 10)
				table.insert(Effects, {
					prt,
					"Shatter",
					num,
					prt.CFrame,
					math.random() - math.random(),
					0,
					math.random(50, 100) / 100
				})
			end
		},
		Spiral = {
			Create = function(brickcolor, cframe, x1, y1, z1, x3, y3, z3, delay)
				local prt = CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, brickcolor, "Effect", Vector3.new())
				prt.Anchored = true
				prt.CFrame = cframe
				local msh = CFuncs.Mesh.Create("SpecialMesh", prt, "FileMesh", "rbxassetid://1051557", Vector3.new(0, 0, 0), Vector3.new(x1, y1, z1))
				game:GetService("Debris"):AddItem(prt, 10)
				table.insert(Effects, {
					prt,
					"Cylinder",
					delay,
					x3,
					y3,
					z3,
					msh
				})
			end
		},
		Push = {
			Create = function(brickcolor, cframe, x1, y1, z1, x3, y3, z3, delay)
				local prt = CFuncs.Part.Create(EffectModel, "SmoothPlastic", 0, 0, brickcolor, "Effect", Vector3.new())
				prt.Anchored = true
				prt.CFrame = cframe
				local msh = CFuncs.Mesh.Create("SpecialMesh", prt, "FileMesh", "rbxassetid://437347603", Vector3.new(0, 0, 0), Vector3.new(x1, y1, z1))
				game:GetService("Debris"):AddItem(prt, 10)
				table.insert(Effects, {
					prt,
					"Cylinder",
					delay,
					x3,
					y3,
					z3,
					msh
				})
			end
		}
	}
	function part(formfactor ,parent, reflectance, transparency, brickcolor, name, size)
		local fp = IT("Part")
		fp.formFactor = formfactor 
		fp.Parent = parent
		fp.Reflectance = reflectance
		fp.Transparency = transparency
		fp.CanCollide = false 
		fp.Locked = true
		fp.BrickColor = brickcolor
		fp.Name = name
		fp.Size = size
		fp.Position = tors.Position 
		RemoveOutlines(fp)
		fp.Material = "SmoothPlastic"
		fp:BreakJoints()
		return fp 
	end 

	function mesh(Mesh,part,meshtype,meshid,offset,scale)
		local mesh = IT(Mesh) 
		mesh.Parent = part
		if Mesh == "SpecialMesh" then
			mesh.MeshType = meshtype
			if meshid ~= "nil" then
				mesh.MeshId = "http://www.roblox.com/asset/?id="..meshid
			end
		end
		mesh.Offset = offset
		mesh.Scale = scale
		return mesh
	end

	function Magic(bonuspeed, type, pos, scale, value, color, MType)
		local type = type
		local rng = Instance.new("Part", char)
		rng.Anchored = true
		rng.BrickColor = color
		rng.CanCollide = false
		rng.FormFactor = 3
		rng.Name = "Ring"
		rng.Material = "Neon"
		rng.Size = Vector3.new(1, 1, 1)
		rng.Transparency = 0
		rng.TopSurface = 0
		rng.BottomSurface = 0
		rng.CFrame = pos
		local rngm = Instance.new("SpecialMesh", rng)
		rngm.MeshType = MType
		rngm.Scale = scale
		local scaler2 = 1
		if type == "Add" then
			scaler2 = 1 * value
		elseif type == "Divide" then
			scaler2 = 1 / value
		end
		coroutine.resume(coroutine.create(function()
			for i = 0, 10 / bonuspeed, 0.1 do
				swait()
				if type == "Add" then
					scaler2 = scaler2 - 0.01 * value / bonuspeed
				elseif type == "Divide" then
					scaler2 = scaler2 - 0.01 / value * bonuspeed
				end
				rng.Transparency = rng.Transparency + 0.01 * bonuspeed
				rngm.Scale = rngm.Scale + Vector3.new(scaler2 * bonuspeed, scaler2 * bonuspeed, scaler2 * bonuspeed)
			end
			rng:Destroy()
		end))
	end

	function Eviscerate(dude)
		if dude.Name ~= char then
			local val = IT("BoolValue", dude)
			val.Name = "IsHit"
			local ds = coroutine.wrap(function()
				--dude:WaitForChild("Head"):BreakJoints()
				wait(0.5)
				target = nil
				coroutine.resume(coroutine.create(function()
					for i, v in pairs(dude:GetChildren()) do
						if v:IsA("Part") or v:IsA("MeshPart") then
							coroutine.resume(coroutine.create(function()
								v.CanCollide = false
								local PartEmmit1 = IT("ParticleEmitter", reye)
								PartEmmit1.LightEmission = 1
								PartEmmit1.Texture = "rbxassetid://284205403"
								PartEmmit1.Color = ColorSequence.new(maincolor.Color)
								PartEmmit1.Rate = 150
								PartEmmit1.Lifetime = NumberRange.new(1)
								PartEmmit1.Size = NumberSequence.new({
									NumberSequenceKeypoint.new(0, 0.75, 0),
									NumberSequenceKeypoint.new(1, 0, 0)
								})
								PartEmmit1.Transparency = NumberSequence.new({
									NumberSequenceKeypoint.new(0, 0, 0),
									NumberSequenceKeypoint.new(1, 1, 0)
								})
								PartEmmit1.Speed = NumberRange.new(0, 0)
								PartEmmit1.VelocitySpread = 30000
								PartEmmit1.Rotation = NumberRange.new(-500, 500)
								PartEmmit1.RotSpeed = NumberRange.new(-500, 500)
								coroutine.resume(coroutine.create(function()
									wait(0.5)
									PartEmmit1.Enabled = false
									wait(3)
								end))
							end))
						end
					end
				end))
			end)
			ds()
		end
	end

	function FindNearestHead(Position, Distance, SinglePlayer)
		if SinglePlayer then
			return Distance > (SinglePlayer.Torso.CFrame.p - Position).magnitude
		end
		local List = {}
		for i, v in pairs(workspace:GetChildren()) do
			if v:IsA("Model") and v:findFirstChild("Head") and v ~= char and Distance >= (v.Head.Position - Position).magnitude then
				table.insert(List, v)
			end
		end
		return List
	end

	function Aura(bonuspeed, FastSpeed, type, pos, x1, y1, z1, value, color, outerpos, MType)
		local type = type
		local rng = Instance.new("Part", char)
		rng.Anchored = true
		rng.BrickColor = color
		rng.CanCollide = false
		rng.FormFactor = 3
		rng.Name = "Ring"
		rng.Material = "Neon"
		rng.Size = Vector3.new(1, 1, 1)
		rng.Transparency = 0
		rng.TopSurface = 0
		rng.BottomSurface = 0
		rng.CFrame = pos
		rng.CFrame = rng.CFrame + rng.CFrame.lookVector * outerpos
		local rngm = Instance.new("SpecialMesh", rng)
		rngm.MeshType = MType
		rngm.Scale = Vector3.new(x1, y1, z1)
		local scaler2 = 1
		local speeder = FastSpeed
		if type == "Add" then
			scaler2 = 1 * value
		elseif type == "Divide" then
			scaler2 = 1 / value
		end
		coroutine.resume(coroutine.create(function()
			for i = 0, 10 / bonuspeed, 0.1 do
				swait()
				if type == "Add" then
					scaler2 = scaler2 - 0.01 * value / bonuspeed
				elseif type == "Divide" then
					scaler2 = scaler2 - 0.01 / value * bonuspeed
				end
				speeder = speeder - 0.01 * FastSpeed * bonuspeed
				rng.CFrame = rng.CFrame + rng.CFrame.lookVector * speeder * bonuspeed
				rng.Transparency = rng.Transparency + 0.01 * bonuspeed
				rngm.Scale = rngm.Scale + Vector3.new(scaler2 * bonuspeed, scaler2 * bonuspeed, 0)
			end
			rng:Destroy()
		end))
	end

	function SoulSteal(dude)
		if dude.Name ~= char then
			local val = IT("BoolValue", dude)
			val.Name = "IsHit"
			local torso = (dude:FindFirstChild'Head' or dude:FindFirstChild'Torso' or dude:FindFirstChild'UpperTorso' or dude:FindFirstChild'LowerTorso' or dude:FindFirstChild'HumanoidRootPart')
			local soulst = coroutine.wrap(function()
				local soul = Instance.new("Part",dude)
				soul.Size = Vector3.new(1,1,1)
				soul.CanCollide = false
				soul.Anchored = false
				soul.Position = torso.Position
				soul.Transparency = 1
				local PartEmmit1 = IT("ParticleEmitter", soul)
				PartEmmit1.LightEmission = 1
				PartEmmit1.Texture = "rbxassetid://569507414"
				PartEmmit1.Color = ColorSequence.new(maincolor.Color)
				PartEmmit1.Rate = 250
				PartEmmit1.Lifetime = NumberRange.new(1.6)
				PartEmmit1.Size = NumberSequence.new({
					NumberSequenceKeypoint.new(0, 1, 0),
					NumberSequenceKeypoint.new(1, 0, 0)
				})
				PartEmmit1.Transparency = NumberSequence.new({
					NumberSequenceKeypoint.new(0, 0, 0),
					NumberSequenceKeypoint.new(1, 1, 0)
				})
				PartEmmit1.Speed = NumberRange.new(0, 0)
				PartEmmit1.VelocitySpread = 30000
				PartEmmit1.Rotation = NumberRange.new(-360, 360)
				PartEmmit1.RotSpeed = NumberRange.new(-360, 360)
				local BodPoss = IT("BodyPosition", soul)
				BodPoss.P = 3000
				BodPoss.D = 1000
				BodPoss.maxForce = Vector3.new(50000000000, 50000000000, 50000000000)
				BodPoss.position = torso.Position + Vector3.new(Mrandom(-15, 15), Mrandom(-15, 15), Mrandom(-15, 15))
				wait(1.6)
				soul.Touched:connect(function(hit)
					if hit.Parent == char then
						soul:Destroy()
					end
				end)
				wait(1.2)
				while soul do
					swait()
					PartEmmit1.Color = ColorSequence.new(maincolor.Color)
					BodPoss.Position = tors.Position
				end
			end)
			soulst()
		end
	end
	function FaceMouse()
		local	Cam = workspace.CurrentCamera
		return {
			CFrame.new(char.Torso.Position, Vector3.new(mouse.Hit.p.x, char.Torso.Position.y, mouse.Hit.p.z)),
			Vector3.new(mouse.Hit.p.x, mouse.Hit.p.y, mouse.Hit.p.z)
		}
	end

	BTAUNT = Instance.new("Sound", hed)
	BTAUNT.SoundId = "http://www.roblox.com/asset/?id=1278102150"
	BTAUNT.Volume = 19
	BTAUNT.Pitch = 1
	BTAUNT.Looped = true

	BTAUNT2 = Instance.new("Sound", hed)
	BTAUNT2.Parent = hed
	BTAUNT2.SoundId = "http://www.roblox.com/asset/?id=957602352"
	BTAUNT2.Volume = 20
	BTAUNT2.Pitch = 1
	BTAUNT2.Looped = true

	BTAUNT3 = Instance.new("Sound", char)
	BTAUNT3.SoundId = "http://www.roblox.com/asset/?id=1090127517"
	BTAUNT3.Volume = 2
	BTAUNT3.Pitch = 1
	BTAUNT3.Looped = true

	BTAUNT4 = Instance.new("Sound", tors)
	BTAUNT4.SoundId = "http://www.roblox.com/asset/?id=2658538628"
	BTAUNT4.Volume = 10
	BTAUNT4.Pitch = 3
	BTAUNT4.Looped = true

	BTAUNT5 = Instance.new("Sound", tors)
	BTAUNT5.SoundId = "http://www.roblox.com/asset/?id=1470848774"
	BTAUNT5.Volume = 5
	BTAUNT5.Pitch = 1
	BTAUNT5.Looped = true

	TEST = Instance.new("Sound", tors)
	TEST.SoundId = "http://www.roblox.com/asset/?id=636494529"
	TEST.Volume = 25
	TEST.Pitch = 1
	TEST.Looped = false
	-------------------------------------------------------
	--End Effect Function--
	-------------------------------------------------------

	function CreateMesh(MESH, PARENT, MESHTYPE, MESHID, TEXTUREID, SCALE, OFFSET)
		local NEWMESH = IT(MESH)
		if MESH == "SpecialMesh" then
			NEWMESH.MeshType = MESHTYPE
			if MESHID ~= "nil" and MESHID ~= "" then
				NEWMESH.MeshId = "http://www.roblox.com/asset/?id="..MESHID
			end
			if TEXTUREID ~= "nil" and TEXTUREID ~= "" then
				NEWMESH.TextureId = "http://www.roblox.com/asset/?id="..TEXTUREID
			end
		end
		NEWMESH.Offset = OFFSET or Vt(0, 0, 0)
		NEWMESH.Scale = SCALE
		NEWMESH.Parent = PARENT
		return NEWMESH
	end

	function CreatePart(FORMFACTOR, PARENT, MATERIAL, REFLECTANCE, TRANSPARENCY, BRICKCOLOR, NAME, SIZE)
		local NEWPART = IT("Part")
		NEWPART.formFactor = FORMFACTOR
		NEWPART.Reflectance = REFLECTANCE
		NEWPART.Transparency = TRANSPARENCY
		NEWPART.CanCollide = false
		NEWPART.Locked = true
		NEWPART.BrickColor = BrickC(tostring(BRICKCOLOR))
		NEWPART.Name = NAME
		NEWPART.Size = SIZE
		NEWPART.Position = tors.Position
		NEWPART.Material = MATERIAL
		NEWPART:BreakJoints()
		NEWPART.Parent = PARENT
		return NEWPART
	end

	function MakeForm(PART,TYPE)
		local MSH = nil
		if TYPE == "Cyl" then
			MSH = IT("CylinderMesh",PART)
		elseif TYPE == "Ball" then
			MSH = IT("SpecialMesh",PART)
			MSH.MeshType = "Sphere"
		elseif TYPE == "Wedge" then
			MSH = IT("SpecialMesh",PART)
			MSH.MeshType = "Wedge"
		elseif TYPE == "Block" then
			MSH = IT("SpecialMesh",PART)
			MSH.MeshType = "Brick"
		end
		return MSH
	end

	function Cso(ID, PARENT, VOLUME, PITCH)
		local NSound = nil
		coroutine.resume(coroutine.create(function()
			NSound = IT("Sound", PARENT)
			NSound.Volume = VOLUME
			NSound.Pitch = PITCH
			NSound.SoundId = "http://www.roblox.com/asset/?id="..ID
			swait()
			NSound:play()
			game:GetService("Debris"):AddItem(NSound, 50)
		end))
		return NSound
	end
	function CameraEnshaking(Length, Intensity)
		coroutine.resume(coroutine.create(function()
			local intensity = 1 * Intensity
			local rotM = 0.01 * Intensity
			for i = 0, Length, 0.1 do
				swait()
				intensity = intensity - 0.05 * Intensity / Length
				rotM = rotM - 5.0E-4 * Intensity / Length
				hum.CameraOffset = Vector3.new(Rad(Mrandom(-intensity, intensity)), Rad(Mrandom(-intensity, intensity)), Rad(Mrandom(-intensity, intensity)))
				cam.CFrame = cam.CFrame * CF(Rad(Mrandom(-intensity, intensity)), Rad(Mrandom(-intensity, intensity)), Rad(Mrandom(-intensity, intensity))) * Euler(Rad(Mrandom(-intensity, intensity)) * rotM, Rad(Mrandom(-intensity, intensity)) * rotM, Rad(Mrandom(-intensity, intensity)) * rotM)
			end
			hum.CameraOffset = Vector3.new(0, 0, 0)
		end))
	end


	function Sink(position,radius)
		for i,v in ipairs(workspace:GetChildren()) do
			if v:FindFirstChild("Hit2By"..plr.Name) == nil then
				local body = v:GetChildren()
				for part = 1, #body do
					if(v:FindFirstChild("Hit2By"..plr.Name) == nil and (body[part].ClassName == "Part" or body[part].ClassName == "MeshPart") and v ~= char) then
						if(body[part].Position - position).Magnitude < radius then
							if v.ClassName == "Model" then
								v:FindFirstChildOfClass("Humanoid").Name = "Humanoid"
								if v:FindFirstChild("Humanoid") then
									local defence = Instance.new("BoolValue",v)
									defence.Name = ("Hit2By"..plr.Name)
									if v.Humanoid.Health ~= 0 then
										local TORS = v:FindFirstChild("HumanoidRootPart") or v:FindFirstChild("Torso") or v:FindFirstChild("UpperTorso")
										if TORS ~= nil then
											local HITFLOOR2, HITPOS2 = Raycast(TORS.Position, (CF(TORS.Position, TORS.Position + Vector3.new(0, -1, 0))).lookVector, 25 * TORS.Size.Y/2, v)
											coroutine.resume(coroutine.create(function()
												if HITFLOOR2 ~= nil then
													TORS.Anchored = true
													local Hole2 = CreatePart(3, EffectModel, "Neon", 0, 0, "Really black", "Hole", Vector3.new(TORS.Size.X*4,0,TORS.Size.X*4))
													Hole2.Color = Color3.new(0,0,0)
													local MESH = MakeForm(Hole2,"Cyl")
													MESH.Scale = Vector3.new(0,1,0)
													Hole2.CFrame = CF(HITPOS2)
													for i = 1, 10 do
														swait()
														MESH.Scale = MESH.Scale + Vector3.new(0.1,0,0.1)
													end
													--Cso("160440683", v:FindFirstChild("Head"), 10, .8)
													Cso("154955269", v:FindFirstChild("Head"), 10, 1)
													repeat
														swait()
														TORS.CFrame = TORS.CFrame * CF(0,-0.1,0)
														--MESH.Scale = MESH.Scale + Vector3.new(0,1.6,0)
													until TORS.Position.Y<position.Y-4
													v:remove()
													for i = 1, 10 do
														swait()
														MESH.Scale = MESH.Scale - Vector3.new(0.1,0,0.1)
													end
													Hole2:remove()
												end
											end))
										end
									end
								end
							end
							--body[part].Velocity = CFrame.new(position,body[part].Position).lookVector*5*maxstrength
						end
					end
				end
			end	
		end
	end
	function Trail(Part)
		local TRAIL = Part:Clone()
		TRAIL.CanCollide = false
		TRAIL.Anchored = true
		TRAIL.Parent = EffectModel
		TRAIL.Name = "Trail"
		local TRANS = Part.Transparency
		coroutine.resume(coroutine.create(function()
			for i = 1, 20 do
				swait()
				TRAIL.Transparency = TRAIL.Transparency + ((1-TRANS)/20)
			end
			TRAIL:remove()
		end))
	end
	function getRegion(point,range,ignore)
		return workspace:FindPartsInRegion3WithIgnoreList(Region3.new(point-Vector3.new(1,1,1)*range/2,point+Vector3.new(1,1,1)*range/2),ignore,100)
	end

	function GetTorso(char)
		return char:FindFirstChild'Torso' or char:FindFirstChild'UpperTorso' or char:FindFirstChild'LowerTorso' or char:FindFirstChild'HumanoidRootPart'
	end

	local M = {C=math.cos,R=math.rad,S=math.sin,P=math.pi,RNG=math.random,MRS=math.randomseed,H=math.huge,RRNG = function(min,max,div) return math.rad(math.random(min,max)/(div or 1)) end}


	function CreateSound(ID, PARENT, VOLUME, PITCH)
		local NSound = nil
		coroutine.resume(coroutine.create(function()
			NSound = Instance.new("Sound", PARENT)
			NSound.Volume = VOLUME
			NSound.Pitch = PITCH
			NSound.SoundId = "http://www.roblox.com/asset/?id="..ID
			swait()
			NSound:play()
			game:GetService("Debris"):AddItem(NSound, 10)
		end))
		return NSound
	end

	-------------------------------------------------------
	--End Important Functions--
	-------------------------------------------------------





	-------------------------------------------------------
	--Start Customization--
	-------------------------------------------------------
	local Player_Size = 1
	if Player_Size ~= 1 then
		root.Size = root.Size * Player_Size
		tors.Size = tors.Size * Player_Size
		hed.Size = hed.Size * Player_Size
		ra.Size = ra.Size * Player_Size
		la.Size = la.Size * Player_Size
		rl.Size = rl.Size * Player_Size
		ll.Size = ll.Size * Player_Size
		----------------------------------------------------------------------------------
		rootj.Parent = root
		neck.Parent = tors
		RW.Parent = tors
		LW.Parent = tors
		RH.Parent = tors
		LH.Parent = tors
		----------------------------------------------------------------------------------
		rootj.C0 = RootCF * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * angles(Rad(0), Rad(0), Rad(0))
		rootj.C1 = RootCF * CF(0 * Player_Size, 0 * Player_Size, 0 * Player_Size) * angles(Rad(0), Rad(0), Rad(0))
		neck.C0 = necko * CF(0 * Player_Size, 0 * Player_Size, 0 + ((1 * Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0))
		neck.C1 = CF(0 * Player_Size, -0.5 * Player_Size, 0 * Player_Size) * angles(Rad(-90), Rad(0), Rad(180))
		RW.C0 = CF(1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * angles(Rad(0), Rad(0), Rad(0)) --* RIGHTSHOULDERC0
		LW.C0 = CF(-1.5 * Player_Size, 0.5 * Player_Size, 0 * Player_Size) * angles(Rad(0), Rad(0), Rad(0)) --* LEFTSHOULDERC0
		----------------------------------------------------------------------------------
		RH.C0 = CF(1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
		LH.C0 = CF(-1 * Player_Size, -1 * Player_Size, 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
		RH.C1 = CF(0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
		LH.C1 = CF(-0.5 * Player_Size, 1 * Player_Size, 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0), Rad(0), Rad(0))
		--hat.Parent = Character
	end
	----------------------------------------------------------------------------------
	----------------------------------------------------------------------------------
	local equipped = false
	local idle = 0
	local change = 1
	local val = 0
	local toim = 0
	local idleanim = 0.4
	local sine = 0
	local Sit = 1
	----------------------------------------------------------------------------------
	hum.WalkSpeed = 20
	hum.JumpPower = 57
	----------------------------------------------------------------------------------
	local Hole = CreatePart(3, EffectModel, "Neon", 0, 0, "Really black", "Hole", Vector3.new(5,0,5))
	local MESH = MakeForm(Hole,"Cyl")


	local BODY = {}
	for _, c in pairs(char:GetDescendants()) do
		if c:IsA("BasePart") and c.Name ~= "Handle" then
			if c ~= root and c ~= tors and c ~= hed and c ~= ra and c ~= la and c ~= rl and c ~= ll then
				c.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
			end
			table.insert(BODY,{c,c.Parent,c.Material,c.Color,c.Transparency,c.Size,c.Name})
		elseif c:IsA("JointInstance") then
			table.insert(BODY,{c,c.Parent,nil,nil,nil,nil,nil})
		end
	end
	for e = 1, #BODY do
		if BODY[e] ~= nil then
			do
				local STUFF = BODY[e]
				local PART = STUFF[1]
				local PARENT = STUFF[2]
				local MATERIAL = STUFF[3]
				local COLOR = STUFF[4]
				local TRANSPARENCY = STUFF[5]
				if PART.ClassName == "Part" and PART ~= root then
					PART.Material = MATERIAL
					PART.Transparency = TRANSPARENCY
				end
			--[[PART.AncestryChanged:Connect(function()
				PART.Parent = PARENT
			end)--]]
			end
		end
	end
	function refit()
		coroutine.resume(coroutine.create(function()
			wait()
			hum.Died:connect(refit)
		end))
		char.Parent = workspace
		for e = 1, #BODY do
			if BODY[e] ~= nil then
				local STUFF = BODY[e]
				local PART = STUFF[1]
				local PARENT = STUFF[2]
				local MATERIAL = STUFF[3]
				local COLOR = STUFF[4]
				local TRANSPARENCY = STUFF[5]
				local SIZE = STUFF[6]
				local NAME = STUFF[7]
				if PART.ClassName == "Part" and PART:IsA("BasePart") and PART ~= root then
					PART.Material = MATERIAL
					PART.Transparency = TRANSPARENCY
					PART.Name = NAME
				end
				if PART.Parent ~= PARENT then
					if PART.Name == "Head" or PART.Name == "Neck" or PART.Name == "Torso" then
						hum:remove()
					end
					PART.Parent = PARENT
					if PART.Name == "Head" or PART.Name == "Neck" or PART.Name == "Torso" then
						hum = Instance.new("Humanoid",char)
					end
				end
			end
		end
	end
	local Regen = {}
	for e = 1, #Regen do
		if Regen[e] ~= nil then
			local STUFF = Regen[e]
			local PART = STUFF[1]
			local PARENT = STUFF[2]
			local MATERIAL = STUFF[3]
			local COLOR = STUFF[4]
			local TRANSPARENCY = STUFF[5]
			if PART.ClassName == "Part" and PART ~= BODY.root then
				PART.Material = MATERIAL
				PART.Color = COLOR
				PART.Transparency = TRANSPARENCY
			end
		--[[PART.AncestryChanged:Connect(function()
			PART.Parent = PARENT
		end)--]]
		end
	end
	function Refit()
		coroutine.resume(coroutine.create(function()
			wait()
			hum.Died:connect(Refit)	
		end))
		for i = 1,#Regen do
			local E = Regen[i]
			local PART = E[1]
			local PARENT = E[2]
			local COLOR = E[3]
			local SIZE = E[4]
			local MATERIAL = E[5]
			if PART:IsA("BasePart") and PART.Parent ~= PARENT then
				PART.Color = COLOR
				PART.Size = SIZE
				PART.Material = MATERIAL
			end
			if PART.Parent ~= PARENT then
				hum.Parent = nil
				PART.Parent = PARENT
				hum.Parent = char
			end
		end
		hum.Parent = char
	end
	function Parents()
		rootj.Parent = root
		neck.Parent = tors
		RW.Parent = tors
		LW.Parent = tors
		RH.Parent = tors
		LH.Parent = tors
		root.Parent = char
		la.Parent = char
		ra.Parent = char
		rl.Parent = char
		ll.Parent = char
		tors.Parent = char
		hed.Parent = char
	end
	local States = {
		"FallingDown";
		"PlatformStanding";
		"Physics";
		"Swimming";
		"Dead";
		"Ragdoll";
		"Seated";
	}
	for i,v in pairs(States) do
		hum:SetStateEnabled(v,false)
	end

	hum.Died:connect(function()
		refit()
		Refit()
		Parents()
	end)
	-------------------------------------------------------
	--End Customization--
	-------------------------------------------------------
	local Blobby = Instance.new("Part", char)
	Blobby.Name = "Blob"
	Blobby.CanCollide = false
	Blobby.BrickColor = BrickColor.new("Deep orange")
	Blobby.Transparency = 0
	Blobby.Material = "Neon"
	Blobby.Size = Vector3.new(1, 1, 2)
	Blobby.TopSurface = Enum.SurfaceType.Smooth
	Blobby.BottomSurface = Enum.SurfaceType.Smooth

	local Weld = Instance.new("Weld", Blobby)
	Weld.Part0 = ra
	Weld.Part1 = Blobby
	Weld.C1 = CFrame.new(0, 1, 0.4)
	Weld.C0 = CFrame.Angles(Rad(0),0,0)

	local M2 = Instance.new("SpecialMesh")
	M2.Parent = Blobby
	M2.MeshId = "rbxassetid://0"
	M2.TextureId = "rbxassetid://749019427"
	M2.Scale = Vector3.new(0.08, 0.08, 0.08)

--[[local naeeym2 = Instance.new("BillboardGui",char)
naeeym2.AlwaysOnTop = true
naeeym2.Size = UDim2.new(5,35,2,15)
naeeym2.StudsOffset = Vector3.new(0, 3.5, 0)
naeeym2.Adornee = hed
naeeym2.Name = "Name"
--naeeym2.PlayerToHideFrom = Player
local tecks2 = Instance.new("TextLabel",naeeym2)
tecks2.BackgroundTransparency = 1
tecks2.TextScaled = true
tecks2.BorderSizePixel = 0
tecks2.Text = "Fight Me"
tecks2.Font = Enum.Font.Bodoni
tecks2.TextSize = 30
tecks2.TextStrokeTransparency = 0
tecks2.TextColor3 = Color3.new(0, 0, 0)
tecks2.TextStrokeColor3 = Color3.new(1, 1, 1)
tecks2.Size = UDim2.new(1,0,0.5,0)
tecks2.Parent = naeeym2]]
	----------------------------------------------------------------------------------
	local AddInstance = function(Object, ...)
		local Obj = Instance.new(Object)
		for i,v in next,(...) do
			Obj[i] = v
		end
		return Obj
	end
	----------------------------------------------------


	-------------------------------------------------------

	-------------------------------------------------------
	--Start Attacks N Stuff--
	-------------------------------------------------------


	local naeeym2 = Instance.new("BillboardGui",char)
	naeeym2.AlwaysOnTop = true
	naeeym2.Size = UDim2.new(5,35,2,35)
	naeeym2.StudsOffset = Vector3.new(0,2,0)
	naeeym2.Adornee = hed
	naeeym2.Name = "Name"

	local tecks2 = Instance.new("TextLabel",naeeym2)
	tecks2.BackgroundTransparency = 1
	tecks2.TextScaled = true
	tecks2.BorderSizePixel = 0
	tecks2.Font = "Cartoon"
	tecks2.TextSize = 30
	tecks2.TextStrokeTransparency = 0
	tecks2.TextColor3 = BrickColor.new('Institutional white').Color
	tecks2.TextStrokeColor3 = BrickColor.new('Really black').Color
	tecks2.Size = UDim2.new(1,0,0.5,0)
	tecks2.Parent = naeeym2
	textfag = tecks2
	tecks2.Text = ":joy:"
	BTAUNT2:Play()
	coroutine.resume(coroutine.create(function()
		while textfag ~= nil do
			swait()
			textfag.Position = UDim2.new(math.random(-0.2,0.2),math.random(-3,9),.05,math.random(-10,10))  
			textfag.Rotation = math.random(-1.8,1.8)
		end
	end))

	BTAUNT4 = Instance.new("Sound", char)
	BTAUNT4.SoundId = "http://www.roblox.com/asset/?id=2658538628"
	BTAUNT4.Volume = 10
	BTAUNT4.Pitch = 1
	BTAUNT4.Parent = hed
	BTAUNT4.Looped = false

	BTAUNT7 = Instance.new("Sound", char)
	BTAUNT7.SoundId = "http://www.roblox.com/asset/?id=2770017501"
	BTAUNT7.Volume = 1.5
	BTAUNT7.Pitch = 1
	BTAUNT7.Parent = char
	BTAUNT7.Looped = false

	BTAUNT6 = Instance.new("Sound", char)
	BTAUNT6.SoundId = "http://www.roblox.com/asset/?id=2675983782"
	BTAUNT6.Volume = 10
	BTAUNT6.Pitch = 1
	BTAUNT6.Parent = hed
	BTAUNT6.Looped = false

	BTAUNT5 = Instance.new("Sound", char)
	BTAUNT5.SoundId = "http://www.roblox.com/asset/?id=468944969"
	BTAUNT5.Volume = 3.5
	BTAUNT5.Pitch = 1
	BTAUNT5.Parent = hed
	BTAUNT5.Looped = false

	BTAUNT3 = Instance.new("Sound", char)
	BTAUNT3.SoundId = "http://www.roblox.com/asset/?id=4565988898"
	BTAUNT3.Volume = 2
	BTAUNT3.Pitch = 1
	BTAUNT3.Parent = hed
	BTAUNT3.Looped = false

	function muda()
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
	end
	function roadroller()
		attack = true
		BTAUNT2:Stop()
		BTAUNT7:Play()
		local Container = Instance.new("Part", char)
		Container.Name = "Blob"
		Container.CanCollide = false
		Container.BrickColor = BrickColor.new("Deep orange")
		Container.Transparency = 0
		Container.Material = "Neon"
		Container.Size = Vector3.new(1, 1, 2)
		Container.TopSurface = Enum.SurfaceType.Smooth
		Container.BottomSurface = Enum.SurfaceType.Smooth

		local aWeld = Instance.new("Weld", Container)
		aWeld.Part0 = tors
		aWeld.Part1 = Container
		aWeld.C1 = CFrame.new(0, 10, 0)
		aWeld.C0 = CFrame.Angles(Rad(0),0,0)

		local M2 = Instance.new("SpecialMesh")
		M2.Parent = Container
		M2.MeshId = "rbxassetid://489989415"
		M2.TextureId = "rbxassetid://489989506"
		M2.Scale = Vector3.new(1, 1, 1)
		for i = 0,67,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 220* Player_Size) * angles(Rad(0 - 0 * Sin(sine / 1.5)), Rad(0 + 0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0* Cos(sine / 12)), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0* Cos(sine / 12)), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
		end
		for i = 0,40,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, -6, 0 + ((1* Player_Size) - 1)) * angles(Rad(90), Rad(0), Rad(0)), 1)
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(90 - 0 * Sin(sine / 1.5)), Rad(0 + 0 * Cos(sine / 1.5)), Rad(0)), 0.15)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
		end
		for i = 0,46,0.1 do
			swait()
			change = 1
			root.Anchored = true
			aWeld.Part0 = root
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			Container.Size = Vector3.new(15, 5, 5)
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(20), Rad(0)), 0.05)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
		end
		Container.CanCollide = true
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			root.Anchored = false
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0.4, 0.3 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0.6 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.6, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, -1, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(1, 0, 0.1 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.5, 0.1, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.4, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.4, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, -0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 1, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.8		, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.8, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.7, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0.5, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0.9 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 1, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0.8, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,0.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-20)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(60)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, -3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 3* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.3, 0, 0.5 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.1, .6, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		muda()
		aWeld.C1 = clerp(aWeld.C1, CF(.6, -0.4, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
		for i = 0,20.1,0.1 do
			swait()
			change = 1
			aWeld.C1 = clerp(aWeld.C1, CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-30)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(-30)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0.5* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(-90 + 0* Cos(sine / 12))), 0.6)
		end
		for i, v in pairs(FindNearestHead(Container.CFrame.p, 19.5)) do
			if v:FindFirstChild("Head") then
				Eviscerate(v)
				Cso("1744093986", v, 10, 1)
			end
		end
		for i = 0, 9 do
			Magic(0.5, "Add", Container.CFrame, Vector3.new(60,80,50), 2, BrickC("Deep orange"), "Sphere")
			Magic(2, "Add", Container.CFrame, Vector3.new(60,80,50), 2, BrickC("Dark orange"), "Sphere")
			Aura(3, 5.5, "Add", Container.CFrame * CFrame.Angles(math.rad(math.random(-360, 360)), math.rad(math.random(-360, 360)), math.rad(math.random(-360, 360))), 5, 5, 50, -0.05, BrickC("Deep orange"), 0, "Sphere")
			change = 1
		end
		for i = 0,20.1,0.1 do
			swait()
			aWeld.C1 = clerp(aWeld.C1, CF(0 + 0.5* Player_Size * Sin(sine / 1.2), 0 + 0.5* Player_Size * Sin(sine / 1.2), 0 + 0.5* Player_Size * Sin(sine / 1.2) + ((1* Player_Size) - 1)) * angles(Rad(0), Rad(0), Rad(0)), 1)
			aWeld.Part0 = root
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(-30)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0* Player_Size * Sin(sine / 1.2)* Player_Size, 7* Player_Size) * angles(Rad(70 - 0 * Sin(sine / 1.5)), Rad(0), Rad(30)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(70)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0.5* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		BTAUNT7:Stop()
		BTAUNT2:Play()
		Container:Remove()
		tecks2.Text = ":joy:"
		change = 1.7
		attack = false
	end

	function bruhmoment()
		attack = true
		BTAUNT3:Play()
		while BTAUNT3.Playing == true do
			tecks2.Text = "He spittin facts"
			for i = 0,7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 90 * Sin(sine / 5)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0.5* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0.3* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0.3* Player_Size * Sin(sine / 1.2)) * angles(Rad(0), Rad(0), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0* Cos(sine / 12)), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
		end
		if BTAUNT3.Playing == false then
			tecks2.Text = ":joy:"
			change = 1.7
			attack = false
		end
	end

	function when()
		attack = true
		BTAUNT5:Play()
		while BTAUNT5.Playing == true do
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				BTAUNT5.Pitch = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			BTAUNT5:Stop()
			for i = 0,0.5,0.1 do
				swait()
				change = 2
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0 + 0.2 * Player_Size * Sin(sine / 3.5),0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.2 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(30)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
		end
		if BTAUNT5.Playing == false then
			tecks2.Text = "Touture Dance"
			change = 1.7
			attack = false
		end
	end
	function isthatajojoreference()
		attack = true
		BTAUNT2:Stop()
		BTAUNT6:Play()
		for i = 0,7.5,0.1 do
			swait()
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(-0,0.4,-0.5) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,5.5,0.1 do
			swait()
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(-0,0.4,-0.5) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(170), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(127), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		print("1!")
		for i = 0,7.5,0.1 do
			swait()
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(-0,0.4,-0.5) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,5.5,0.1 do
			swait()
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(-0,0.4,-0.5) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(170), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(127), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		print("2!")
		for i = 0,4.5,0.1 do
			swait()
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(-0,0.4,-0.5) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,5.5,0.1 do
			swait()
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(-0,0.4,-0.5) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(170), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(127), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		print("3!")
		for i = 0,5.5,0.1 do
			swait()
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(-0,0.4,-0.5) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(120), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		for i = 0,5.5,0.1 do
			swait()
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(-0,0.4,-0.5) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(170), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(127), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
		end
		print("4!")
		while BTAUNT6.Playing == true do
			for i = 0,2.5,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0,0) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(75), Rad(-0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-75), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, -0.1 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(130 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.4* Player_Size, 0.25 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0.5,0,0) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(75), Rad(-0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-75), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, -0.15 - 0 * Cos(sine / 12)* Player_Size, -0.3* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(120 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.8* Player_Size, 0.25 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,2.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(10 + 0 * Sin(sine / 12)), Rad(0), Rad(60)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-1,-1,-0.2) * angles(Rad(10), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.5  * Player_Size) * angles(Rad(0), Rad(97), Rad(10)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.5 * Player_Size) * angles(Rad(0), Rad(-97), Rad(-10)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(170 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.8* Player_Size, 0.25 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(10 + 0 * Sin(sine / 12)), Rad(0), Rad(60)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-0.5,-1,-0.2) * angles(Rad(10), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.5  * Player_Size) * angles(Rad(0), Rad(97), Rad(10)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.5 * Player_Size) * angles(Rad(0), Rad(-97), Rad(-10)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, -0.15 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(120 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.8* Player_Size, 0.25 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,2.5,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-1,0,0) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0  * Player_Size) * angles(Rad(0), Rad(75), Rad(-0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), 0 * Player_Size) * angles(Rad(0), Rad(-75), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, -0.25 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(130 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.8* Player_Size, 0.25 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,2.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(10 + 0 * Sin(sine / 12)), Rad(0), Rad(60)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-2,-1,-0.2) * angles(Rad(10), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.5  * Player_Size) * angles(Rad(0), Rad(97), Rad(10)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.5 * Player_Size) * angles(Rad(0), Rad(-97), Rad(-10)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.25 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(170 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.8* Player_Size, 0.25 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,1.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-2,0.4,-0.5) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -0.6 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(30)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -0.6 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(-30)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(150), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(150), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,2,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-30 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-2,0.4,-0.5) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(0), Rad(85), Rad(-30)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(30)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(60), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(60), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 0.6)
			end
			for i = 0,3.4,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-30 + 0 * Sin(sine / 12)), Rad(0), Rad(-40)), 0.1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-2,0.4,-0.1) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1.5 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(-40), Rad(85), Rad(30)) * angles(Rad(30 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(-30)) * angles(Rad(20 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				RW.C0 = clerp(RW.C0, CF(0.8* Player_Size, -0.5 - 0 * Cos(sine / 12)* Player_Size, -0.8* Player_Size) * angles(Rad(60), Rad(0+ 0* Sin(sine / 20)), Rad(-50 + 0* Cos(sine / 12))), 0.1)
				LW.C0 = clerp(LW.C0, CF(0.2* Player_Size, 0.65 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(60), Rad(0+ 0* Sin(sine / 20)), Rad(120 + 0* Cos(sine / 12))), 0.1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-2,0.4,0.8) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(-50)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.2,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(-1,0.4,0.8) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(-100)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.4,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0.4,0.2) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(-150)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.4,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0.4,0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,1.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 + 0 * Sin(sine / 12)), Rad(0), Rad(10)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(.8,0.4,-0) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.15  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.15 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.2* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-30 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.15 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-130 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,1.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 + 0 * Sin(sine / 12)), Rad(0), Rad(30)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1,0.4,-0) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.15  * Player_Size) * angles(Rad(0), Rad(95), Rad(0)) * angles(Rad(-23 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.15 * Player_Size) * angles(Rad(0), Rad(-95), Rad(0)) * angles(Rad(-23 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.2* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-30 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.15 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-60 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,1.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 + 0 * Sin(sine / 12)), Rad(0), Rad(10)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.5,0.4,-0) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.15  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.15 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-30 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.15 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-130 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,1.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-40 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.5,0.4,-0) * angles(Rad(20), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.7)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55  * Player_Size) * angles(Rad(0), Rad(85), Rad(20)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55 * Player_Size) * angles(Rad(0), Rad(-85), Rad(-20)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.5)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.85 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-40 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.85 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,0.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.5,0.4,-0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55  * Player_Size) * angles(Rad(0), Rad(85), Rad(30)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55 * Player_Size) * angles(Rad(0), Rad(-85), Rad(-30)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.35 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-40 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.35 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,1.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.5,0.4,-0) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55  * Player_Size) * angles(Rad(0), Rad(85), Rad(-0)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.85 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-40 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.85 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,1,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.5,0.4,-0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55  * Player_Size) * angles(Rad(0), Rad(85), Rad(30)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55 * Player_Size) * angles(Rad(0), Rad(-85), Rad(-30)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.15 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-30 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.15 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(30 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,0.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.2,0.4,-0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55  * Player_Size) * angles(Rad(0), Rad(85), Rad(30)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55 * Player_Size) * angles(Rad(0), Rad(-85), Rad(-30)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.35 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-40 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.35 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,2.7,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.8,0.4,-0) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55  * Player_Size) * angles(Rad(0), Rad(85), Rad(-0)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.85 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-40 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.85 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(40 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,2,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 0.5)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.2,0.4,-0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55  * Player_Size) * angles(Rad(0), Rad(85), Rad(30)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1* Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.55 * Player_Size) * angles(Rad(0), Rad(-85), Rad(-30)) * angles(Rad(-13 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.15 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(-30 + 0* Cos(sine / 12))), 0.5)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.15 - 0 * Cos(sine / 12)* Player_Size, -0.2* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(30 + 0* Cos(sine / 12))), 0.5)
			end
			for i = 0,3.4,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-30 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 0.1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1.5,0.4,-0) * angles(Rad(30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1.5 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75  * Player_Size) * angles(Rad(-40), Rad(85), Rad(30)) * angles(Rad(30 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0.75 * Player_Size) * angles(Rad(0), Rad(-85), Rad(-30)) * angles(Rad(20 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 0.1)
				RW.C0 = clerp(RW.C0, CF(0.8* Player_Size, -0.5 - 0 * Cos(sine / 12)* Player_Size, -0.8* Player_Size) * angles(Rad(60), Rad(0+ 0* Sin(sine / 20)), Rad(-50 + 0* Cos(sine / 12))), 0.1)
				LW.C0 = clerp(LW.C0, CF(0.2* Player_Size, 0.65 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(60), Rad(0+ 0* Sin(sine / 20)), Rad(120 + 0* Cos(sine / 12))), 0.1)
			end
			for i = 0,0.5,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(1,0.4,0.8) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(-50)), 1)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0.5* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.2,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0.5,0.4,0.8) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(-100)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.4,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0.4,0.2) * angles(Rad(0), Rad(0 * Cos(sine / 1.5)), Rad(-150)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
			for i = 0,0.4,0.1 do
				swait()
				change = 1
				neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(40)), 1)
				rootj.C0 = clerp(rootj.C0, RootCF * CF(0,0.4,0) * angles(Rad(-30), Rad(0 * Cos(sine / 1.5)), Rad(0)), 0.6)
				RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0  * Player_Size) * angles(Rad(0), Rad(85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 3.5), -0 * Player_Size) * angles(Rad(0), Rad(-85), Rad(0)) * angles(Rad(-3 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
				RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
				LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.45 - 0 * Cos(sine / 12)* Player_Size, -0* Player_Size) * angles(Rad(0), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			end
		end
		BTAUNT2:Play()
		attack = false
	end


	function discord()
		attack = true
		BTAUNT2:Stop()
		tecks2.Text = "car noises"
		hum.WalkSpeed = 100
		BTAUNT4:Play()
		la.Transparency = 1
		ra.Transparency = 1
		for i = 0,17,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, -0.6, -1.5 + ((1* Player_Size) - 1)) * angles(Rad(90 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0,-2.6,-2) * angles(Rad(-90), Rad(0 + 10 * Cos(sine / 1.5)), Rad(0)), 1)
			RH.C0 = clerp(RH.C0, CF(1.8 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0.7  * Player_Size) * angles(Rad(0), Rad(90), Rad(-180)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1.8 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0.7 * Player_Size) * angles(Rad(0), Rad(-90), Rad(180)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(0* Player_Size, -1.55 - 0 * Cos(sine / 12)* Player_Size, -0.7* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			LW.C0 = clerp(LW.C0, CF(-0* Player_Size, -2.55 - 0 * Cos(sine / 12)* Player_Size, -0.7* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
		end
		for i = 0,97,0.05 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, -0.6, -1.5 + ((1* Player_Size) - 1)) * angles(Rad(90 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0,-2.6,-2) * angles(Rad(-90), Rad(0 + 10 * Cos(sine / 1.5)), Rad(0)), 1)
			RH.C0 = clerp(RH.C0, CF(1.8 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0.7  * Player_Size) * angles(Rad(0), Rad(90), Rad(-180)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1.8 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0.7 * Player_Size) * angles(Rad(0), Rad(-90), Rad(180)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(0* Player_Size, -1.55 - 0 * Cos(sine / 12)* Player_Size, -0.7* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
			LW.C0 = clerp(LW.C0, CF(-0* Player_Size, -2.55 - 0 * Cos(sine / 12)* Player_Size, -0.7* Player_Size) * angles(Rad(90), Rad(0+ 0* Sin(sine / 20)), Rad(0 + 0* Cos(sine / 12))), 1)
		end
		BTAUNT4:Stop()
		hum.WalkSpeed = 20
		la.Transparency = 0
		ra.Transparency = 0
		tecks2.Text = ":joy:"
		BTAUNT2:Play()
		change = 1.7
		attack = false
	end

	function E()
		attack = true
		Cso("1937272483", hed, 10, 1)
		tecks2.Text = "E"
		for i = 0,7,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0.5* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0.3* Player_Size * Sin(sine / 1.2)* Player_Size, 0.8 + 0.3* Player_Size * Sin(sine / 1.2)) * angles(Rad(0 - 10 * Sin(sine / 1.5)), Rad(0 + 10 * Cos(sine / 1.5)), Rad(0)), 1)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(0)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0* Cos(sine / 12)), Rad(0+ 0* Sin(sine / 20)), Rad(90 + 0* Cos(sine / 12))), 1)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(0* Cos(sine / 12)), Rad(0+ 0* Sin(sine / 20)), Rad(-90 + 0* Cos(sine / 12))), 1)
		end
		tecks2.Text = ":joy:"
		change = 1.7
		attack = false
	end




	function bruh()
		attack = true
		Cso("4615152991", hed, 10, 1)
		tecks2.Text = "me going to the poop dimension"
		for i = 0,7,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0.5* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0.3* Player_Size * Sin(sine / 1.2)* Player_Size, 0.8 + 0.3* Player_Size * Sin(sine / 1.2)) * angles(Rad(-70 - 10 * Sin(sine / 1.5)), Rad(0 + 10 * Cos(sine / 1.5)), Rad(0)), 0.11)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-50)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(50)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(-70), Rad(0+ 0* Sin(sine / 20)), Rad(20 + 0* Cos(sine / 12))), 1)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(-70), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
		end
		for i = 0,7,0.1 do
			swait()
			change = 1
			neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(0 + 0 * Sin(sine / 12)), Rad(0), Rad(0)), 1)
			rootj.C0 = clerp(rootj.C0, RootCF * CF(0 + 0.5* Player_Size * Sin(sine / 1.2)* Player_Size, 0 + 0.3* Player_Size * Sin(sine / 1.2)* Player_Size, 45.8 + 0* Player_Size * Sin(sine / 1.2)) * angles(Rad(-70 - 10 * Sin(sine / 1.5)), Rad(0 + 10 * Cos(sine / 1.5)), Rad(0)), 0.03)
			RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0  * Player_Size) * angles(Rad(0), Rad(90), Rad(-50)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0 * Player_Size * Sin(sine / 12), 0 * Player_Size) * angles(Rad(0), Rad(-90), Rad(50)) * angles(Rad(0 - 0 * Cos(sine / 12)), Rad(0), Rad(0)), 1)
			RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(-70), Rad(0+ 0* Sin(sine / 20)), Rad(20 + 0* Cos(sine / 12))), 1)
			LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(-70), Rad(0+ 0* Sin(sine / 20)), Rad(-20 + 0* Cos(sine / 12))), 1)
		end
		tecks2.Text = ":joy:"
		change = 1.7
		attack = false
	end
	local Head1 = Instance.new("Part", char)
	Head1.Name = "Blob"
	Head1.CanCollide = false
	Head1.BrickColor = BrickColor.new("Really black")
	Head1.Transparency = 1
	Head1.Material = "Plastic"
	Head1.Size = Vector3.new(1, 1, 1)
	Head1.TopSurface = Enum.SurfaceType.Smooth
	Head1.BottomSurface = Enum.SurfaceType.Smooth

	local Weld = Instance.new("Weld", Head1)
	Weld.Part0 = tors
	Weld.Part1 = Head1
	Weld.C1 = CFrame.new(0, 0, 0)
	Weld.C0 = CFrame.Angles(Rad(0),0,0)

	local M3 = Instance.new("SpecialMesh")
	M3.Parent = Head1
	M3.MeshType = "Brick"
	M3.Scale = Vector3.new(5, 5, 5)
	face1 = Instance.new("Decal", Head1)
	face1.Face = "Front"
	face1.Transparency = 1
	face1.Texture = "rbxassetid://153159982"


	-------------------------------------------------------
	--End Attacks N Stuff--
	-------------------------------------------------------
	mouse.KeyDown:connect(function(key)
		if attack == false then
			if key == "e" then
				E()
			elseif key == "z" then
				bruh()
			elseif key == "t" then
				face1.Transparency = 0
				Head1.Transparency = 0
				Cso("1747834381", hed, 10, 1)
				BTAUNT2:Stop()
				wait(19) 
				Cso("3173571164", hed, 10, 1)
				Head1.Transparency = 1
				face1.Transparency = 1
				wait(19)
				BTAUNT2:Play()
			elseif key == "r" then
				roadroller()
			elseif key == "x" then
				bruhmoment()
			elseif key == "c" then
				discord()
			elseif key == "v" then
				when()
			elseif key == "f" then
				isthatajojoreference()
			end
		end
	end)

	local FakeVel = Vector3.new(0,0,0)
	if lplr == Player then
		spawn(function()
			while true do
				local Positions = {}
				local Speeds = {}
				for i = 1,10 do
					table.insert(Positions, root.CFrame)
					table.insert(Speeds, root.Velocity)
					swait()
				end
			end
		end)
	end

	if lplr ~= Player then
		local Last = root.Position
		Mover.OnClientEvent:Connect(function(v, Speed)
			for i,v2 in pairs(v) do
				FakeVel = Speed[i]
				if v[i].p ~= Last then
					if MoverSpeed.Value == "Remote" then
						root.CFrame = v[i]
					end
					Last = v[i].p
					swait()
				end
			end
		end)
		spawn(function()
			while true do
				game:GetService("RunService").RenderStepped:wait()
				FakeRoot = workspace.Terrain:WaitForChild(Player.Name.." char tracker")
				if MoverSpeed.Value == "Smooth" then
					root.CFrame = FakeRoot.CFrame
				end
			end
		end)
	end

	-------------------------------------------------------
	--Start Damage Function--
	-------------------------------------------------------
	function PixelBlock(bonuspeed,FastSpeed,type,pos,x1,y1,z1,value,color,outerpos) --Thanks, Star Glitcher!
		local type = type
		local rng = Instance.new("Part", char)
		rng.Anchored = true
		rng.BrickColor = color
		rng.CanCollide = false
		rng.FormFactor = 3
		rng.Name = "Ring"
		rng.Material = "Neon"
		rng.Size = Vector3.new(1, 1, 1)
		rng.Transparency = 0
		rng.TopSurface = 0
		rng.BottomSurface = 0
		rng.CFrame = pos
		rng.CFrame = rng.CFrame + rng.CFrame.lookVector*outerpos
		local rngm = Instance.new("SpecialMesh", rng)
		rngm.MeshType = "Brick"
		if rainbowmode == true then
			rng.Color = Color3.new(r/255,g/255,b/255)
		end
		local scaler2 = 1
		local speeder = FastSpeed/10
		if type == "Add" then
			scaler2 = 1*value
		elseif type == "Divide" then
			scaler2 = 1/value
		end
		coroutine.resume(coroutine.create(function()
			for i = 0,10/bonuspeed,0.1 do
				swait()
				if type == "Add" then
					scaler2 = scaler2 - 0.01*value/bonuspeed
				elseif type == "Divide" then
					scaler2 = scaler2 - 0.01/value*bonuspeed
				end
				speeder = speeder - 0.01*FastSpeed*bonuspeed/10
				rng.CFrame = rng.CFrame + rng.CFrame.lookVector*speeder*bonuspeed
				rng.Transparency = rng.Transparency + 0.01*bonuspeed
			end
			rng:Destroy()
		end))
	end

	function Damage(Part, hit, minim, maxim, knockback, Type, Property, Delay, HitSound, HitPitch)
		if hit.Parent == nil then
			return
		end
		local h = hit.Parent:FindFirstChildOfClass("Humanoid")
		for _, v in pairs(hit.Parent:children()) do
			if v:IsA("Humanoid") then
				h = v
			end
		end
		if h ~= nil and hit.Parent.Name ~= char.Name and hit.Parent:FindFirstChild("UpperTorso") ~= nil then

			hit.Parent:FindFirstChild("Head"):BreakJoints()
		end

		if h ~= nil and hit.Parent.Name ~= char.Name and hit.Parent:FindFirstChild("Torso") ~= nil then
			if hit.Parent:findFirstChild("DebounceHit") ~= nil then
				if hit.Parent.DebounceHit.Value == true then
					return
				end
			end
			if insta == true then
				hit.Parent:FindFirstChild("Head"):BreakJoints()
			end
			local c = Create("ObjectValue"){
				Name = "creator",
				Value = Player,
				Parent = h,
			}
			game:GetService("Debris"):AddItem(c, .5)
			if HitSound ~= nil and HitPitch ~= nil then
				CFuncs.Sound.Create(HitSound, hit, 1, HitPitch) 
			end
			local Damage = math.random(minim, maxim)
			local blocked = false
			local block = hit.Parent:findFirstChild("Block")
			if block ~= nil then
				if block.className == "IntValue" then
					if block.Value > 0 then
						blocked = true
						block.Value = block.Value - 1
						print(block.Value)
					end
				end
			end
			if blocked == false then
				--h.Health = h.Health - Damage
				ShowDamage((Part.CFrame * CFrame.new(0, 0, (Part.Size.Z / 2)).p + Vector3.new(0, 1.5, 0)), -Damage, 1.5, tors.BrickColor.Color)
			else
				--h.Health = h.Health - (Damage / 2)
				ShowDamage((Part.CFrame * CFrame.new(0, 0, (Part.Size.Z / 2)).p + Vector3.new(0, 1.5, 0)), -Damage, 1.5, tors.BrickColor.Color)
			end
			if Type == "Knockdown" then
				local hum = hit.Parent.Humanoid
				hum.PlatformStand = true
				coroutine.resume(coroutine.create(function(HHumanoid)
					swait(1)
					HHumanoid.PlatformStand = false
				end), hum)
				local angle = (hit.Position - (Property.Position + Vector3.new(0, 0, 0))).unit
				local bodvol = Create("BodyVelocity"){
					velocity = angle * knockback,
					P = 5000,
					maxForce = Vector3.new(8e+003, 8e+003, 8e+003),
					Parent = hit,
				}
				local rl = Create("BodyAngularVelocity"){
					P = 3000,
					maxTorque = Vector3.new(500000, 500000, 500000) * 50000000000000,
					angularvelocity = Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
					Parent = hit,
				}
				game:GetService("Debris"):AddItem(bodvol, .5)
				game:GetService("Debris"):AddItem(rl, .5)
			elseif Type == "Normal" then
				local vp = Create("BodyVelocity"){
					P = 500,
					maxForce = Vector3.new(math.huge, 0, math.huge),
					velocity = Property.CFrame.lookVector * knockback + Property.Velocity / 1.05,
				}
				if knockback > 0 then
					vp.Parent = hit.Parent.Torso
				end
				game:GetService("Debris"):AddItem(vp, .5)
			elseif Type == "Up" then
				local bodyVelocity = Create("BodyVelocity"){
					velocity = Vector3.new(0, 20, 0),
					P = 5000,
					maxForce = Vector3.new(8e+003, 8e+003, 8e+003),
					Parent = hit,
				}
				game:GetService("Debris"):AddItem(bodyVelocity, .5)
			elseif Type == "DarkUp" then
				coroutine.resume(coroutine.create(function()
					for i = 0, 1, 0.1 do
						swait()
						Effects.Block.Create(BrickColor.new("Royal purple"), hit.Parent.Torso.CFrame, 5, 5, 5, 1, 1, 1, .08, 1)
					end
				end))
				local bodyVelocity = Create("BodyVelocity"){
					velocity = Vector3.new(0, 20, 0),
					P = 5000,
					maxForce = Vector3.new(8e+003, 8e+003, 8e+003),
					Parent = hit,
				}
				game:GetService("Debris"):AddItem(bodyVelocity, 1)
			elseif Type == "Snare" then
				local bp = Create("BodyPosition"){
					P = 2000,
					D = 100,
					maxForce = Vector3.new(math.huge, math.huge, math.huge),
					position = hit.Parent.Torso.Position,
					Parent = hit.Parent.Torso,
				}
				game:GetService("Debris"):AddItem(bp, 1)
			elseif Type == "Freeze" then
				local BodPos = Create("BodyPosition"){
					P = 50000,
					D = 1000,
					maxForce = Vector3.new(math.huge, math.huge, math.huge),
					position = hit.Parent.Torso.Position,
					Parent = hit.Parent.Torso,
				}
				local BodGy = Create("BodyGyro") {
					maxTorque = Vector3.new(4e+005, 4e+005, 4e+005) * math.huge ,
					P = 20e+003,
					Parent = hit.Parent.Torso,
					cframe = hit.Parent.Torso.CFrame,
				}
				hit.Parent.Torso.Anchored = true
				coroutine.resume(coroutine.create(function(Part) 
					swait(1.5)
					Part.Anchored = false
				end), hit.Parent.Torso)
				game:GetService("Debris"):AddItem(BodPos, 3)
				game:GetService("Debris"):AddItem(BodGy, 3)
			end
			local debounce = Create("BoolValue"){
				Name = "DebounceHit",
				Parent = hit.Parent,
				Value = true,
			}
			game:GetService("Debris"):AddItem(debounce, Delay)
			c = Create("ObjectValue"){
				Name = "creator",
				Value = Player,
				Parent = h,
			}
			game:GetService("Debris"):AddItem(c, .5)
		end
	end

	function damage(range,mindam,maxdam,pos)
		if true then return end
	end
	-------------------------------------------------------
	--End Damage Function--
	-------------------------------------------------------

	-------------------------------------------------------
	--Start Animations--
	-------------------------------------------------------
	print("By XandersAltAccount1")
	while true do
		swait()
		sine = sine + change
		local torvel = (FakeVel * Vector3.new(1, 0, 1)).magnitude
		local velderp = FakeVel.y
		if lplr == plr then
			torvel = (root.Velocity * Vt(1, 0, 1)).magnitude
			velderp = root.Velocity.y
		end
		hitfloor, posfloor = rayCast(root.Position, CFrame.new(root.Position, root.Position - Vector3.new(0, 1, 0)).lookVector, 4* Player_Size, char)
		if equipped == true or equipped == false then
			if attack == false then
				idle = idle + 1
			else
				idle = 0
			end
			if 1 < root.Velocity.y and hitfloor == nil then
				Anim = "Jump"
				if attack == false then
					rootj.C0 = clerp(rootj.C0, RootCF * CF(0* Player_Size, 0* Player_Size, 0.9 + 0.5* Player_Size * Cos(sine / -15)) * angles(Rad(0), Rad(0), Rad(0)), 0.17)
					neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(10 - 2.5 * Sin(sine / 30)), Rad(0), Rad(0)), 0.3)
					RH.C0 = clerp(RH.C0, CF(1* Player_Size, -.2 - 0.1 * Cos(sine / 20)* Player_Size, -.3* Player_Size) * RHCF * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
					LH.C0 = clerp(LH.C0, CF(-1* Player_Size, -.9 - 0.1 * Cos(sine / 20), -.5* Player_Size) * LHCF * angles(Rad(-2.5), Rad(0), Rad(0)), 0.15)
					RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.5 + 0.02 * Sin(sine / 20)* Player_Size, 0* Player_Size) * angles(Rad(25), Rad(-.6), Rad(13 + 4.5 * Sin(sine / 20))), 0.1)
					LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.5 + 0.02 * Sin(sine / 20)* Player_Size, 0* Player_Size) * angles(Rad(25), Rad(-.6), Rad(-13 - 4.5 * Sin(sine / 20))), 0.1)
				end
			elseif -1 > root.Velocity.y and hitfloor == nil then
				Anim = "Fall"
				if attack == false then
					rootj.C0 = clerp(rootj.C0, RootCF * CF(0* Player_Size, 0* Player_Size, -0.1 + 0.1 * Cos(sine / 20)* Player_Size) * angles(Rad(24), Rad(0), Rad(0)), 0.15)
					neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(10 - 2.5 * Sin(sine / 30)), Rad(0), Rad(0)), 0.3)
					RH.C0 = clerp(RH.C0, CF(1* Player_Size, -1 - 0.1 * Cos(sine / 20)* Player_Size, -.3* Player_Size) * RHCF * angles(Rad(-3.5), Rad(0), Rad(0)), 0.15)
					LH.C0 = clerp(LH.C0, CF(-1* Player_Size, -.8 - 0.1 * Cos(sine / 20)* Player_Size, -.3* Player_Size) * LHCF * angles(Rad(-3.5), Rad(0), Rad(0)), 0.15)
					RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.5 + 0.02 * Sin(sine / 20)* Player_Size, 0* Player_Size) * angles(Rad(65), Rad(-.6), Rad(45 + 4.5 * Sin(sine / 20))), 0.1)
					LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.5 + 0.02 * Sin(sine / 20)* Player_Size, 0* Player_Size) * angles(Rad(55), Rad(-.6), Rad(-45 - 4.5 * Sin(sine / 20))), 0.1)
				end
			elseif torvel < 1 and hitfloor ~= nil then
				Anim = "Idle"
				change = 1.75
				if attack == false then
					neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-10 + 12.5 * Sin(sine / 12)), Rad(0), Rad(0)), 0.3)
					rootj.C0 = clerp(rootj.C0, RootCF * CF(0* Player_Size, 0* Player_Size, -0.1 + 0.3* Player_Size * Sin(sine / 12)) * angles(Rad(0 - 0 * Sin(sine / 20)), Rad(0 + 0 * Cos(sine / 20)), Rad(0)), 0.35)
					RH.C0 = clerp(RH.C0, CF(1 * Player_Size, -1 * Player_Size - 0.3 * Player_Size * Sin(sine / 12), -0.5  * Player_Size) * angles(Rad(0), Rad(76), Rad(-10)) * angles(Rad(-13 - -7 * Cos(sine / 12)), Rad(0), Rad(0)), 0.35)
					LH.C0 = clerp(LH.C0, CF(-1 * Player_Size, -1 * Player_Size - 0.3 * Player_Size * Sin(sine / 12), -0.5 * Player_Size) * angles(Rad(0), Rad(-76), Rad(10)) * angles(Rad(-13 - -7 * Cos(sine / 12)), Rad(0), Rad(0)), 0.35)
					RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.55 - 0.15 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10* Cos(sine / 12)), Rad(0+ 0* Sin(sine / 20)), Rad(10 + -12.5 * Cos(sine / 12))), 0.12)
					LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.55 - 0.15 * Cos(sine / 12)* Player_Size, 0* Player_Size) * angles(Rad(10* Cos(sine / 12)), Rad(0+ 0* Sin(sine / 20)), Rad(-10 + 12.5 * Cos(sine / 12))), 0.12)
				end
			elseif torvel > 2 and torvel < 25 and hitfloor ~= nil then
				Anim = "Walk"
				change = 1.3
				if attack == false then
					rootj.C0 = clerp(rootj.C0, RootCF * CF(0* Player_Size, 0* Player_Size, 0.375 + -0.73 * Sin(sine / 3.5) + -Sin(sine / 3.5) / 1* Player_Size) * angles(Rad(-3 - 32.5 * Cos(sine / 3.5)), Rad(0) - root.RotVelocity.Y / 75, Rad(1 * Cos(sine / 7))), 0.15)
					neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(30 * Sin(sine / 3.5)), Rad(0), Rad(0 * Cos(sine / 7)) - hed.RotVelocity.Y / 15), 0.3)
					RH.C0 = clerp(RH.C0, CF(1* Player_Size, -0.8 - 1 * Cos(sine / 7) / 2* Player_Size, 0.8 * Cos(sine / 7) / 0.7* Player_Size)  * angles(Rad(-10 - 25 * Cos(sine / 7)) - rl.RotVelocity.Y / 75 + -Sin(sine / 7) / 2, Rad(90 - 15 * Cos(sine / 7)), Rad(0)) * angles(Rad(0 + 2 * Cos(sine / 7)), Rad(0), Rad(-0)), 0.3)
					LH.C0 = clerp(LH.C0, CF(-1* Player_Size, -0.8 + 1 * Cos(sine / 7) / 2* Player_Size, -0.8 * Cos(sine / 7) / 0.7* Player_Size) * angles(Rad(-10 + 25 * Cos(sine / 7)) + ll.RotVelocity.Y / 75 + Sin(sine / 7) / 2, Rad(-90 - 15 * Cos(sine / 7)), Rad(0)) * angles(Rad(0 - 2 * Cos(sine / 7)), Rad(0), Rad(0)), 0.3)
					RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.5 + 0.05 * Sin(sine / 7)* Player_Size, 0* Player_Size) * angles(Rad(137)  * Cos(sine / 7) , Rad(10 * Cos(sine / 7)), Rad(0) - ra.RotVelocity.Y / 75), 0.1)
					LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.5 + 0.05 * Sin(sine / 7)* Player_Size, 0* Player_Size) * angles(Rad(-137)  * Cos(sine / 7) , Rad(10 * Cos(sine / 7)) ,	Rad(0) + la.RotVelocity.Y / 75), 0.1)
				end
			elseif torvel >= 25 and hitfloor ~= nil then
				Anim = "Sprint"
				change = 1.35
				if attack == false then
					rootj.C0 = clerp(rootj.C0, RootCF * CF(0* Player_Size, 0* Player_Size, -0.175 + 0.13 * Cos(sine / 3.5) + -Sin(sine / 3.5) / 7* Player_Size) * angles(Rad(23 - 2.5 * Cos(sine / 3.5)), Rad(0) - root.RotVelocity.Y / 75, Rad(15 * Cos(sine / 7))), 0.15)
					neck.C0 = clerp(neck.C0, necko* CF(0, 0, 0 + ((1* Player_Size) - 1)) * angles(Rad(-10), Rad(0), Rad(0) - hed.RotVelocity.Y / 15), 0.3)
					RH.C0 = clerp(RH.C0, CF(1* Player_Size, -0.8 - 0.5 * Cos(sine / 7) / 2* Player_Size, 0.6 * Cos(sine / 7) / 2* Player_Size)  * angles(Rad(-10 - 25 * Cos(sine / 7)) - rl.RotVelocity.Y / 75 + -Sin(sine / 7) / 2.5, Rad(90 - 15 * Cos(sine / 7)), Rad(0)) * angles(Rad(0 + 2 * Cos(sine / 7)), Rad(0), Rad(20)), 0.3)
					LH.C0 = clerp(LH.C0, CF(-1* Player_Size, -0.8 + 0.5 * Cos(sine / 7) / 2* Player_Size, -0.6 * Cos(sine / 7) / 2* Player_Size) * angles(Rad(-10 + 25 * Cos(sine / 7)) + ll.RotVelocity.Y / 75 + Sin(sine / 7) / 2.5, Rad(-90 - 15 * Cos(sine / 7)), Rad(0)) * angles(Rad(0 - 2 * Cos(sine / 7)), Rad(0), Rad(-20)), 0.3)
					RW.C0 = clerp(RW.C0, CF(1.5* Player_Size, 0.5 + 0.05 * Sin(sine / 7)* Player_Size, 0* Player_Size) * angles(Rad(57)  * Cos(sine / 7) , Rad(10 * Cos(sine / 7)), Rad(0) - ra.RotVelocity.Y / 75), 0.1)
					LW.C0 = clerp(LW.C0, CF(-1.5* Player_Size, 0.5 + 0.05 * Sin(sine / 7)* Player_Size, 0* Player_Size) * angles(Rad(-57)  * Cos(sine / 7) , Rad(10 * Cos(sine / 7)) ,	Rad(0) + la.RotVelocity.Y / 75), 0.1)
				end
			end
		end
		refit()
		Refit()
		Parents()
		if 0 < #Effects then
			for e = 1, #Effects do
				if Effects[e] ~= nil then
					local Thing = Effects[e]
					if Thing ~= nil then
						local Part = Thing[1]
						local Mode = Thing[2]
						local Delay = Thing[3]
						local IncX = Thing[4]
						local IncY = Thing[5]
						local IncZ = Thing[6]
						if 1 >= Thing[1].Transparency then
							if Thing[2] == "Block1" then
								Thing[1].CFrame = Thing[1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50))
								local Mesh = Thing[1].Mesh
								Mesh.Scale = Mesh.Scale + Vector3.new(Thing[4], Thing[5], Thing[6])
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
							elseif Thing[2] == "Block2" then
								Thing[1].CFrame = Thing[1].CFrame + Vector3.new(0, 0, 0)
								local Mesh = Thing[7]
								Mesh.Scale = Mesh.Scale + Vector3.new(Thing[4], Thing[5], Thing[6])
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
							elseif Thing[2] == "Block3" then
								Thing[1].CFrame = Thing[1].CFrame * CFrame.fromEulerAnglesXYZ(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)) + Vector3.new(0, 0.15, 0)
								local Mesh = Thing[7]
								Mesh.Scale = Mesh.Scale + Vector3.new(Thing[4], Thing[5], Thing[6])
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
							elseif Thing[2] == "Cylinder" then
								local Mesh = Thing[1].Mesh
								Mesh.Scale = Mesh.Scale + Vector3.new(Thing[4], Thing[5], Thing[6])
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
							elseif Thing[2] == "Blood" then
								local Mesh = Thing[7]
								Thing[1].CFrame = Thing[1].CFrame * Vector3.new(0, 0.5, 0)
								Mesh.Scale = Mesh.Scale + Vector3.new(Thing[4], Thing[5], Thing[6])
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
							elseif Thing[2] == "Elec" then
								local Mesh = Thing[1].Mesh
								Mesh.Scale = Mesh.Scale + Vector3.new(Thing[7], Thing[8], Thing[9])
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
							elseif Thing[2] == "Disappear" then
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
							elseif Thing[2] == "Shatter" then
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
								Thing[4] = Thing[4] * CFrame.new(0, Thing[7], 0)
								Thing[1].CFrame = Thing[4] * CFrame.fromEulerAnglesXYZ(Thing[6], 0, 0)
								Thing[6] = Thing[6] + Thing[5]
							end
						else
							Part.Parent = nil
							table.remove(Effects, e)
						end
					end
				end
			end
		end
	end
	-----------------------------------------------------
end)

UICorner.Parent = joy

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient.Parent = joy

UICorner_2.Parent = main

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_2.Parent = main

SAITAMA.Name = "SAITAMA"
SAITAMA.Parent = main
SAITAMA.BackgroundColor3 = Color3.fromRGB(170, 170, 255)
SAITAMA.Position = UDim2.new(0.359712243, 0, 0.281879187, 0)
SAITAMA.Size = UDim2.new(0, 77, 0, 21)
SAITAMA.Font = Enum.Font.SourceSansBold
SAITAMA.Text = "SAITAMA"
SAITAMA.TextColor3 = Color3.fromRGB(0, 0, 0)
SAITAMA.TextSize = 14.000
SAITAMA.MouseButton1Down:connect(function()
	wait(2)
	Player = game.Players.LocalPlayer
	Mouse = Player:GetMouse()
	Character = Player.Character
	Humanoid = Character.Humanoid
	local Idle = false
	local rad = math.rad
	local attack = false
	local attacktype = 1
	local hitted = false
	Character:FindFirstChild'Animate':Destroy()
	Humanoid.Animator.Parent = nil
	Humanoid:SetStateEnabled("Dead",false)
	Humanoid:SetStateEnabled(Enum.HumanoidStateType.Dead, false)
	shirt = Instance.new("Shirt", Character)
	shirt.Name = "Shirt"
	pants = Instance.new("Pants", Character)
	pants.Name = "Pants"

	Character.Shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=381765157"
	Character.Pants.PantsTemplate = "http://www.roblox.com/asset/?id=378877819"
	Character.Head.face.Texture = "rbxassetid://332768867"
	Instance.new("ForceField",Character).Visible = false
	Humanoid.BodyDepthScale.Value = 0.9
	Humanoid.BodyHeightScale.Value = 1.05
	Humanoid.BodyWidthScale.Value = 0.9
	Humanoid.HeadScale.Value = 1.02
	Humanoid.MaxHealth = 5000000000000000000000000000000000000000000000000000000000000000000
	wait(0.01)
	Humanoid.Health = 430000000000000000000000000000000000000000000000000000000000000000
	v3 = Vector3.new
	bc = BrickColor.new

	for i,v in pairs(Character:children()) do
		if v:IsA("Hat") then
			v:Destroy()
		end
	end
	for i,v in pairs(Character:children()) do
		if v:IsA("Accessory") then
			v:Destroy()
		end
	end
	for i,v in pairs(Character:children()) do
		if v:IsA("Hair") then
			v:Destroy()
		end
	end

	--This controls the framerate the script runs at. (make sure to keep it at 1/60 for 60 animation)




	ArtificialHB = Instance.new("BindableEvent", script)
	ArtificialHB.Name = "Heartbeat"

	script:WaitForChild("Heartbeat")

	frame = 1 / 60
	tf = 0
	allowframeloss = false
	tossremainder = false
	lastframe = tick()
	script.Heartbeat:Fire()

	game:GetService("RunService").Heartbeat:connect(function(s, p)
		tf = tf + s
		if tf >= frame then
			if allowframeloss then
				script.Heartbeat:Fire()
				lastframe = tick()
			else
				for i = 1, math.floor(tf / frame) do
					script.Heartbeat:Fire()
				end
				lastframe = tick()
			end
			if tossremainder then
				tf = 0
			else
				tf = tf - frame * math.floor(tf / frame)
			end
		end
	end)

	function swait(num)
		if num == 0 or num == nil then
			ArtificialHB.Event:wait()
		else
			for i = 0, num do
				ArtificialHB.Event:wait()
			end
		end
	end

	---------------------------------------------------
	local LeftUpperArm = Character.LeftUpperArm
	local LeftShoulder = Character.LeftUpperArm.LeftShoulder
	local LeftLowerArm = Character.LeftLowerArm
	local LeftElbow = Character.LeftLowerArm.LeftElbow
	--------------------------------------------------------
	local LeftUpperLeg = Character.LeftUpperLeg
	local LeftHip = Character.LeftUpperLeg.LeftHip
	local LeftLowerLeg = Character.LeftLowerLeg
	local LeftKnee = Character.LeftLowerLeg.LeftKnee
	----------------------------------------------------------
	local RightUpperArm = Character.RightUpperArm
	local RightShoulder = Character.RightUpperArm.RightShoulder
	local RightLowerArm = Character.RightLowerArm
	local RightElbow = Character.RightLowerArm.RightElbow
	----------------------------------------------------------
	local RightUpperLeg = Character.RightUpperLeg
	local RightHip = Character.RightUpperLeg.RightHip
	local RightLowerLeg = Character.RightLowerLeg
	local RightKnee = Character.RightLowerLeg.RightKnee
	----------------------------------------------------------
	local UpperTorso = Character.UpperTorso
	local LowerTorso = Character.LowerTorso
	local Root = Character.LowerTorso.Root
	--------------------------------------------
	local Head = Character.Head
	local Neck = Character.Head.Neck
	local RootPart = Character.HumanoidRootPart
	local LeftHand = Character.LeftHand
	local RightHand = Character.RightHand
	local LeftFoot = Character.LeftFoot
	local RightFoot = Character.RightFoot
	local Waist = Character.UpperTorso.Waist
	-------------------------------------------
	--
	function newRay(start,face,range,wat)
		local rey=Ray.new(start.p,(face.p-start.p).Unit*range)
		hit,pos=Workspace:FindPartOnRayWithIgnoreList(rey,wat)
		return rey,hit,pos
	end

	---
	human = Character:FindFirstChild("Humanoid")
	human.Name = "hi"
	local Music = Instance.new("Sound",UpperTorso)
	Music.SoundId = "rbxassetid://401258325"
	Music.Pitch = 1
	Music.Looped = true
	Music.Volume = 2.2
	--


	---
	local Music2 = Instance.new("Sound",UpperTorso)
	Music2.SoundId = "rbxassetid://401258325"
	Music2.Pitch = 1
	Music2.Looped = true
	Music2.Volume = 2.2

	---
	---
	local Music3 = Instance.new("Sound",UpperTorso)
	Music3.SoundId = "rbxassetid://713942445"
	Music3.Pitch = 1
	Music3.Looped = true
	Music3.Volume = 2.2

	---
	---
	local Music4 = Instance.new("Sound",UpperTorso)
	Music4.SoundId = "rbxassetid://471889598"
	Music4.Pitch = 1
	Music4.Looped = true
	Music4.Volume = 2.2

	---
	---
	local Music5 = Instance.new("Sound",UpperTorso)
	Music5.SoundId = "rbxassetid://574482519"
	Music5.Pitch = 1
	Music5.Looped = true
	Music5.Volume = 2.2

	---

	soka = Instance.new("Sound",UpperTorso)
	soka.SoundId = "http://www.roblox.com/asset/?id = 447199232"
	soka.Volume = 8.5
	---
	Mouse.KeyDown:connect(function(key)
		if key == "y" then
			Music.Volume = 0.6
			Music2.Volume = 0.6
			Music3.Volume = 0.6
			Music4.Volume = 0.6
			Music5.Volume = 0.6
		end
	end)
	---
	Mouse.KeyDown:connect(function(key)
		if key == "k" then
			shirt:Destroy()
			pants:Destroy()
			wait(0.1)
			Character.Shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=997448682"
			Character.Pants.PantsTemplate = "http://www.roblox.com/asset/?id=997450133"
		end
	end)

	---
	Mouse.KeyDown:connect(function(key)
		if key == "6" then
			soka:Play()
		end
	end)
	---
	Mouse.KeyDown:connect(function(key)
		if key == "k" then

		end
	end)



	Mouse.KeyDown:connect(function(key)
		if key == "l" then
			shirt:Destroy()
			pants:Destroy()
			wait(0.1)
			Character.Shirt.ShirtTemplate = "http://www.roblox.com/asset/?id=381765157"
			Character.Pants.PantsTemplate = "http://www.roblox.com/asset/?id=378877819"

		end
	end)

	---
	Mouse.KeyDown:connect(function(key)
		if key == "1" then
			Music2:Play()
		end
	end)
	Mouse.KeyDown:connect(function(key)
		if key == "2" then
			Music3:Play()
		end
	end)
	Mouse.KeyDown:connect(function(key)
		if key == "3" then
			Music4:Play()
		end
	end)
	Mouse.KeyDown:connect(function(key)
		if key == "=" then
			Music:Play()
		end
	end)
	Mouse.KeyDown:connect(function(key)
		if key == "4" then
			Music5:Play()
		end
	end)

	Mouse.KeyDown:connect(function(key)
		if key == "9" then
			Music2:Stop()
			Music:Stop()
			Music3:Stop()
			Music4:Stop()
			Music5:Stop()
		end
	end)

	--
	Mouse.KeyDown:connect(function(key)
		if key == "u" then
			Music.Volume = 0
			Music2.Volume = 0
		end
	end)
	---
	---
	---
	tp = true
	Mouse.KeyDown:connect(function(key)
		if key == "f" then
			if tp == true then
				tp = true
				Character.Head.face.Parent = game.Lighting

				Character.HumanoidRootPart.CFrame = Mouse.Hit * CFrame.new(0, 3, 0)
				game.Lighting.face.Parent = Character.Head
				wait(0)

				tp = true


			end
		end
	end)





	--used things
	vt = Vector3.new
	bc = BrickColor.new
	br = BrickColor.random
	local cam = game.Workspace.CurrentCamera


	--damage
	Damagefunc=function(hit,minim,maxim,knockback,Type,Property,Delay,KnockbackType,decreaseblock)
		if hit.Parent==nil then
			return
		end
		h=hit.Parent:FindFirstChildOfClass("Humanoid")
		for _,v in pairs(hit.Parent:children()) do
			if v:IsA("Humanoid") then
				h=v
			end
		end
		if hit.Parent.Parent:FindFirstChild("Torso")~=nil then
			h=hit.Parent.Parent:FindFirstChildOfClass("Humanoid")
		end
		if hit.Parent.className=="Hat" then
			hit=hit.Parent.Parent:findFirstChild("Head")
		end
		if h~=nil and hit.Parent.Name~=Character.Name and hit.Parent:FindFirstChild("Torso")~=nil then
			if hit.Parent:findFirstChild("DebounceHit")~=nil then if hit.Parent.DebounceHit.Value==true then return end end
        --[[                if game.Players:GetPlayerFromCharacter(hit.Parent)~=nil then
                        return
                end]]
			--                        hs(hit,1.2) 
			c=Instance.new("ObjectValue")
			c.Name="creator"
			c.Value=game:service("Players").LocalPlayer
			c.Parent=h
			game:GetService("Debris"):AddItem(c,.5)
			Damage=math.random(minim,maxim)
			--                h:TakeDamage(Damage)
			blocked=false
			block=hit.Parent:findFirstChild("Block")
			if block~=nil then
				print(block.className)
				if block.className=="NumberValue" then
					if block.Value>0 then
						blocked=true
						if decreaseblock==nil then
							block.Value=block.Value-1
						end
					end
				end
				if block.className=="IntValue" then
					if block.Value>0 then
						blocked=true
						if decreaseblock~=nil then
							block.Value=block.Value-1
						end
					end
				end
			end
			if blocked==false then
				--                h:TakeDamage(Damage)
				h.Health=h.Health-Damage
				showDamage(hit.Parent,Damage,.5,BrickColor.new("Really red"))
			else
				h.Health=h.Health-(Damage/2)
				showDamage(hit.Parent,Damage/2,.5,BrickColor.new("Bright blue"))
			end
			if Type=="Knockdown" then
				Humanoid=hit.Parent.Humanoid
				Humanoid.PlatformStand=true
				coroutine.resume(coroutine.create(function(HHumanoid)
					swait(1)
					HHumanoid.PlatformStand=false
				end), Humanoid)
				local angle=(hit.Position-(Property.Position+Vector3.new(0,0,0))).unit
				hit.CFrame=CFrame.new(hit.Position,Vector3.new(angle.x,hit.Position.y,angle.z))*CFrame.fromEulerAnglesXYZ(math.pi/4,0,0)
				local bodvol=Instance.new("BodyVelocity")
				bodvol.velocity=angle*knockback
				bodvol.P=5000
				bodvol.maxForce=Vector3.new(8e+003, 8e+003, 8e+003)
				bodvol.Parent=hit
				rl=Instance.new("BodyAngularVelocity")
				rl.P=3000
				rl.maxTorque=Vector3.new(500000,500000,500000)*50000000000000
				rl.angularvelocity=Vector3.new(math.random(-10,10),math.random(-10,10),math.random(-10,10))
				rl.Parent=hit
				game:GetService("Debris"):AddItem(bodvol,.5)
				game:GetService("Debris"):AddItem(rl,.5)
			elseif Type=="Normal" then
				bp=Instance.new("BodyVelocity")
				bp.P=100000
				bp.maxForce=Vector3.new(math.huge,0,math.huge)
				--                vp.velocity=Character.Torso.CFrame.lookVector*Knockback
				if KnockbackType==1 then
					bp.velocity=Property.CFrame.lookVector*knockback+Property.Velocity/1.05
				elseif KnockbackType==2 then
					bp.velocity=Property.CFrame.lookVector*knockback
				end
				if knockback>0 then
					bp.Parent=hit.Parent.Torso

				end
				game:GetService("Debris"):AddItem(bp,.5)
			elseif Type=="Up" then
				local bodyVelocity=Instance.new("BodyVelocity")
				bodyVelocity.velocity=vt(0,60,0)
				bodyVelocity.P=5000
				bodyVelocity.maxForce=Vector3.new(8e+003, 8e+003, 8e+003)
				bodyVelocity.Parent=hit
				game:GetService("Debris"):AddItem(bodyVelocity,1)
				rl=Instance.new("BodyAngularVelocity")
				rl.P=3000
				rl.maxTorque=Vector3.new(500000,500000,500000)*50000000000000
				rl.angularvelocity=Vector3.new(math.random(-30,30),math.random(-30,30),math.random(-30,30))
				rl.Parent=hit
				game:GetService("Debris"):AddItem(rl,.5)
			elseif Type=="Snare" then
				bp=Instance.new("BodyPosition")
				bp.P=2000
				bp.D=100
				bp.maxForce=Vector3.new(math.huge,math.huge,math.huge)
				bp.position=hit.Parent.Torso.Position
				bp.Parent=hit.Parent.Torso
				game:GetService("Debris"):AddItem(bp,1)
			elseif Type=="Target" then
				if Targetting==false then
					ZTarget=hit.Parent.Torso
					coroutine.resume(coroutine.create(function(Part) 
						so("http://www.roblox.com/asset/?id=15666462",Part,1,1.5) 
						swait(1)
						so("http://www.roblox.com/asset/?id=15666462",Part,1,1.5) 
					end),ZTarget)
					TargHum=ZTarget.Parent:findFirstChild("Humanoid")
					targetgui=Instance.new("BillboardGui")
					targetgui.Parent=ZTarget
					targetgui.Size=UDim2.new(10,100,10,100)
					targ=Instance.new("ImageLabel")
					targ.Parent=targetgui
					targ.BackgroundTransparency=1
					targ.Image="rbxassetid://4834067"
					targ.Size=UDim2.new(1,0,1,0)
					cam.CameraType="Scriptable"
					cam.CoordinateFrame=CFrame.new(Head.CFrame.p,ZTarget.Position)
					dir=Vector3.new(cam.CoordinateFrame.lookVector.x,0,cam.CoordinateFrame.lookVector.z)
					workspace.CurrentCamera.CoordinateFrame=CFrame.new(Head.CFrame.p,ZTarget.Position)
					Targetting=true
					RocketTarget=ZTarget
					for i=1,Property do
						--while Targetting==true and Humanoid.Health>0 and Character.Parent~=nil do
						if Humanoid.Health>0 and Character.Parent~=nil and TargHum.Health>0 and TargHum.Parent~=nil and Targetting==true then
							swait()
						end
						--workspace.CurrentCamera.CoordinateFrame=CFrame.new(Head.CFrame.p,Head.CFrame.p+rmdir*100)
						cam.CoordinateFrame=CFrame.new(Head.CFrame.p,ZTarget.Position)
						dir=Vector3.new(cam.CoordinateFrame.lookVector.x,0,cam.CoordinateFrame.lookVector.z)
						cam.CoordinateFrame=CFrame.new(Head.CFrame.p,ZTarget.Position)*cf(0,5,10)*euler(-0.3,0,0)
					end
					Targetting=true
					RocketTarget=true
					targetgui.Parent=true
					cam.CameraType="Custom"
				end
			end
			debounce=Instance.new("BoolValue")
			debounce.Name="DebounceHit"
			debounce.Parent=hit.Parent
			debounce.Value=true
			game:GetService("Debris"):AddItem(debounce,Delay)
			c=Instance.new("ObjectValue")
			c.Name="creator"
			c.Value=Player
			c.Parent=h
			game:GetService("Debris"):AddItem(c,.5)
			CRIT=true
			hitDeb=true
			AttackPos=6
		end
	end

	showDamage=function(Char,Dealt,du,Color)
		m=Instance.new("Model")
		m.Name=tostring(Dealt)
		h=Instance.new("Humanoid")
		h.Health=0
		h.MaxHealth=0
		h.Parent=m
		c=Instance.new("Part")
		c.Transparency=0
		c.BrickColor=Color
		c.Transparency = 1
		c.Name="Head"
		c.TopSurface=0
		c.BottomSurface=0
		c.formFactor="Plate"
		c.Size=Vector3.new(1,.4,1)

		local txt = Instance.new("BillboardGui", c)
		txt.Adornee = c
		txt.Name = "_status"
		txt.Size = UDim2.new(2, 0, 1.2, 0)
		txt.StudsOffset = Vector3.new(-9, 8, 0)
		local text = Instance.new("TextLabel", txt)
		text.Size = UDim2.new(10, 0, 7, 0)
		text.FontSize = "Size12"
		text.TextScaled = true
		text.TextTransparency = 0.5
		text.BackgroundTransparency = 1 
		text.TextTransparency = 0.5
		text.TextStrokeTransparency = 0.5
		text.Font = "SciFi"
		text.TextStrokeColor3 = Color3.new(0,0,0)
		v=Instance.new("Part")
		v.Name = "ColorBrick"
		v.Parent=c
		v.FormFactor="Symmetric"
		v.Anchored=true
		v.CanCollide=false
		v.BottomSurface="Smooth"
		v.TopSurface="Smooth"
		v.Size=Vector3.new(10,5,3)
		v.Transparency=1
		v.CFrame=c.CFrame
		v.BrickColor=BrickColor.random()
		v.Transparency=1
		text.TextColor3 = t.BrickColor.Color
		v.Shape="Block"
		text.Text = tostring(Dealt)
		ms=Instance.new("CylinderMesh")
		ms.Scale=Vector3.new(.8,.8,.8)
--[[local hitsounds={"199149137","199149186","199149221","199149235","199149269","199149297"}
  local rndm=math.random(1,#hitsounds)
  local r=rndm
CFuncs["Sound"].Create("http://www.roblox.com/asset/?id="..hitsounds[r],c,1.25,1)]]--
		if CRIT==true then
			ms.Scale=Vector3.new(1,1.25,1)
		end
		ms.Parent=c
		c.Reflectance=0
		Instance.new("BodyGyro").Parent=c
		c.Parent=m
		if Char:findFirstChild("Head")~=nil then
			c.CFrame=CFrame.new(Char["Head"].CFrame.p+Vector3.new(0,1.5,0))
		elseif Char.Parent:findFirstChild("Head")~=nil then
			c.CFrame=CFrame.new(Char.Parent["Head"].CFrame.p+Vector3.new(0,1.5,0))
		end
		f=Instance.new("BodyPosition")
		f.P=200000
		f.D=100
		f.maxForce=Vector3.new(math.huge,math.huge,math.huge)
		f.position=c.Position+Vector3.new(0,3,0)
		f.Parent=c
		game:GetService("Debris"):AddItem(m,.5+du)
		c.CanCollide=false
		m.Parent=workspace
		c.CanCollide=false
	end

	function rayCast(Pos, Dir, Max, Ignore)  -- Origin Position , Direction, MaxDistance , IgnoreDescendants
		return game:service("Workspace"):FindPartOnRay(Ray.new(Pos, Dir.unit * (Max or 999.999)), Ignore) 
	end 

	function dmgstart(dmg,what)
		hitcon = what.Touched:connect(function(hit)
			local hum = hit.Parent:FindFirstChild("Humanoid")
			if hum and not hum:IsDescendantOf(Character) then
				hum:TakeDamage(dmg)
			end
		end)
	end

	function dmgstop()
		hitcon:disconnect()
	end
	------
	hito = function(dm, X, c, dn, dp, dq)	
		for I,dr in pairs(workspace:GetChildren()) do
			if dr:FindFirstChild("Humanoid") and dr:FindFirstChild("HumanoidRootPart") and dr ~= chr and (dr:FindFirstChild("HumanoidRootPart").Position - dm.Position).magnitude < X and dr:FindFirstChild("HumanoidRootPart"):FindFirstChild("alabo") == nil then
				local ds = dr:FindFirstChild("Humanoid")
				local dt = dr:FindFirstChild("HumanoidRootPart")
				TakeDamage(ds, c)

				ds.Parent:BreakJoints()
			end
			ds:SetStateEnabled(16, true)
			delay(dn, function()		
				ds:SetStateEnabled(16, true)
			end)
			local du = Instance.new("StringValue")
			du.Name = "alabo"
			du.Parent = dt
			game.Debris:AddItem(du, dn)
			local dv = Instance.new("Part")
			nooutline(dv)
			dv.Size = Vector3.new(0.2, 0.2, 0.2)
			dv.Transparency = 0.25
			dv.Anchored = true
			dv.CanCollide = false
			dv.BrickColor = BrickColor.new("White")
			dv.Material = "Neon"
			dv.Locked = true
			dv.CFrame = dt.CFrame * CFrame.new(rd2(-1, 1), rd2(-2, 2), rd2(-1, 1))
			dv.Parent = modz
			local dw = Instance.new("SpecialMesh")
			dw.MeshType = "Sphere"
			dw.Scale = Vector3.new(0.5, 0.5, 0.5)
			dw.Parent = dv
			game.Debris:AddItem(dv, 1)
			local dx = Instance.new("Model")
			dx.Name = c
			dx.Parent = workspace
			game.Debris:AddItem(dx, 0.5 + c / 75)
			local dy = Instance.new("Humanoid")
			dy.MaxHealth = 0
			dy.Parent = dx
			local dz = Instance.new("Part")
			dz.Name = "Head"
			dz.Locked = true
			dz.Size = Vector3.new(0.2, 0.2, 0.2)
			dz.Position = dt.Position
			dz.BrickColor = BrickColor.new("New Yeller")
			dz.Material = "Neon"
			dz.Transparency = 1
			dz.CanCollide = false
			dz.Parent = dx
			local dA = Instance.new("BodyPosition")
			dA.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
			dA.P = 20000
			dA.D = 300
			dA.Position = dz.Position + Vector3.new(0, 5, 0)
			dA.Parent = dz
			local dB = Instance.new("CylinderMesh")
			dB.Parent = dz
			coroutine.resume(coroutine.create(function()		
				while dB do
					swait()
					dB.Scale = dB.Scale:lerp(Vector3.new(2.5 + c / 10, 1.25 + c / 35, 2.5 + c / 10), 0.4)
				end
			end))
			if dp then
				local dC = Instance.new("BodyVelocity")
				dC.MaxForce = Vector3.new(999999999999, 9999999999999, 9999999999999)
				dC.P = 9999999999
				dC.Velocity = dp
				dC.Parent = dt
				game.Debris:AddItem(dC, dn)
			end
			if dq then
				local dD = Instance.new("BodyAngularVelocity")
				dD.MaxTorque = Vector3.new(99999, 999999, 999999)
				dD.P = math.huge
				dD.AngularVelocity = dq
				dD.Parent = dt
				game.Debris:AddItem(dD, dn)
			end
			local dE = Instance.new("Sound")
			dE.Pitch = rd2(10, 11) / 10
			dE.Volume = rd2(10, 13) / 10
			dE.EmitterSize = 10
			dE.SoundId = "rbxassetid://"
			dE.Parent = dv
			dE:Play()
			coroutine.resume(coroutine.create(function()		
				for I = 1, 5 do
					swait()
					dv.Transparency = dv.Transparency + 0.175
					dw.Scale = dw.Scale + Vector3.new(0.8 * c, 0.8 * c, 0.8 * c)
				end
			end))
		end
	end


	function Del()
		if not D then D = true
			Idle = true

			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0.2),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(-0.2,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			local Sound = Instance.new("Sound",Character.UpperTorso)
			Sound.SoundId = "rbxassetid://"
			Sound.Volume = 10
			Sound.Pitch = 1
			Sound.Looped = false
			Sound:Play()
			wait(0.5)
			local Bq = Instance.new("Part",UpperTorso)
			Bq.Size = Vector3.new(1,1,1)
			Bq.BrickColor = BrickColor.new("White")
			Bq.Material = "Neon"
			Bq.Anchored = false
			Bq.CanCollide = false
			Bq.Transparency = math.huge
			Bq.CFrame = RootPart.CFrame*CFrame.new(0,0,-12)
			local Bq2 = Instance.new("SpecialMesh",Bq)
			Bq2.MeshType = "Sphere"
			Bq2.Scale = Vector3.new(1,1,1)
			Bq.Touched:connect(function(hit)
				if hitted == false then
					hitted = true


					for i = 1,1000 do

						game:GetService("RunService").RenderStepped:wait()
					end
				end
			end)

			local Fl = Instance.new("BodyVelocity",Bq)
			Fl.maxForce = Vector3.new(math.huge,math.huge,math.huge)
			Fl.velocity = Mouse.hit.lookVector*120
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.22,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(-0.4,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.3,0,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			longpunch()
			wait(0)
			Idle = false
			hitted = false
			wait(2)
			D = false
		end
	end
	--
	------
	function FindNearestTorso(Position,Distance,SinglePlayer)
		if SinglePlayer then return(SinglePlayer.Torso.CFrame.p -Position).magnitude < Distance end
		local List = {}
		for i,v in pairs(workspace:GetChildren())do
			if v:IsA("Model")then
				if v:findFirstChild("Torso")then
					if v ~= Character then
						if(v.Torso.Position -Position).magnitude <= Distance then
							table.insert(List,v)
						end 
					end 
				end 
			end 
		end
		return List
	end

	------
	function superpunch()

		local Sound = Instance.new("Sound",Character.UpperTorso)--136847657
		Sound.SoundId = "rbxassetid://157878578"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local rng = Instance.new("Part", Mouse)
		rng.Anchored = true
		rng.BrickColor = BrickColor.new("White")
		rng.CanCollide = false
		rng.FormFactor = 3
		rng.Name = "Ring"
		rng.Size = Vector3.new(1, 1, 1)
		rng.Transparency = 0
		rng.TopSurface = 0
		rng.BottomSurface = 0
		rng.CFrame = RootPart.CFrame 
		local rngm = Instance.new("SpecialMesh", rng)
		rngm.MeshId = "http://www.roblox.com/asset/?id=3270017"
		local rng2 = rng:Clone()
		rng2.Parent = Character
		local rng2m = rng2.Mesh
		local rng3 = rng:Clone()
		rng3.Parent = Character
		local rng3m = rng3.Mesh
		local rng4 = rng:Clone()
		rng4.Parent = Character
		local rng4m = rng4.Mesh
		local rng5 = rng:Clone()
		rng5.Parent = Character
		local rng5m = rng5.Mesh
		local rng6 = rng:Clone()
		rng6.Material = "Plastic"
		rng6.Parent = Character
		local rng6m = rng6.Mesh
		rng6m.Scale = vt(2.5,2.5,2)
		rng6m.MeshType = "FileMesh"
		rng6m.MeshId = "rbxassetid://437347603"
		local hita = rng6.Touched:connect(function(hit) 
			Damagefunc(hit,27,37,math.random(20,30),"Normal",RootPart,.2,1)
		end)
		rng2.CFrame = RootPart.CFrame 
		rng3.CFrame = RootPart.CFrame 
		rng4.CFrame = RootPart.CFrame 
		rng5.CFrame = RootPart.CFrame 
		rng6.CFrame = RootPart.CFrame 
		wait()
		local Sound = Instance.new("Sound",rng6)--136847657
		Sound.SoundId = "rbxassetid://136847657"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local scaler = 10/5
		local scaler2 = 10/5 
		for i = 0,10,0.1 do
			swait()
			rng.CFrame = rng.CFrame + rng.CFrame.lookVector*scaler2
			rng2.CFrame = rng2.CFrame + rng2.CFrame.lookVector*scaler2/0.25
			rng3.CFrame = rng3.CFrame + rng3.CFrame.lookVector*scaler2/0.5
			rng4.CFrame = rng4.CFrame + rng4.CFrame.lookVector*scaler2/0.75
			rng5.CFrame = rng5.CFrame + rng5.CFrame.lookVector*scaler2/5
			rng6.Size = rng6.Size + Vector3.new(scaler2/2.5, scaler2/2.5, scaler2/2.5)
			rng6.CFrame = rng3.CFrame
			rng.Transparency = rng.Transparency + 0.1
			rng2.Transparency = rng2.Transparency + 1.01
			rng3.Transparency = rng3.Transparency + 0.01
			rng4.Transparency = rng4.Transparency + 0.01
			rng5.Transparency = rng5.Transparency + 0.01
			rng6.Transparency = rng6.Transparency + 0.021
			scaler = scaler - 0.125/5
			scaler2 = scaler2 - 0.1/5
			rng2m.Scale = rng2m.Scale + Vector3.new(scaler2/2.5, scaler2/2.5, 1.5)
			rng3m.Scale = rng3m.Scale + Vector3.new(scaler2/2, scaler2/2, 1)
			rng4m.Scale = rng4m.Scale + Vector3.new(scaler2/1.5, scaler2/1.5, 0.5)
			rng5m.Scale = rng5m.Scale + Vector3.new(scaler2, scaler2, 0)
			rngm.Scale = rngm.Scale + Vector3.new(scaler2/9, scaler2/9, 9)
			game:GetService("Debris"):AddItem(bv, 1)
		end
		hita:disconnect()
		game:GetService("Debris"):AddItem(rng, 1)
		game:GetService("Debris"):AddItem(rng2, 1)
		game:GetService("Debris"):AddItem(rng3, 1)
		game:GetService("Debris"):AddItem(rng4, 1)
		game:GetService("Debris"):AddItem(rng5, 1)
		attack = false
	end


	----
	------
	function wam()

		local rng = Instance.new("Part", Mouse)
		rng.Anchored = true
		rng.BrickColor = BrickColor.new("White")
		rng.CanCollide = false
		rng.FormFactor = 3
		rng.Name = "Ring"
		rng.Size = Vector3.new(1, 1, 1)
		rng.Transparency = 0
		rng.TopSurface = 0
		rng.BottomSurface = 0
		rng.CFrame = RootPart.CFrame 
		local rngm = Instance.new("SpecialMesh", rng)
		rngm.MeshId = "http://www.roblox.com/asset/?id=3270017"
		local rng2 = rng:Clone()
		rng2.Parent = Character
		local rng2m = rng2.Mesh
		local rng3 = rng:Clone()
		rng3.Parent = Character
		local rng3m = rng3.Mesh
		local rng4 = rng:Clone()
		rng4.Parent = Character
		local rng4m = rng4.Mesh
		local rng5 = rng:Clone()
		rng5.Parent = Character
		local rng5m = rng5.Mesh
		local rng6 = rng:Clone()
		rng6.Material = "Plastic"
		rng6.Parent = Character
		local rng6m = rng6.Mesh
		rng6m.Scale = vt(2.5,2.5,2)
		rng6m.MeshType = "FileMesh"
		rng6m.MeshId = "rbxassetid://0"
		local hita = rng6.Touched:connect(function(hit) 
			Damagefunc(hit,1,1,math.random(2,2),"Normal",RootPart,.2,1)
		end)
		rng2.CFrame = RootPart.CFrame 
		rng3.CFrame = RootPart.CFrame 
		rng4.CFrame = RootPart.CFrame 
		rng5.CFrame = RootPart.CFrame 
		rng6.CFrame = RootPart.CFrame 
		wait()
		local Sound = Instance.new("Sound",rng6)--136847657
		Sound.SoundId = "rbxassetid://"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local scaler = 10/5
		local scaler2 = 10/5 
		for i = 0,10,0.1 do
			swait()
			rng.CFrame = rng.CFrame + rng.CFrame.lookVector*scaler2
			rng2.CFrame = rng2.CFrame + rng2.CFrame.lookVector*scaler2/2.25
			rng3.CFrame = rng3.CFrame + rng3.CFrame.lookVector*scaler2/3.2
			rng4.CFrame = rng4.CFrame + rng4.CFrame.lookVector*scaler2/3.9
			rng5.CFrame = rng5.CFrame + rng5.CFrame.lookVector*scaler2/5
			rng6.Size = rng6.Size + Vector3.new(scaler2/2.5, scaler2/2.5, scaler2/2.5)
			rng6.CFrame = rng3.CFrame
			rng.Transparency = rng.Transparency + 0.1
			rng2.Transparency = rng2.Transparency + 1.01
			rng3.Transparency = rng3.Transparency + 0.01
			rng4.Transparency = rng4.Transparency + 0.01
			rng5.Transparency = rng5.Transparency + 0.01
			rng6.Transparency = rng6.Transparency + 0.021
			scaler = scaler - 0.125/5
			scaler2 = scaler2 - 0.1/5
			rng2m.Scale = rng2m.Scale + Vector3.new(scaler2/3.5, scaler2/3.5, 0.7)
			rng3m.Scale = rng3m.Scale + Vector3.new(scaler2/3, scaler2/3, 0.7)
			rng4m.Scale = rng4m.Scale + Vector3.new(scaler2/2.5, scaler2/2.5, 0.7)
			rng5m.Scale = rng5m.Scale + Vector3.new(scaler2, scaler2, 0)
			rngm.Scale = rngm.Scale + Vector3.new(scaler2/9, scaler2/9, 9)
			game:GetService("Debris"):AddItem(bv, 1)
		end
		hita:disconnect()
		game:GetService("Debris"):AddItem(rng, 1)
		game:GetService("Debris"):AddItem(rng2, 1)
		game:GetService("Debris"):AddItem(rng3, 1)
		game:GetService("Debris"):AddItem(rng4, 1)
		game:GetService("Debris"):AddItem(rng5, 1)
		attack = false
	end


	----
	------
	function fcpunch()


		local Sound = Instance.new("Sound",Character.UpperTorso)--136847657
		Sound.SoundId = "rbxassetid://157878578"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local rng = Instance.new("Part", Mouse)
		rng.Anchored = true
		rng.BrickColor = BrickColor.new("White")
		rng.CanCollide = false
		rng.FormFactor = 3
		rng.Name = "Ring"
		rng.Size = Vector3.new(1, 1, 1)
		rng.Transparency = 0
		rng.TopSurface = 0
		rng.BottomSurface = 0
		rng.CFrame = RootPart.CFrame 
		local rngm = Instance.new("SpecialMesh", rng)
		rngm.MeshId = "http://www.roblox.com/asset/?id=3270017"
		local rng2 = rng:Clone()
		rng2.Parent = Character
		local rng2m = rng2.Mesh
		local rng3 = rng:Clone()
		rng3.Parent = Character
		local rng3m = rng3.Mesh
		local rng4 = rng:Clone()
		rng4.Parent = Character
		local rng4m = rng4.Mesh
		local rng5 = rng:Clone()
		rng5.Parent = Character
		local rng5m = rng5.Mesh
		local rng6 = rng:Clone()
		rng6.Material = "Plastic"
		rng6.Parent = Character
		local rng6m = rng6.Mesh
		rng6m.Scale = vt(0,0,0)
		rng6m.MeshType = "FileMesh"
		rng6m.MeshId = "rbxassetid://0"
		local hita = rng6.Touched:connect(function(hit) 

		end)
		rng2.CFrame = RootPart.CFrame 
		rng3.CFrame = RootPart.CFrame 
		rng4.CFrame = RootPart.CFrame 
		rng5.CFrame = RootPart.CFrame 
		rng6.CFrame = RootPart.CFrame 
		wait()
		local FZZ = Instance.new("ParticleEmitter",rng6)
		FZZ.Texture = "rbxassetid://0"
		FZZ.Color = ColorSequence.new(Color3.fromRGB(131, 255, 150))
		FZZ.EmissionDirection = "Top"
		FZZ.Speed = NumberRange.new(0)
		FZZ.Size = NumberSequence.new(14,18)
		FZZ.Drag = 2
		FZZ.LockedToPart = true
		FZZ.Lifetime = NumberRange.new(0.2)
		FZZ.Rate = 1000
		FZZ.LightEmission = 0.75
		FZZ.Rotation = NumberRange.new(-100, 100)
		FZZ.VelocitySpread = 70
		local Sound = Instance.new("Sound",rng6)--136847657
		Sound.SoundId = "rbxassetid://136847657"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local scaler = 10/5
		local scaler2 = 10/5 
		for i = 0,10,0.1 do
			swait()
			rng.CFrame = rng.CFrame + rng.CFrame.lookVector*scaler2
			rng2.CFrame = rng2.CFrame + rng2.CFrame.lookVector*scaler2/0.25
			rng3.CFrame = rng3.CFrame + rng3.CFrame.lookVector*scaler2/0.5
			rng4.CFrame = rng4.CFrame + rng4.CFrame.lookVector*scaler2/0.75
			rng5.CFrame = rng5.CFrame + rng5.CFrame.lookVector*scaler2/5
			rng6.Size = rng6.Size + Vector3.new(scaler2/0.9, scaler2/0.9, scaler2/0.9)
			rng6.CFrame = rng3.CFrame
			rng.Transparency = rng.Transparency + 0.1
			rng2.Transparency = rng2.Transparency + 1.01
			rng3.Transparency = rng3.Transparency + 0.01
			rng4.Transparency = rng4.Transparency + 0.01
			rng5.Transparency = rng5.Transparency + 0.01
			rng6.Transparency = rng6.Transparency + 0.021
			scaler = scaler - 0.125/5
			scaler2 = scaler2 - 0.1/5
			rng2m.Scale = rng2m.Scale + Vector3.new(scaler2/0.5, scaler2/0.5, 1)
			rng3m.Scale = rng3m.Scale + Vector3.new(scaler2/0.6, scaler2/0.6, 1)
			rng4m.Scale = rng4m.Scale + Vector3.new(scaler2/0.7, scaler2/0.7, 1)
			rng5m.Scale = rng5m.Scale + Vector3.new(scaler2, scaler2, 0)
			rngm.Scale = rngm.Scale + Vector3.new(scaler2/9, scaler2/9, 9)
			game:GetService("Debris"):AddItem(bv, 1)
		end
		hita:disconnect()
		game:GetService("Debris"):AddItem(rng, 1)
		game:GetService("Debris"):AddItem(rng2, 1)
		game:GetService("Debris"):AddItem(rng3, 1)
		game:GetService("Debris"):AddItem(rng4, 1)
		game:GetService("Debris"):AddItem(rng5, 1)
		attack = false
		FZZ:Destroy()
	end
	------
	function detroitsmash()

		local rng = Instance.new("Part", Mouse)
		rng.Anchored = true
		rng.BrickColor = BrickColor.new("White")
		rng.CanCollide = false
		rng.FormFactor = 3
		rng.Name = "Ring"
		rng.Size = Vector3.new(1, 1, 1)
		rng.Transparency = 0
		rng.TopSurface = 0
		rng.BottomSurface = 0
		rng.CFrame = RootPart.CFrame 
		local rngm = Instance.new("SpecialMesh", rng)
		rngm.MeshId = "http://www.roblox.com/asset/?id=3270017"
		local rng2 = rng:Clone()
		rng2.Parent = Character
		local rng2m = rng2.Mesh
		local rng3 = rng:Clone()
		rng3.Parent = Character
		local rng3m = rng3.Mesh
		local rng4 = rng:Clone()
		rng4.Parent = Character
		local rng4m = rng4.Mesh
		local rng5 = rng:Clone()
		rng5.Parent = Character
		local rng5m = rng5.Mesh
		local rng6 = rng:Clone()
		rng6.Material = "Plastic"
		rng6.Parent = Character
		local rng6m = rng6.Mesh
		rng6m.Scale = vt(2.5,2.5,2)
		rng6m.MeshType = "FileMesh"
		rng6m.MeshId = "rbxassetid://437347603"
		local hita = rng6.Touched:connect(function(hit) 
			Damagefunc(hit,27,37,math.random(20,30),"Normal",RightHand,.2,1)
		end)
		rng2.CFrame = RightHand.CFrame 
		rng3.CFrame = RightHand.CFrame 
		rng4.CFrame = RightHand.CFrame 
		rng5.CFrame = RightHand.CFrame 
		rng6.CFrame = RightHand.CFrame 
		wait()
		local scaler = 10/5
		local scaler2 = 10/5 
		for i = 0,10,0.1 do
			swait()
			rng.CFrame = rng.CFrame + rng.CFrame.lookVector*scaler2
			rng2.CFrame = rng2.CFrame + rng2.CFrame.lookVector*scaler2/1.4
			rng3.CFrame = rng3.CFrame + rng3.CFrame.lookVector*scaler2/1.6
			rng4.CFrame = rng4.CFrame + rng4.CFrame.lookVector*scaler2/2
			rng5.CFrame = rng5.CFrame + rng5.CFrame.lookVector*scaler2/5
			rng6.Size = rng6.Size + Vector3.new(scaler2/2.5, scaler2/2.5, scaler2/2.5)
			rng6.CFrame = rng3.CFrame
			rng.Transparency = rng.Transparency + 0.1
			rng2.Transparency = rng2.Transparency + 1.01
			rng3.Transparency = rng3.Transparency + 0.01
			rng4.Transparency = rng4.Transparency + 0.01
			rng5.Transparency = rng5.Transparency + 0.01
			rng6.Transparency = rng6.Transparency + 0.021
			scaler = scaler - 0.125/5
			scaler2 = scaler2 - 0.1/5
			rng2m.Scale = rng2m.Scale + Vector3.new(scaler2/2.5, scaler2/2.5, 1.5)
			rng3m.Scale = rng3m.Scale + Vector3.new(scaler2/2, scaler2/2, 1)
			rng4m.Scale = rng4m.Scale + Vector3.new(scaler2/1.5, scaler2/1.5, 0.5)
			rng5m.Scale = rng5m.Scale + Vector3.new(scaler2, scaler2, 0)
			rngm.Scale = rngm.Scale + Vector3.new(scaler2/9, scaler2/9, 9)
			game:GetService("Debris"):AddItem(bv, 1)
		end
		hita:disconnect()
		game:GetService("Debris"):AddItem(rng, 1)
		game:GetService("Debris"):AddItem(rng2, 1)
		game:GetService("Debris"):AddItem(rng3, 1)
		game:GetService("Debris"):AddItem(rng4, 1)
		game:GetService("Debris"):AddItem(rng5, 1)
		attack = false
	end
	------
	function longpunch()


		local Sound = Instance.new("Sound",Character.UpperTorso)--136847657
		Sound.SoundId = "rbxassetid://157878578"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local rng = Instance.new("Part", Mouse)
		rng.Anchored = true
		rng.BrickColor = BrickColor.new("White")
		rng.CanCollide = false
		rng.FormFactor = 3
		rng.Name = "Ring"
		rng.Size = Vector3.new(1, 1, 1)
		rng.Transparency = 0
		rng.TopSurface = 0
		rng.BottomSurface = 0
		rng.CFrame = RootPart.CFrame 
		local rngm = Instance.new("SpecialMesh", rng)
		rngm.MeshId = "http://www.roblox.com/asset/?id=3270017"
		local rng2 = rng:Clone()
		rng2.Parent = Character
		local rng2m = rng2.Mesh
		local rng3 = rng:Clone()
		rng3.Parent = Character
		local rng3m = rng3.Mesh
		local rng4 = rng:Clone()
		rng4.Parent = Character
		local rng4m = rng4.Mesh
		local rng5 = rng:Clone()
		rng5.Parent = Character
		local rng5m = rng5.Mesh
		local rng6 = rng:Clone()
		rng6.Material = "Plastic"
		rng6.Parent = Character
		local rng6m = rng6.Mesh
		rng6m.Scale = vt(3.5,3.5,3)
		rng6m.MeshType = "FileMesh"
		rng6m.MeshId = "rbxassetid://437347603"
		local hita = rng6.Touched:connect(function(hit) 
			Damagefunc(hit,27,37,math.random(20,30),"Normal",RootPart,.2,1)
		end)
		rng2.CFrame = RootPart.CFrame 
		rng3.CFrame = RootPart.CFrame 
		rng4.CFrame = RootPart.CFrame 
		rng5.CFrame = RootPart.CFrame 
		rng6.CFrame = RootPart.CFrame 
		wait()
		local Sound = Instance.new("Sound",rng6)--136847657
		Sound.SoundId = "rbxassetid://136847657"
		Sound.Pitch = 1.1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local scaler = 10/5
		local scaler2 = 10/5 
		for i = 0,10,0.1 do
			swait()
			rng.CFrame = rng.CFrame + rng.CFrame.lookVector*scaler2
			rng2.CFrame = rng2.CFrame + rng2.CFrame.lookVector*scaler2/0.15
			rng3.CFrame = rng3.CFrame + rng3.CFrame.lookVector*scaler2/0.2
			rng4.CFrame = rng4.CFrame + rng4.CFrame.lookVector*scaler2/0.25
			rng5.CFrame = rng5.CFrame + rng5.CFrame.lookVector*scaler2/5
			rng6.Size = rng6.Size + Vector3.new(scaler2/1.3, scaler2/1.3, scaler2/1.3)
			rng6.CFrame = rng3.CFrame
			rng.Transparency = rng.Transparency + 0.1
			rng2.Transparency = rng2.Transparency + 1.01
			rng3.Transparency = rng3.Transparency + 0.01
			rng4.Transparency = rng4.Transparency + 0.01
			rng5.Transparency = rng5.Transparency + 0.01
			rng6.Transparency = rng6.Transparency + 0.021
			scaler = scaler - 0.125/5
			scaler2 = scaler2 - 0.1/5
			rng2m.Scale = rng2m.Scale + Vector3.new(scaler2/2.5, scaler2/2.5, 1.5)
			rng3m.Scale = rng3m.Scale + Vector3.new(scaler2/2, scaler2/2, 1)
			rng4m.Scale = rng4m.Scale + Vector3.new(scaler2/1.5, scaler2/1.5, 0.5)
			rng5m.Scale = rng5m.Scale + Vector3.new(scaler2, scaler2, 0)
			rngm.Scale = rngm.Scale + Vector3.new(scaler2/9, scaler2/9, 9)
			game:GetService("Debris"):AddItem(bv, 1)
		end
		hita:disconnect()
		game:GetService("Debris"):AddItem(rng, 1)
		game:GetService("Debris"):AddItem(rng2, 1)
		game:GetService("Debris"):AddItem(rng3, 1)
		game:GetService("Debris"):AddItem(rng4, 1)
		game:GetService("Debris"):AddItem(rng5, 1)
		attack = false
	end


	----


	function Smash()
		if not D then D = false
			Idle = true
			for i = 0,2,0.1 do
				swait()
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,1.55),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,1),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,-1,0),.1)--Head
				--game:GetService("RunService").RenderStepped:wait()
			end
			wait(0.7)

			coroutine.resume(coroutine.create(function()
				for i = 1,1000 do

					game:GetService("RunService").RenderStepped:wait()
				end

			end))
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			superpunch()
			Idle = false
			wait(0.7)
			D = false
		end
	end


	function fade(obj, dest, grow)
		spawn(function()
			local oldcf = obj.CFrame
			for i = 0, 10 do
				if grow then
					obj.Size = obj.Size +Vector3.new(1,1,1)
					obj.CFrame = oldcf
				end
				obj.Transparency = obj.Transparency +0.1
				swait()
			end
			if dest then
				obj:Destroy()
			end
		end)
	end


	function FCSmash()
		if not D then D = false
			Idle = true
			for i = 0,2,0.1 do
				swait()
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,1.55),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,1),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(0,0.6,0.3),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,-1,0),.1)--Head
				--game:GetService("RunService").RenderStepped:wait()
			end
			local FZcharge = Instance.new("ParticleEmitter",RightHand)
			FZcharge.Texture = "rbxassetid://31727915"
			FZcharge.Color = ColorSequence.new(Color3.fromRGB(248, 248, 248))
			FZcharge.EmissionDirection = "Bottom"
			FZcharge.Speed = NumberRange.new(5)
			FZcharge.Size = NumberSequence.new(2,1)
			FZcharge.Drag = 2
			FZcharge.LockedToPart = false
			FZcharge.Lifetime = NumberRange.new(0.5)
			FZcharge.Rate = 150
			FZcharge.LightEmission = 0
			FZcharge.Rotation = NumberRange.new(-100, 100)
			FZcharge.VelocitySpread = 100
			coroutine.resume(coroutine.create(function()
				for i = 1,15 do 
					local HQ = Instance.new("Part",Character)
					HQ.Size = Vector3.new(1,0,1)
					HQ.BrickColor = BrickColor.new("White")
					HQ.Material = "Neon"
					HQ.Anchored = true
					HQ.CanCollide = false
					HQ.CFrame = RootPart.CFrame*CFrame.new(0,-2,0)*CFrame.Angles(0,0,0)
					local HQ2 = Instance.new("SpecialMesh",HQ)
					HQ2.MeshId = "rbxassetid://20329976"
					HQ2.Scale = Vector3.new(1,1,1)

					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							HQ2.Scale = HQ2.Scale + Vector3.new(2,0,2)
							HQ.Transparency = HQ.Transparency + 0.09
							wait(0.00000000001)
						end
					end))
					wait(0.3)
				end
			end))
			coroutine.resume(coroutine.create(function()
				for i = 1,12 do 
					local HQ = Instance.new("Part",RightHand)
					HQ.Size = Vector3.new(1,1,1)
					HQ.BrickColor = BrickColor.new("White")
					HQ.Material = "Neon"
					HQ.Anchored = true
					HQ.CanCollide = false
					HQ.Transparency = 0.4
					HQ.CFrame = Character.RightHand.CFrame*CFrame.new(0,0,0)
					local HQ2 = Instance.new("SpecialMesh",HQ)
					HQ2.MeshType = "Sphere"
					HQ2.Scale = Vector3.new(1,1,1)
					local ZQW = Instance.new("Part",RightHand)
					ZQW.Size = Vector3.new(1,1,1)
					ZQW.BrickColor = BrickColor.new("White")
					ZQW.Material = "Neon"
					ZQW.Transparency = 0.4
					ZQW.Anchored = true
					ZQW.CanCollide = false
					ZQW.CFrame = Character.RightHand.CFrame*CFrame.new(0,0,0)
					local ZQW2 = Instance.new("SpecialMesh",ZQW)
					ZQW2.MeshType = "Sphere"
					ZQW2.Scale = Vector3.new(1,1,1)
					local H = Instance.new("Part",RightHand)
					H.Size = Vector3.new(1,1,1)
					H.BrickColor = BrickColor.new("White")
					H.CanCollide = false
					H.Anchored = true
					H.CFrame = Character.RightHand.CFrame*CFrame.new(0,0,0)*CFrame.Angles(0,0,0)
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://9982590"
					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							ZQW2.Scale = ZQW2.Scale + Vector3.new(0.3,0.3,0.3)
							ZQW.Transparency = ZQW.Transparency + 0.1
							HQ2.Scale = HQ2.Scale + Vector3.new(0.3,0.3,0.3)
							HQ.Transparency = HQ.Transparency + 0.1
							H2.Scale = H2.Scale + Vector3.new(0.3,0.3,0.3)
							H.Transparency = H.Transparency + 0.2
							wait(0.00000000001)
						end
						HQ:Destroy()
						H2:Destroy()
						H:Destroy()
						HQ2:Destroy()
						ZQW:Destroy()
						ZQW2:Destroy()
					end))
					wait(0.3)
				end
			end))
			wait(0.5)
			wait(4.5)


			for i = 0,1.5,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1.2,0,0.5),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-0.8),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(.6,0,-0.6),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,5,1),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(.5,.2,.3),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.3,1,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end


			coroutine.resume(coroutine.create(function()
				for i = 1,3 do 
					local HQ = Instance.new("Part",Character)
					HQ.Size = Vector3.new(1,1,1)
					HQ.BrickColor = BrickColor.new("White")
					HQ.Material = "Neon"
					HQ.Anchored = true
					HQ.CanCollide = false
					HQ.CFrame = RootPart.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
					local HQ2 = Instance.new("SpecialMesh",HQ)
					HQ2.MeshId = "rbxassetid://20329976"
					HQ2.Scale = Vector3.new(1,1,1)

					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							HQ2.Scale = HQ2.Scale + Vector3.new(20,20,20)
							HQ.Transparency = HQ.Transparency + 0.09
							wait(0.00000000001)
						end
					end))
					wait(0.3)
				end
			end))
			coroutine.resume(coroutine.create(function()
				for i = 3,5 do 
					local HQ = Instance.new("Part",Character)
					HQ.Size = Vector3.new(1,0,1)
					HQ.BrickColor = BrickColor.new("White")
					HQ.Material = "Neon"
					HQ.Anchored = true
					HQ.CanCollide = false
					HQ.CFrame = RootPart.CFrame*CFrame.new(0,-2,0)*CFrame.Angles(0,0,0)
					local HQ2 = Instance.new("SpecialMesh",HQ)
					HQ2.MeshId = "rbxassetid://20329976"
					HQ2.Scale = Vector3.new(1,1,1)
					local HQR = Instance.new("Part",Character)
					HQR.Size = Vector3.new(1,0,1)
					HQR.BrickColor = BrickColor.new("White")
					HQR.Material = "Neon"
					HQR.Anchored = true
					HQR.CanCollide = false
					HQR.CFrame = RootPart.CFrame*CFrame.new(0,-2,0)*CFrame.Angles(0,0,0)
					local HQR2 = Instance.new("SpecialMesh",HQR)
					HQR2.MeshId = "rbxassetid://3270017"
					HQR2.Scale = Vector3.new(1,1,1)

					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							HQ2.Scale = HQ2.Scale + Vector3.new(7,0,7)
							HQ.Transparency = HQ.Transparency + 0.09
							HQR2.Scale = HQR2.Scale + Vector3.new(30,34,0)
							HQR.Transparency = HQR.Transparency + 0.09
							wait(0.00000000001)
						end
						HQ:Destroy()
						HQ2:Destroy()
						HQR:Destroy()
						HQR2:Destroy()
					end))
					wait(0.3)
				end
			end))




			FZcharge:Destroy()
			killbrick2 = Instance.new("Part",Character)
			killbrick2.Size = Vector3.new(80,80,9000)
			killbrick2.Transparency = 1

			killbrick2.CanCollide = true
			wait(0.001)
			killbrick2.CanCollide = false

			killbrick2.Anchored = true

			killbrick2.CFrame = RootPart.CFrame * CFrame.new(0,0,-1005)

			killbrick2.Touched:connect(function(h)
				local x = h.Parent:FindFirstChildOfClass("Humanoid")
				if x then
					if x.Parent.Name == game.Players.LocalPlayer.Name then
						safe = true
					else safe = false
					end
					if x then
						if safe == false then
							h.Parent.Torso.Velocity = CFrame.new(Character.Head.Position,h.Parent.Torso.Position).lookVector * 0
							local bodyforc = Instance.new("BodyForce", h.Parent.Torso)
							bodyforc.force = Vector3.new(0, h.Parent.Torso:GetMass() * 0, 0)


							wait(0.1)
							x.Parent:BreakJoints()
							wait()
							safe = true
						end
					end
				end
			end)
			fcpunch()
			wait(0.7)
			Idle = false
			killbrick2:Destroy()
			wait(0.2)
			D = false
		end
	end



	function KickBoom()

		local Sound = Instance.new("Sound",Character.UpperTorso)--136847657
		Sound.SoundId = "rbxassetid://142070127"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local Sound = Instance.new("Sound",Character.UpperTorso)--136847657
		Sound.SoundId = "rbxassetid://169628396"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local effspwn = Instance.new("Part")
		local model = Instance.new("Model")
		game.Debris:AddItem(model, 20)
		model.Name = "smasheffects"
		model.Parent = Character
		effspwn.Name = "spwnr"
		effspwn.Size = Vector3.new(1, 1, 1)
		effspwn.Anchored = true
		effspwn.CanCollide = false
		effspwn.Transparency = 1
		effspwn.CFrame = Head.CFrame * CFrame.Angles(math.rad(180), 0, 0)
		effspwn.Parent = model


		for i = 1, 15 do
			local gtrace = Instance.new("Part",game.Workspace)
			gtrace.BrickColor = BrickColor.new("Grey")
			gtrace.Material = "Slate"
			gtrace.Size = Vector3.new(31,31,31)
			gtrace.Anchored = true
			gtrace.CanCollide = true
			gtrace.CFrame = (Character.HumanoidRootPart.CFrame + Vector3.new(math.random(-70,70),-6,math.random(-70,70))) * CFrame.fromEulerAnglesXYZ(math.random(0,math.rad(359)),math.random(0,math.rad(359)),math.random(0,math.rad(359)))
			local gdisp = coroutine.wrap(function()
				wait(12)
				for i = 1, 9 do
					wait(.1)
					gtrace.Transparency = gtrace.Transparency + .1
				end
				gtrace:Destroy()
			end)
			gdisp()
		end


		for i,v in pairs(FindNearestTorso(UpperTorso.CFrame.p,50))do
			if v:FindFirstChild('Humanoid') then
				v.Humanoid:TakeDamage(math.random(12040,12040))
				v.Humanoid.PlatformStand = true
				v:FindFirstChild("Torso").Velocity = UpperTorso.CFrame.lookVector * 250
			end
		end 


		local H33 = Instance.new("Part",Character)
		H33.Size = Vector3.new(1,1,1)
		H33.BrickColor = BrickColor.new("White")
		H33.CanCollide = false
		H33.Anchored = true
		H33.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
		local H233 = Instance.new("SpecialMesh",H33)
		H233.MeshId = "rbxassetid://3270017"
		local H333 = Instance.new("Part",Character)
		H333.Size = Vector3.new(1,1,1)
		H333.BrickColor = BrickColor.new("White")
		H333.CanCollide = false
		H333.Anchored = true
		H333.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
		local H2333 = Instance.new("SpecialMesh",H333)
		H2333.MeshId = "rbxassetid://3270017"
		local H4 = Instance.new("Part",Character)
		H4.Size = Vector3.new(1,1,1)
		H4.BrickColor = BrickColor.new("White")
		H4.CanCollide = false
		H4.Anchored = true
		H4.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.75)
		local H24 = Instance.new("SpecialMesh",H4)
		H24.MeshId = "rbxassetid://3270017"
		coroutine.resume(coroutine.create(function()
			for i = 1,200 do
				H233.Scale = H233.Scale + Vector3.new(16,16,16)
				H33.Transparency = H33.Transparency + 0.02
				H2333.Scale = H2333.Scale + Vector3.new(17,17,17)
				H333.Transparency = H333.Transparency + 0.02
				H24.Scale = H24.Scale + Vector3.new(17,17,17)
				H4.Transparency = H4.Transparency + 0.02
				wait(0.00000000001)
			end
		end))


		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Institutional white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(90), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.35
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://"
			mesh.Scale = Vector3.new(1, 1, 1)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(1, 2.6, 1)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(1, 2, 1)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(1, 2, 1)
				shok.Transparency = shok.Transparency + 0.06
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))


		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Lily white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(90), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.1
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://1095708"
			mesh.Scale = Vector3.new(47, 47, 47)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, 4.6, 3)
				shok.Transparency = shok.Transparency + 0.04
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, 4.6, 3)
				shok.Transparency = shok.Transparency + 0.04
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
				shok.BrickColor = BrickColor.new("Grey")
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, -1, 3)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))

		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Institutional white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.35
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://549734488"
			mesh.Scale = Vector3.new(1, 1, 1)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.06
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))
	end
	--
	function chow()

		local Sound = Instance.new("Sound",hit)--136847657
		Sound.SoundId = "rbxassetid://142070127"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local Sound = Instance.new("Sound",hit)--136847657
		Sound.SoundId = "rbxassetid://169628396"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local effspwn = Instance.new("Part")
		local model = Instance.new("Model")
		game.Debris:AddItem(model, 20)
		model.Name = "smasheffects"
		model.Parent = Character
		effspwn.Name = "spwnr"
		effspwn.Size = Vector3.new(1, 1, 1)
		effspwn.Anchored = true
		effspwn.CanCollide = false
		effspwn.Transparency = 1
		effspwn.CFrame = Head.CFrame * CFrame.Angles(math.rad(180), 0, 0)
		effspwn.Parent = model


		for i = 1, 15 do
			local gtrace = Instance.new("Part",game.Workspace)
			gtrace.BrickColor = BrickColor.new("Grey")
			gtrace.Material = "Slate"
			gtrace.Size = Vector3.new(31,31,31)
			gtrace.Anchored = true
			gtrace.CanCollide = true
			gtrace.CFrame = (hit.CFrame + Vector3.new(math.random(-70,70),-6,math.random(-70,70))) * CFrame.fromEulerAnglesXYZ(math.random(0,math.rad(359)),math.random(0,math.rad(359)),math.random(0,math.rad(359)))
			local gdisp = coroutine.wrap(function()
				wait(12)
				for i = 1, 9 do
					wait(.1)
					gtrace.Transparency = gtrace.Transparency + .1
				end
				gtrace:Destroy()
			end)
			gdisp()
		end


		for i,v in pairs(FindNearestTorso(UpperTorso.CFrame.p,50))do
			if v:FindFirstChild('Humanoid') then
				v.Humanoid:TakeDamage(math.random(12040,12040))
				v.Humanoid.PlatformStand = true
				v:FindFirstChild("Torso").Velocity = UpperTorso.CFrame.lookVector * 250
			end
		end 


		local H33 = Instance.new("Part",Character)
		H33.Size = Vector3.new(1,1,1)
		H33.BrickColor = BrickColor.new("White")
		H33.CanCollide = false
		H33.Anchored = true
		H33.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
		local H233 = Instance.new("SpecialMesh",H33)
		H233.MeshId = "rbxassetid://3270017"
		local H333 = Instance.new("Part",Character)
		H333.Size = Vector3.new(1,1,1)
		H333.BrickColor = BrickColor.new("White")
		H333.CanCollide = false
		H333.Anchored = true
		H333.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
		local H2333 = Instance.new("SpecialMesh",H333)
		H2333.MeshId = "rbxassetid://3270017"
		local H4 = Instance.new("Part",Character)
		H4.Size = Vector3.new(1,1,1)
		H4.BrickColor = BrickColor.new("White")
		H4.CanCollide = false
		H4.Anchored = true
		H4.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.75)
		local H24 = Instance.new("SpecialMesh",H4)
		H24.MeshId = "rbxassetid://3270017"
		coroutine.resume(coroutine.create(function()
			for i = 1,200 do
				H233.Scale = H233.Scale + Vector3.new(16,16,16)
				H33.Transparency = H33.Transparency + 0.02
				H2333.Scale = H2333.Scale + Vector3.new(17,17,17)
				H333.Transparency = H333.Transparency + 0.02
				H24.Scale = H24.Scale + Vector3.new(17,17,17)
				H4.Transparency = H4.Transparency + 0.02
				wait(0.00000000001)
			end
		end))


		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Institutional white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(90), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.35
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://"
			mesh.Scale = Vector3.new(1, 1, 1)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(1, 2.6, 1)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(1, 2, 1)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(1, 2, 1)
				shok.Transparency = shok.Transparency + 0.06
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))


		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Lily white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(90), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.1
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://1095708"
			mesh.Scale = Vector3.new(47, 47, 47)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, 4.6, 3)
				shok.Transparency = shok.Transparency + 0.04
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, 4.6, 3)
				shok.Transparency = shok.Transparency + 0.04
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
				shok.BrickColor = BrickColor.new("Grey")
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, -1, 3)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))

		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Institutional white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.35
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://549734488"
			mesh.Scale = Vector3.new(1, 1, 1)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.06
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))
	end
	--
	Mouse.KeyDown:connect(function(k)
		if k:byte() == 48 then

			Humanoid.WalkSpeed = 200
		end
	end)

	Mouse.KeyUp:connect(function(k)
		if k:byte() == 48 then

			Humanoid.WalkSpeed = 16
		end
	end)

	--
	function SeriousSlam()

		local Sound = Instance.new("Sound",Character.UpperTorso)--136847657
		Sound.SoundId = "rbxassetid://142070127"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local Sound = Instance.new("Sound",Character.UpperTorso)--136847657
		Sound.SoundId = "rbxassetid://169628396"
		Sound.Pitch = 1
		Sound.Looped = false
		Sound.Volume = 10
		Sound:play()
		local effspwn = Instance.new("Part")
		local model = Instance.new("Model")
		game.Debris:AddItem(model, 20)
		model.Name = "smasheffects"
		model.Parent = Character
		effspwn.Name = "spwnr"
		effspwn.Size = Vector3.new(1, 1, 1)
		effspwn.Anchored = true
		effspwn.CanCollide = false
		effspwn.Transparency = 1
		effspwn.CFrame = Head.CFrame * CFrame.Angles(math.rad(180), 0, 0)
		effspwn.Parent = model


		for i = 1, 15 do
			local gtrace = Instance.new("Part",game.Workspace)
			gtrace.BrickColor = BrickColor.new("Grey")
			gtrace.Material = "Slate"
			gtrace.Size = Vector3.new(91,91,91)
			gtrace.Anchored = true
			gtrace.CanCollide = true
			gtrace.CFrame = (Character.HumanoidRootPart.CFrame + Vector3.new(math.random(-240,240),-6,math.random(-240,240))) * CFrame.fromEulerAnglesXYZ(math.random(0,math.rad(76)),math.random(0,math.rad(90)),math.random(0,math.rad(360)))

			local gdisp = coroutine.wrap(function()
				wait(18)
				for i = 1, 9 do
					wait(.1)
					gtrace.Transparency = gtrace.Transparency + .1
				end
				gtrace:Destroy()
			end)
			gdisp()
		end



		local exp = Instance.new("Explosion",Character)
		exp.BlastRadius = 147.5
		exp.BlastPressure = 200
		exp.Position = Character.HumanoidRootPart.Position
		exp.Visible = false





		for i,v in pairs(FindNearestTorso(UpperTorso.CFrame.p,50))do
			if v:FindFirstChild('Humanoid') then
				v.Humanoid:TakeDamage(math.random(1129431924919202,1129431924919202))
				v.Humanoid.PlatformStand = true
				v:FindFirstChild("Torso").Velocity = UpperTorso.CFrame.lookVector * 5
			end
		end 



		local H33 = Instance.new("Part",Character)
		H33.Size = Vector3.new(1,1,1)
		H33.BrickColor = BrickColor.new("White")
		H33.CanCollide = false
		H33.Anchored = true
		H33.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
		local H233 = Instance.new("SpecialMesh",H33)
		H233.MeshId = "rbxassetid://3270017"
		local H333 = Instance.new("Part",Character)
		H333.Size = Vector3.new(1,1,1)
		H333.BrickColor = BrickColor.new("White")
		H333.CanCollide = false
		H333.Anchored = true
		H333.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
		local H2333 = Instance.new("SpecialMesh",H333)
		H2333.MeshId = "rbxassetid://3270017"
		local H4 = Instance.new("Part",Character)
		H4.Size = Vector3.new(1,1,1)
		H4.BrickColor = BrickColor.new("White")
		H4.CanCollide = false
		H4.Anchored = true
		H4.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.75)
		local H24 = Instance.new("SpecialMesh",H4)
		H24.MeshId = "rbxassetid://3270017"
		coroutine.resume(coroutine.create(function()
			for i = 1,200 do
				H233.Scale = H233.Scale + Vector3.new(36,36,36)
				H33.Transparency = H33.Transparency + 0.02
				H2333.Scale = H2333.Scale + Vector3.new(37,37,37)
				H333.Transparency = H333.Transparency + 0.02
				H24.Scale = H24.Scale + Vector3.new(37,37,37)
				H4.Transparency = H4.Transparency + 0.02
				wait(0.00000000001)
			end
		end))


		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Institutional white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(90), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.35
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://"
			mesh.Scale = Vector3.new(1, 1, 1)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(15, 20.6, 15)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(1, 2, 1)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(1, 2, 1)
				shok.Transparency = shok.Transparency + 0.06
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))


		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Lily white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(90), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.1
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://1095708"
			mesh.Scale = Vector3.new(67, 67, 47)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, 4.6, 3)
				shok.Transparency = shok.Transparency + 0.04
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, 4.6, 3)
				shok.Transparency = shok.Transparency + 0.04
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
				shok.BrickColor = BrickColor.new("Grey")
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(3, -1, 3)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))

		coroutine.resume(coroutine.create(function()
			local shok = Instance.new("Part")
			shok.Name = "shock3"
			shok.BrickColor = BrickColor.new("Institutional white")
			shok.CFrame = effspwn.CFrame * CFrame.new(0, 6, 0) * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
			shok.Size = Vector3.new(1, 1, 1)
			shok.Anchored = true
			shok.Material = "Neon"
			shok.Transparency = 0.35
			shok.CanCollide = false
			shok.Parent = model
			game.Debris:AddItem(shok, 12)
			local mesh = Instance.new("SpecialMesh")
			mesh.MeshType = "FileMesh"
			mesh.MeshId = "rbxassetid://549734488"
			mesh.Scale = Vector3.new(1, 1, 1)
			mesh.Parent = shok
			for e = 1, 15 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(0), math.rad(0))
			end
			for e = 1, 16 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.004
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
			for e = 1, 12 do
				wait()
				mesh.Scale = mesh.Scale + Vector3.new(0.2, 0.2, 0.2)
				shok.Transparency = shok.Transparency + 0.06
				shok.CFrame = shok.CFrame:lerp(shok.CFrame * CFrame.new(0, 2, 0), 0.4)
				shok.CFrame = shok.CFrame * CFrame.Angles(math.rad(0), math.rad(-16), math.rad(0))
			end
		end))
	end
	--
	------
	-------------------------------------------
	function Jump()
		if not D then D = true
			Idle = true
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(-0.5,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.4,0,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(0.5,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.2,0,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			local sbs = Instance.new("BodyPosition", RootPart)
			sbs.P = 3000
			sbs.D = 1000
			sbs.maxForce = Vector3.new(900000, 900000000, 900000)
			sbs.position = RootPart.CFrame.p + Vector3.new(0, 400, 0)
			local Sound = Instance.new("Sound",Character.UpperTorso)
			Sound.SoundId = "rbxassetid://845572880"
			Sound.Volume = 32
			Sound.Pitch = 1
			Sound.Looped = false
			Sound:Play()
			wait(0.5)
			local Bq = Instance.new("Part",UpperTorso)
			Bq.Size = Vector3.new(1,1,1)
			Bq.BrickColor = BrickColor.new("White")
			Bq.Material = "Neon"
			Bq.Anchored = false
			Bq.Transparency = math.huge
			Bq.CanCollide = false
			Bq.CFrame = RootPart.CFrame*CFrame.new(0,0,-12)
			local Bq2 = Instance.new("SpecialMesh",Bq)
			Bq2.MeshType = "Sphere"
			Bq2.Scale = Vector3.new(1,1,1)
			Bq.Touched:connect(function(hit)
				if hitted == false then
					hitted = true
					Bq.Anchored = true

					for i = 1,1000 do

						Bq2.Scale = Bq2.Scale + Vector3.new(1,1,1)
						Bq.Transparency = Bq.Transparency + 0.003
						game:GetService("RunService").RenderStepped:wait()
					end
				end
			end)
			for i = 1,100 do
				Bq2.Scale = Bq2.Scale + Vector3.new(0.1,0.1,0.1)
				game:GetService("RunService").RenderStepped:wait()
			end
			Bq.Anchored = false
			local Fl = Instance.new("BodyVelocity",Bq)
			Fl.maxForce = Vector3.new(math.huge,math.huge,math.huge)
			Fl.velocity = Mouse.hit.lookVector*120
			wait(0.4)
			Idle = false
			hitted = false
			sbs:remove()
			wait(0.3)
			D = false
		end
	end
	----
	function Dash()
		if not D then D = true
			Idle = true
			for i = 0,1,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1.2,0,0.5),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-0.8),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(.6,0,-0.6),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,5,1),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(.5,.2,.3),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.3,1,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			local bv = Instance.new("BodyVelocity")
			bv.maxForce = Vector3.new(1e9, 1e9, 1e9)
			bv.velocity = RootPart.CFrame.lookVector*250
			bv.Parent = RootPart
			game:GetService("Debris"):AddItem(bv, 1)
			local Sound = Instance.new("Sound",Character.UpperTorso)
			Sound.SoundId = "rbxassetid://"
			Sound.Volume = 32
			Sound.Pitch = 1
			Sound.Looped = false
			Sound:Play()
			wait(0.5)
			local Bq = Instance.new("Part",UpperTorso)
			Bq.Size = Vector3.new(1,1,1)
			Bq.BrickColor = BrickColor.new("White")
			Bq.Material = "Neon"
			Bq.Anchored = false
			Bq.Transparency = math.huge
			Bq.CanCollide = false
			Bq.CFrame = RootPart.CFrame*CFrame.new(0,0,-12)
			local Bq2 = Instance.new("SpecialMesh",Bq)
			Bq2.MeshType = "Sphere"
			Bq2.Scale = Vector3.new(1,1,1)
			Bq.Touched:connect(function(hit)
				if hitted == false then
					hitted = true
					Bq.Anchored = true

					for i = 1,1000 do

						Bq2.Scale = Bq2.Scale + Vector3.new(1,1,1)
						Bq.Transparency = Bq.Transparency + 0.003
						game:GetService("RunService").RenderStepped:wait()
					end
				end
			end)
			for i = 1,100 do
				Bq2.Scale = Bq2.Scale + Vector3.new(0.1,0.1,0.1)
				game:GetService("RunService").RenderStepped:wait()
			end
			Bq.Anchored = false
			local Fl = Instance.new("BodyVelocity",Bq)
			Fl.maxForce = Vector3.new(math.huge,math.huge,math.huge)
			Fl.velocity = Mouse.hit.lookVector*150
			wait(0.5)
			Idle = false
			hitted = false
			wait(0.4)
			D = false
		end
	end
	---
	function Detroit()
		if not D then D = false
			Idle = true
			for i = 0,2,0.1 do
				swait()
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,1.55),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,1),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(-90,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(0,0.6,0.3),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,-1,0),.1)--Head
				--game:GetService("RunService").RenderStepped:wait()
			end
			local Sound = Instance.new("Sound",Character.UpperTorso)
			Sound.SoundId = "rbxassetid://"
			Sound.Pitch = 1
			Sound.Looped = false
			Sound.Volume = 5
			Sound:play()
			wait(0.5)

			coroutine.resume(coroutine.create(function()
				for i = 1,1000 do

					game:GetService("RunService").RenderStepped:wait()
				end

			end))
			for i = 0,1,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1.2,0,0.5),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-0.8),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(.6,0,-0.6),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(-90,5,1),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(.5,.2,.3),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.3,1,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			KickBoom()
			wait(0.7)
			Idle = false
			wait(0.2)
			D = false
		end
	end

	function SeriousWam()
		if not D then D = false
			Idle = true
			for i = 0,2,0.1 do
				swait()
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,1.55),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,1),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(-90,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(0,0.6,0.3),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,-1,0),.1)--Head
				--game:GetService("RunService").RenderStepped:wait()
			end
			local FZcharge = Instance.new("ParticleEmitter",RightHand)
			FZcharge.Texture = "rbxassetid://31727915"
			FZcharge.Color = ColorSequence.new(Color3.fromRGB(248, 248, 248))
			FZcharge.EmissionDirection = "Top"
			FZcharge.Speed = NumberRange.new(4)
			FZcharge.Size = NumberSequence.new(2,1)
			FZcharge.Drag = 2
			FZcharge.LockedToPart = false
			FZcharge.Lifetime = NumberRange.new(0.5)
			FZcharge.Rate = 150
			FZcharge.LightEmission = 0
			FZcharge.Rotation = NumberRange.new(-100, 100)
			FZcharge.VelocitySpread = 100
			local Sound = Instance.new("Sound",Character.UpperTorso)
			Sound.SoundId = "rbxassetid://"
			Sound.Pitch = 1
			Sound.Looped = false
			Sound.Volume = 5
			Sound:play()
			wait(1.5)

			coroutine.resume(coroutine.create(function()
				for i = 1,1000 do

					game:GetService("RunService").RenderStepped:wait()
				end

			end))
			for i = 0,1,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1.2,0,0.5),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-0.8),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(.6,0,-0.6),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(-90,5,1),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(.5,.2,.3),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.3,1,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			SeriousSlam()
			wait(0.7)
			Idle = false
			wait(0.2)
			FZcharge:Destroy()
			D = false
		end
	end

	function Hit()
		if not D then D = true
			Idle = true
			local Grab = Instance.new("Part",RightHand)
			Grab.Size = Vector3.new(3,3,3)
			Grab.CanCollide = false
			Grab.BrickColor = BrickColor.new("Deep orange")
			Grab.Transparency = math.huge
			local Grabo = Instance.new("Weld",Grab)
			Grabo.Part0 = RightHand
			Grabo.Part1 = Grab
			Grabo.C0 = CFrame.new(0,-1.1,0)
			local SFXZ = Instance.new("Sound",UpperTorso)
			SFXZ.SoundId = "rbxassetid://169259383"
			SFXZ.Volume = 1
			SFXZ.Pitch = 1.5
			SFXZ.Looped = false
			wait(0.01)
			SFXZ:Play()
			Grab.Touched:connect(function(hit)
				if hit.Parent:FindFirstChild("Humanoid")and hit.Parent ~= nil and hit.Parent.Name ~= Player.Character.Name then
					Grab:Destroy()
					hit.Parent:BreakJoints()
					local exp = Instance.new("Explosion",Character)
					exp.BlastRadius = 6
					exp.BlastPressure = 100
					exp.Position = Character.HumanoidRootPart.Position
					exp.Visible = false
					local H = Instance.new("Part",Character)
					H.Size = Vector3.new(1,1,1)
					H.BrickColor = BrickColor.new("White")
					H.CanCollide = false
					H.Anchored = true
					H.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H3 = Instance.new("Part",Character)
					H3.Size = Vector3.new(1,1,1)
					H3.BrickColor = BrickColor.new("White")
					H3.CanCollide = false
					H3.Anchored = true
					H3.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
					local H23 = Instance.new("SpecialMesh",H3)
					H23.MeshId = "rbxassetid://3270017"
					local H33 = Instance.new("Part",Character)
					H33.Size = Vector3.new(1,1,1)
					H33.BrickColor = BrickColor.new("White")
					H33.CanCollide = false
					H33.Anchored = true
					H33.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,0,0)*CFrame.Angles(0,1.55,0)
					local H233 = Instance.new("SpecialMesh",H33)
					H233.MeshId = "rbxassetid://20329976"
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H5 = Instance.new("Part",Character)
					H5.Size = Vector3.new(1,1,1)
					H5.BrickColor = BrickColor.new("White")
					H5.CanCollide = false
					H5.Anchored = true
					H5.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
					local H25 = Instance.new("SpecialMesh",H5)
					H25.MeshId = "rbxassetid://3270017"
					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							H2.Scale = H2.Scale + Vector3.new(6,6,6)
							H.Transparency = H.Transparency + 0.09
							H23.Scale = H23.Scale + Vector3.new(8,8,8)
							H3.Transparency = H3.Transparency + 0.09
							H233.Scale = H23.Scale + Vector3.new(6,6,6)
							H33.Transparency = H3.Transparency + 0.09
							H25.Scale = H25.Scale + Vector3.new(6,6,6)
							H5.Transparency = H5.Transparency + 0.09
							wait(0.00000000001)
						end
					end))
					local SFXZ = Instance.new("Sound",UpperTorso)
					SFXZ.SoundId = "rbxassetid://447041606"
					SFXZ.Volume = 6
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local Fl = Instance.new("BodyVelocity",hit.Parent.Head)
					Fl.maxForce = Vector3.new(math.huge,math.huge,math.huge)
					Fl.velocity = UpperTorso.CFrame.lookVector*400
					wait(0.05)
					Fl:remove()
				end
			end)
			for i = 0,2,0.3 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1.55),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,1),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,-0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			coroutine.resume(coroutine.create(function()
				wait(0.5)
				Grab:remove()
			end))
			Idle = false
			wait(0.1)
			D = false
		end
	end


	function Uppercut()
		if not D then D = true
			Idle = true
			local Grab = Instance.new("Part",RightHand)
			Grab.Size = Vector3.new(3,3,3)
			Grab.CanCollide = false
			Grab.BrickColor = BrickColor.new("Deep orange")
			Grab.Transparency = math.huge
			local Grabo = Instance.new("Weld",Grab)
			Grabo.Part0 = RightHand
			Grabo.Part1 = Grab
			Grabo.C0 = CFrame.new(0,-1.1,0)
			local SFXZ = Instance.new("Sound",UpperTorso)
			SFXZ.SoundId = "rbxassetid://169259383"
			SFXZ.Volume = 1
			SFXZ.Pitch = 1.5
			SFXZ.Looped = false
			wait(0.01)
			SFXZ:Play()
			Grab.Touched:connect(function(hit)
				if hit.Parent:FindFirstChild("Humanoid")and hit.Parent ~= nil and hit.Parent.Name ~= Player.Character.Name then
					Grab:Destroy()
					hit.Parent.Humanoid:TakeDamage(30)
					local FZcharge = Instance.new("ParticleEmitter",hit)
					FZcharge.Texture = "rbxassetid://31727915"
					FZcharge.Color = ColorSequence.new(Color3.fromRGB(248, 248, 248))
					FZcharge.EmissionDirection = "Bottom"
					FZcharge.Speed = NumberRange.new(5)
					FZcharge.Size = NumberSequence.new(10,0)
					FZcharge.Drag = 2
					FZcharge.LockedToPart = false
					FZcharge.Lifetime = NumberRange.new(3)
					FZcharge.Rate = 150
					FZcharge.LightEmission = 0
					FZcharge.Rotation = NumberRange.new(-100, 100)
					FZcharge.VelocitySpread = 100
					local SFXZZ = Instance.new("Sound",hit)
					SFXZZ.SoundId = "rbxassetid://1056625824"
					SFXZZ.Volume = 2.5
					SFXZZ.Pitch = 1
					SFXZZ.Looped = false
					wait(0.01)
					SFXZZ:Play()
					local H = Instance.new("Part",Character)
					H.Size = Vector3.new(1,1,1)
					H.BrickColor = BrickColor.new("White")
					H.CanCollide = false
					H.Anchored = true
					H.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H3 = Instance.new("Part",Character)
					H3.Size = Vector3.new(1,1,1)
					H3.BrickColor = BrickColor.new("White")
					H3.CanCollide = false
					H3.Anchored = true
					H3.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
					local H23 = Instance.new("SpecialMesh",H3)
					H23.MeshId = "rbxassetid://3270017"
					local H33 = Instance.new("Part",Character)
					H33.Size = Vector3.new(1,1,1)
					H33.BrickColor = BrickColor.new("White")
					H33.CanCollide = false
					H33.Anchored = true
					H33.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,0,0)*CFrame.Angles(0,1.55,0)
					local H233 = Instance.new("SpecialMesh",H33)
					H233.MeshId = "rbxassetid://20329976"
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H5 = Instance.new("Part",Character)
					H5.Size = Vector3.new(1,1,1)
					H5.BrickColor = BrickColor.new("White")
					H5.CanCollide = false
					H5.Anchored = true
					H5.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
					local H25 = Instance.new("SpecialMesh",H5)
					H25.MeshId = "rbxassetid://3270017"
					local Hi = Instance.new("Part",hit)
					Hi.Size = Vector3.new(1,1,1)
					Hi.BrickColor = BrickColor.new("White")
					Hi.CanCollide = false
					Hi.Anchored = true
					Hi.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local Hi2 = Instance.new("SpecialMesh",Hi)
					Hi2.MeshId = "rbxassetid://3270017"
					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							H2.Scale = H2.Scale + Vector3.new(6,6,6)
							H.Transparency = H.Transparency + 0.09
							H23.Scale = H23.Scale + Vector3.new(8,8,8)
							H3.Transparency = H3.Transparency + 0.09
							H233.Scale = H23.Scale + Vector3.new(6,6,6)
							H33.Transparency = H3.Transparency + 0.09
							H25.Scale = H25.Scale + Vector3.new(6,6,6)
							H5.Transparency = H5.Transparency + 0.09
							Hi2.Scale = Hi2.Scale + Vector3.new(6,6,6)
							Hi.Transparency = Hi.Transparency + 0.09
							wait(0.00000000001)
						end
					end))
					local SFXZ = Instance.new("Sound",UpperTorso)
					SFXZ.SoundId = "rbxassetid://447041606"
					SFXZ.Volume = 6
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local Fl = Instance.new("BodyVelocity",hit.Parent.Head)
					Fl.maxForce = Vector3.new(9000000, 9000000000, 9000000)
					Fl.velocity = RootPart.CFrame.p + Vector3.new(0, 580, 0)
					wait(0.05)
					Fl:remove()
					wait(1.1)
					FZcharge.Rate = 0
					local ry,ht,ps=nil,nil,nil
					while ht==nil do
						ry,ht,ps=newRay(hit.CFrame*CFrame.new(0,-1,0),hit.CFrame*CFrame.new(0,-2,0),4.1,{hit})
						wait()
					end
					for i = 1, 15 do
						local gtrace = Instance.new("Part",game.Workspace)
						gtrace.BrickColor = BrickColor.new("Grey")
						gtrace.Material = "Slate"
						gtrace.Size = Vector3.new(31,31,31)
						gtrace.Anchored = true
						gtrace.CanCollide = true
						gtrace.CFrame = (hit.CFrame + Vector3.new(math.random(-70,70),-6,math.random(-70,70))) * CFrame.fromEulerAnglesXYZ(math.random(0,math.rad(359)),math.random(0,math.rad(359)),math.random(0,math.rad(359)))
						local gdisp = coroutine.wrap(function()
							wait(12)
							for i = 1, 9 do
								wait(.1)
								gtrace.Transparency = gtrace.Transparency + .1
							end
							gtrace:Destroy()
						end)
						gdisp()
					end
					local SFXZ = Instance.new("Sound",hit)
					SFXZ.SoundId = "rbxassetid://539294959"
					SFXZ.Volume = 10
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local SFXZ = Instance.new("Sound",hit)
					SFXZ.SoundId = "rbxassetid://180120107"
					SFXZ.Volume = 10
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local SFXZ = Instance.new("Sound",hit)
					SFXZ.SoundId = "rbxassetid://315775189"
					SFXZ.Volume = 10
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local SFXZ = Instance.new("Sound",hit)
					SFXZ.SoundId = "rbxassetid://157878578"
					SFXZ.Volume = 10
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					hit.Parent:BreakJoints()
					local H = Instance.new("Part",Character)
					H.Size = Vector3.new(1,1,1)
					H.BrickColor = BrickColor.new("White")
					H.CanCollide = false
					H.Anchored = true
					H.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H3 = Instance.new("Part",Character)
					H3.Size = Vector3.new(1,1,1)
					H3.BrickColor = BrickColor.new("White")
					H3.CanCollide = false
					H3.Anchored = true
					H3.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
					local H23 = Instance.new("SpecialMesh",H3)
					H23.MeshId = "rbxassetid://3270017"
					local H33 = Instance.new("Part",Character)
					H33.Size = Vector3.new(1,1,1)
					H33.BrickColor = BrickColor.new("White")
					H33.CanCollide = false
					H33.Anchored = true
					H33.CFrame = hit.CFrame*CFrame.new(0,0,0)*CFrame.Angles(0,1.55,0)
					local H233 = Instance.new("SpecialMesh",H33)
					H233.MeshId = "rbxassetid://20329976"
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H5 = Instance.new("Part",Character)
					H5.Size = Vector3.new(1,1,1)
					H5.BrickColor = BrickColor.new("White")
					H5.CanCollide = false
					H5.Anchored = true
					H5.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
					local H25 = Instance.new("SpecialMesh",H5)
					H25.MeshId = "rbxassetid://3270017"
					local Hi = Instance.new("Part",hit)
					Hi.Size = Vector3.new(1,1,1)
					Hi.BrickColor = BrickColor.new("White")
					Hi.CanCollide = false
					Hi.Anchored = true
					Hi.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local Hi2 = Instance.new("SpecialMesh",Hi)
					Hi2.MeshId = "rbxassetid://3270017"
					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							H2.Scale = H2.Scale + Vector3.new(14,14,14)
							H.Transparency = H.Transparency + 0.03
							H23.Scale = H23.Scale + Vector3.new(14,14,14)
							H3.Transparency = H3.Transparency + 0.03
							H233.Scale = H23.Scale + Vector3.new(14,14,14)
							H33.Transparency = H3.Transparency + 0.03
							H25.Scale = H25.Scale + Vector3.new(14,14,14)
							H5.Transparency = H5.Transparency + 0.03
							Hi2.Scale = Hi2.Scale + Vector3.new(6,6,6)
							Hi.Transparency = Hi.Transparency + 0.03
							wait(0.00000000001)
						end
					end))
				end
			end)
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.22,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(-0.4,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.3,0,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			coroutine.resume(coroutine.create(function()
				wait(0.5)
				Grab:remove()
			end))
			Idle = false
			wait(0.1)
			D = false
		end
	end


	function Away()
		if not D then D = true
			Idle = true
			local Grab = Instance.new("Part",LeftHand)
			Grab.Size = Vector3.new(3,3,3)
			Grab.CanCollide = false
			Grab.BrickColor = BrickColor.new("Deep orange")
			Grab.Transparency = math.huge
			local Grabo = Instance.new("Weld",Grab)
			Grabo.Part0 = LeftHand
			Grabo.Part1 = Grab
			Grabo.C0 = CFrame.new(0,-1.1,0)
			local SFXZ = Instance.new("Sound",UpperTorso)
			SFXZ.SoundId = "rbxassetid://169259383"
			SFXZ.Volume = 1
			SFXZ.Pitch = 1.5
			SFXZ.Looped = false
			wait(0.01)
			SFXZ:Play()
			Grab.Touched:connect(function(hit)
				if hit.Parent:FindFirstChild("Humanoid")and hit.Parent ~= nil and hit.Parent.Name ~= Player.Character.Name then
					Grab:Destroy()
					hit.Parent.Humanoid:TakeDamage(20)
					local FZcharge = Instance.new("ParticleEmitter",hit)
					FZcharge.Texture = "rbxassetid://31727915"
					FZcharge.Color = ColorSequence.new(Color3.fromRGB(248, 248, 248))
					FZcharge.EmissionDirection = "Bottom"
					FZcharge.Speed = NumberRange.new(5)
					FZcharge.Size = NumberSequence.new(10,0)
					FZcharge.Drag = 2
					FZcharge.LockedToPart = false
					FZcharge.Lifetime = NumberRange.new(3)
					FZcharge.Rate = 150
					FZcharge.LightEmission = 0
					FZcharge.Rotation = NumberRange.new(-100, 100)
					FZcharge.VelocitySpread = 100
					local SFXZZ = Instance.new("Sound",hit)
					SFXZZ.SoundId = "rbxassetid://1056625824"
					SFXZZ.Volume = 2.5
					SFXZZ.Pitch = 1
					SFXZZ.Looped = false
					wait(0.01)
					SFXZZ:Play()
					local H = Instance.new("Part",Character)
					H.Size = Vector3.new(1,1,1)
					H.BrickColor = BrickColor.new("White")
					H.CanCollide = false
					H.Anchored = true
					H.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H3 = Instance.new("Part",Character)
					H3.Size = Vector3.new(1,1,1)
					H3.BrickColor = BrickColor.new("White")
					H3.CanCollide = false
					H3.Anchored = true
					H3.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
					local H23 = Instance.new("SpecialMesh",H3)
					H23.MeshId = "rbxassetid://3270017"
					local H33 = Instance.new("Part",Character)
					H33.Size = Vector3.new(1,1,1)
					H33.BrickColor = BrickColor.new("White")
					H33.CanCollide = false
					H33.Anchored = true
					H33.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,0,0)*CFrame.Angles(0,1.55,0)
					local H233 = Instance.new("SpecialMesh",H33)
					H233.MeshId = "rbxassetid://20329976"
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H5 = Instance.new("Part",Character)
					H5.Size = Vector3.new(1,1,1)
					H5.BrickColor = BrickColor.new("White")
					H5.CanCollide = false
					H5.Anchored = true
					H5.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
					local H25 = Instance.new("SpecialMesh",H5)
					H25.MeshId = "rbxassetid://3270017"
					local Hi = Instance.new("Part",hit)
					Hi.Size = Vector3.new(1,1,1)
					Hi.BrickColor = BrickColor.new("White")
					Hi.CanCollide = false
					Hi.Anchored = true
					Hi.CFrame = hit.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local Hi2 = Instance.new("SpecialMesh",Hi)
					Hi2.MeshId = "rbxassetid://3270017"
					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							H2.Scale = H2.Scale + Vector3.new(6,6,6)
							H.Transparency = H.Transparency + 0.09
							H23.Scale = H23.Scale + Vector3.new(8,8,8)
							H3.Transparency = H3.Transparency + 0.09
							H233.Scale = H23.Scale + Vector3.new(6,6,6)
							H33.Transparency = H3.Transparency + 0.09
							H25.Scale = H25.Scale + Vector3.new(6,6,6)
							H5.Transparency = H5.Transparency + 0.09
							Hi2.Scale = Hi2.Scale + Vector3.new(6,6,6)
							Hi.Transparency = Hi.Transparency + 0.09
							wait(0.00000000001)
						end
					end))
					local SFXZ = Instance.new("Sound",UpperTorso)
					SFXZ.SoundId = "rbxassetid://447041606"
					SFXZ.Volume = 6
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local Fl = Instance.new("BodyVelocity",hit.Parent.Head)
					Fl.maxForce = Vector3.new(math.huge,math.huge,math.huge)
					Fl.velocity = UpperTorso.CFrame.lookVector*680
					wait(0.05)
					Fl:remove()
					wait(1.1)
					FZcharge.Rate = 0
				end
			end)
			for i = 0,0.5,0.3 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1.55),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			for i = 0,0.5,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,1),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,-0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			coroutine.resume(coroutine.create(function()
				wait(0.5)
				Grab:remove()
			end))
			Idle = false
			wait(0.1)
			D = false
		end
	end


	function Hit2()
		if not D then D = true
			Idle = true
			local Grab = Instance.new("Part",LeftHand)
			Grab.Size = Vector3.new(3,3,3)
			Grab.CanCollide = false
			Grab.BrickColor = BrickColor.new("Deep orange")
			Grab.Transparency = math.huge
			local Grabo = Instance.new("Weld",Grab)
			Grabo.Part0 = LeftHand
			Grabo.Part1 = Grab
			Grabo.C0 = CFrame.new(0,-1.1,0)
			local SFXZ = Instance.new("Sound",UpperTorso)
			SFXZ.SoundId = "rbxassetid://169259383"
			SFXZ.Volume = 1
			SFXZ.Pitch = 1.5
			SFXZ.Looped = false
			wait(0.01)
			SFXZ:Play()
			Grab.Touched:connect(function(hit)
				if hit.Parent:FindFirstChild("Humanoid")and hit.Parent ~= nil and hit.Parent.Name ~= Player.Character.Name then
					Grab:Destroy()
					hit.Parent.Humanoid:TakeDamage(212900)
					local exp = Instance.new("Explosion",Character)
					exp.BlastRadius = 6
					exp.BlastPressure = 100
					exp.Position = Character.HumanoidRootPart.Position
					exp.Visible = false
					local H = Instance.new("Part",Character)
					H.Size = Vector3.new(1,1,1)
					H.BrickColor = BrickColor.new("White")
					H.CanCollide = false
					H.Anchored = true
					H.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H3 = Instance.new("Part",Character)
					H3.Size = Vector3.new(1,1,1)
					H3.BrickColor = BrickColor.new("White")
					H3.CanCollide = false
					H3.Anchored = true
					H3.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
					local H23 = Instance.new("SpecialMesh",H3)
					H23.MeshId = "rbxassetid://3270017"
					local H33 = Instance.new("Part",Character)
					H33.Size = Vector3.new(1,1,1)
					H33.BrickColor = BrickColor.new("White")
					H33.CanCollide = false
					H33.Anchored = true
					H33.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,0,0)*CFrame.Angles(0,1.55,0)
					local H233 = Instance.new("SpecialMesh",H33)
					H233.MeshId = "rbxassetid://20329976"
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H5 = Instance.new("Part",Character)
					H5.Size = Vector3.new(1,1,1)
					H5.BrickColor = BrickColor.new("White")
					H5.CanCollide = false
					H5.Anchored = true
					H5.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
					local H25 = Instance.new("SpecialMesh",H5)
					H25.MeshId = "rbxassetid://3270017"
					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							H2.Scale = H2.Scale + Vector3.new(6,6,6)
							H.Transparency = H.Transparency + 0.09
							H23.Scale = H23.Scale + Vector3.new(8,8,8)
							H3.Transparency = H3.Transparency + 0.09
							H233.Scale = H23.Scale + Vector3.new(6,6,6)
							H33.Transparency = H3.Transparency + 0.09
							H25.Scale = H25.Scale + Vector3.new(6,6,6)
							H5.Transparency = H5.Transparency + 0.09
							wait(0.00000000001)
						end
					end))
					local SFXZ = Instance.new("Sound",UpperTorso)
					SFXZ.SoundId = "rbxassetid://447041606"
					SFXZ.Volume = 6
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local Fl = Instance.new("BodyVelocity",hit.Parent.Head)
					Fl.maxForce = Vector3.new(math.huge,math.huge,math.huge)
					Fl.velocity = UpperTorso.CFrame.lookVector*400
					wait(0.05)
					Fl:remove()
				end
			end)
			for i = 0,2,0.3 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,1.55),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,-0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			coroutine.resume(coroutine.create(function()
				wait(0.5)
				Grab:remove()
			end))
			Idle = false
			wait(0.1)
			D = false
		end
	end
	function HitS()
		if not D then D = true
			Idle = true
			local Grab = Instance.new("Part",LeftHand)
			Grab.Size = Vector3.new(6,6,6)
			Grab.CanCollide = false
			Grab.BrickColor = BrickColor.new("Deep orange")
			Grab.Transparency = math.huge
			local Grabo = Instance.new("Weld",Grab)
			Grabo.Part0 = LeftHand
			Grabo.Part1 = Grab
			Grabo.C0 = CFrame.new(0,-1.1,0)
			local FZcharge = Instance.new("ParticleEmitter",LeftHand)
			FZcharge.Texture = "rbxassetid://31727915"
			FZcharge.Color = ColorSequence.new(Color3.fromRGB(248, 248, 248))
			FZcharge.EmissionDirection = "Bottom"
			FZcharge.Speed = NumberRange.new(0)
			FZcharge.Size = NumberSequence.new(1,0)
			FZcharge.Drag = 2
			FZcharge.LockedToPart = false
			FZcharge.Lifetime = NumberRange.new(1)
			FZcharge.Rate = 150
			FZcharge.LightEmission = 0.2
			FZcharge.Rotation = NumberRange.new(-100, 100)
			FZcharge.VelocitySpread = 100
			local SFXZ = Instance.new("Sound",UpperTorso)
			SFXZ.SoundId = "rbxassetid://169259383"
			SFXZ.Volume = 1
			SFXZ.Pitch = 1.5
			SFXZ.Looped = false
			wait(0.01)
			SFXZ:Play()
			Grab.Touched:connect(function(hit)
				if hit.Parent:FindFirstChild("Humanoid")and hit.Parent ~= nil and hit.Parent.Name ~= Player.Character.Name then
					Grab:Destroy()
					local H = Instance.new("Part",Character)
					H.Size = Vector3.new(1,1,1)
					H.BrickColor = BrickColor.new("White")
					H.CanCollide = false
					H.Anchored = true
					H.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H3 = Instance.new("Part",Character)
					H3.Size = Vector3.new(1,1,1)
					H3.BrickColor = BrickColor.new("White")
					H3.CanCollide = false
					H3.Anchored = true
					H3.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
					local H23 = Instance.new("SpecialMesh",H3)
					H23.MeshId = "rbxassetid://3270017"
					local H33 = Instance.new("Part",Character)
					H33.Size = Vector3.new(1,1,1)
					H33.BrickColor = BrickColor.new("White")
					H33.CanCollide = false
					H33.Anchored = true
					H33.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,0,0)*CFrame.Angles(0,1.55,0)
					local H233 = Instance.new("SpecialMesh",H33)
					H233.MeshId = "rbxassetid://20329976"
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H5 = Instance.new("Part",Character)
					H5.Size = Vector3.new(1,1,1)
					H5.BrickColor = BrickColor.new("White")
					H5.CanCollide = false
					H5.Anchored = true
					H5.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
					local H25 = Instance.new("SpecialMesh",H5)
					H25.MeshId = "rbxassetid://3270017"
					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							H2.Scale = H2.Scale + Vector3.new(9,9,9)
							H.Transparency = H.Transparency + 0.09
							H23.Scale = H23.Scale + Vector3.new(9,9,9)
							H3.Transparency = H3.Transparency + 0.09
							H233.Scale = H23.Scale + Vector3.new(8,8,8)
							H33.Transparency = H3.Transparency + 0.09
							H25.Scale = H25.Scale + Vector3.new(8,8,8)
							H5.Transparency = H5.Transparency + 0.09
							wait(0.00000000001)
						end
					end))
					local SFXZ = Instance.new("Sound",UpperTorso)
					SFXZ.SoundId = "rbxassetid://447041606"
					SFXZ.Volume = 1
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local Fl = Instance.new("BodyVelocity",hit.Parent.Head)
					Fl.maxForce = Vector3.new(math.huge,math.huge,math.huge)
					Fl.velocity = UpperTorso.CFrame.lookVector*350
					local exp = Instance.new("Explosion",Character)
					exp.BlastRadius = 13
					exp.BlastPressure = 100
					exp.Position = Character.HumanoidRootPart.Position
					exp.Visible = false
					hit.Parent:BreakJoints()
					wait(1.3)
					hit.Parent:Destroy()
					wait(0.05)
					Fl:remove()
				end
			end)
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,1),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,-0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			coroutine.resume(coroutine.create(function()
				wait(0.5)
				Grab:remove()
			end))
			Idle = false
			FZcharge:Destroy()
			wait(0.1)
			D = false
		end
	end
	function Hit2S()
		if not D then D = true
			Idle = true
			local Grab = Instance.new("Part",RightHand)
			Grab.Size = Vector3.new(6,6,6)
			Grab.CanCollide = false
			Grab.BrickColor = BrickColor.new("Deep orange")
			Grab.Transparency = math.huge
			local Grabo = Instance.new("Weld",Grab)
			Grabo.Part0 = RightHand
			Grabo.Part1 = Grab
			Grabo.C0 = CFrame.new(0,-1.1,0)
			local FZcharge = Instance.new("ParticleEmitter",RightHand)
			FZcharge.Texture = "rbxassetid://31727915"
			FZcharge.Color = ColorSequence.new(Color3.fromRGB(248, 248, 248))
			FZcharge.EmissionDirection = "Bottom"
			FZcharge.Speed = NumberRange.new(0)
			FZcharge.Size = NumberSequence.new(1,0)
			FZcharge.Drag = 2
			FZcharge.LockedToPart = false
			FZcharge.Lifetime = NumberRange.new(1)
			FZcharge.Rate = 150
			FZcharge.LightEmission = 0.2
			FZcharge.Rotation = NumberRange.new(-100, 100)
			FZcharge.VelocitySpread = 100
			local SFXZ = Instance.new("Sound",UpperTorso)
			SFXZ.SoundId = "rbxassetid://169259383"
			SFXZ.Volume = 1
			SFXZ.Pitch = 1.5
			SFXZ.Looped = false
			wait(0.01)
			SFXZ:Play()
			Grab.Touched:connect(function(hit)
				if hit.Parent:FindFirstChild("Humanoid")and hit.Parent ~= nil and hit.Parent.Name ~= Player.Character.Name then
					Grab:Destroy()
					local H = Instance.new("Part",Character)
					H.Size = Vector3.new(1,1,1)
					H.BrickColor = BrickColor.new("White")
					H.CanCollide = false
					H.Anchored = true
					H.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,0,1.55)
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H3 = Instance.new("Part",Character)
					H3.Size = Vector3.new(1,1,1)
					H3.BrickColor = BrickColor.new("White")
					H3.CanCollide = false
					H3.Anchored = true
					H3.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(1.55,0,0)
					local H23 = Instance.new("SpecialMesh",H3)
					H23.MeshId = "rbxassetid://3270017"
					local H33 = Instance.new("Part",Character)
					H33.Size = Vector3.new(1,1,1)
					H33.BrickColor = BrickColor.new("White")
					H33.CanCollide = false
					H33.Anchored = true
					H33.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,0,0)*CFrame.Angles(0,1.55,0)
					local H233 = Instance.new("SpecialMesh",H33)
					H233.MeshId = "rbxassetid://20329976"
					local H2 = Instance.new("SpecialMesh",H)
					H2.MeshId = "rbxassetid://3270017"
					local H5 = Instance.new("Part",Character)
					H5.Size = Vector3.new(1,1,1)
					H5.BrickColor = BrickColor.new("White")
					H5.CanCollide = false
					H5.Anchored = true
					H5.CFrame = Character.UpperTorso.CFrame*CFrame.new(0,-3,0)*CFrame.Angles(0,1.55,0)
					local H25 = Instance.new("SpecialMesh",H5)
					H25.MeshId = "rbxassetid://3270017"
					coroutine.resume(coroutine.create(function()
						for i = 1,200 do
							H2.Scale = H2.Scale + Vector3.new(9,9,9)
							H.Transparency = H.Transparency + 0.09
							H23.Scale = H23.Scale + Vector3.new(9,9,9)
							H3.Transparency = H3.Transparency + 0.09
							H233.Scale = H23.Scale + Vector3.new(8,8,8)
							H33.Transparency = H3.Transparency + 0.09
							H25.Scale = H25.Scale + Vector3.new(8,8,8)
							H5.Transparency = H5.Transparency + 0.09
							wait(0.00000000001)
						end
					end))
					local SFXZ = Instance.new("Sound",UpperTorso)
					SFXZ.SoundId = "rbxassetid://447041606"
					SFXZ.Volume = 1
					SFXZ.Pitch = 1
					SFXZ.Looped = false
					wait(0.01)
					SFXZ:Play()
					local Fl = Instance.new("BodyVelocity",hit.Parent.Head)
					Fl.maxForce = Vector3.new(math.huge,math.huge,math.huge)
					Fl.velocity = UpperTorso.CFrame.lookVector*350
					local exp = Instance.new("Explosion",Character)
					exp.BlastRadius = 13
					exp.BlastPressure = 100
					exp.Position = Character.HumanoidRootPart.Position
					exp.Visible = false
					hit.Parent:BreakJoints()
					wait(1.3)
					hit.Parent:Destroy()
					wait(0.05)
					Fl:remove()
				end
			end)
			for i = 0,2,0.1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-1,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(1.55,0,-1),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0.4,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			coroutine.resume(coroutine.create(function()
				wait(0.5)
				Grab:remove()
			end))
			Idle = false
			FZcharge:Destroy()
			wait(0.1)
			D = false
		end
	end
	function FullCowl()
		if not DZ then DZ = true
			Idle = true
			for i = 1,10 do
				swait()
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(-0.5,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.4,0,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end



			for i = 1,2 do
				swait()
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(-0.5,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.4,0,0),.1)--Head
				--game:GetService("RunService").RenderStepped:wait()
			end
			wait(0.3)

			for i = 1,2 do
				swait()
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(-0.5,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.4,0,0),.1)--Head
				--game:GetService("RunService").RenderStepped:wait()
			end
			wait(0.4)

			for i = 1,0.2 do
				swait()
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.5,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.5,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(-0.5,0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(-0.4,0,0),.1)--Head
				--game:GetService("RunService").RenderStepped:wait()
			end
			Humanoid.MaxHealth = math.huge
			wait(0.01)
			Humanoid.Health = math.huge
			Idle = false
			local Sound = Instance.new("Sound",UpperTorso)
			Sound.SoundId = "rbxassetid://"
			Sound.Pitch = 1
			Sound.Looped = true
			Sound.Volume = 5
			Sound:play()
			Character.Head.face.Texture = "rbxassetid://444037452"
			Humanoid.WalkSpeed = 25
			Mouse.KeyDown:connect(function(key)
				if key == "e" then
					FCSmash()
				end
				if key == "h" then
					SeriousWam()
				end
				if key == "p" then
					Dash()
				end
				if key=="q" then		
					Smash()
				end
				if key=="r" then		
					Del()
				end
			end)
			Mouse.Button1Down:connect(function()
				if attack == false and attacktype == 1 then
					HitS()
					attacktype = 2
				elseif attack == false and attacktype == 2 then
					Hit2S()
					attacktype = 1
				end
			end)
			wait(2121)
			DZ = false
		end
	end


	Mouse.KeyDown:connect(function(key)
		if key=="x" then		
			Away()
		end
	end)
	Mouse.KeyDown:connect(function(key)
		if key=="c" then		
			Uppercut()
		end
	end)



	Mouse.KeyDown:connect(function(key)
		if key=="t" then		
			Detroit()
		end
	end)

	Mouse.KeyDown:connect(function(key)
		if key=="m" then		
			Jump()
		end
	end)

	Mouse.Button1Down:connect(function()	
		if attack == false and attacktype == 1 then
			Hit()
			attacktype = 2
		elseif attack == false and attacktype == 2 then
			Hit2()
			attacktype = 1
		end
	end)

	Mouse.KeyDown:connect(function(key)
		if key == "z" then
			FullCowl()
		end
	end)



	function rayCast(Pos, Dir, Max, Ignore)  -- Origin Position , Direction, MaxDistance , IgnoreDescendants
		return game:service("Workspace"):FindPartOnRay(Ray.new(Pos, Dir.unit * (Max or 999.999)), Ignore) 
	end 


	local sine = 0
	local change = 1
	local val = 0
	local torvel=(RootPart.Velocity*Vector3.new(1,0,1)).magnitude 
	local velderp=RootPart.Velocity.y
	hitfloor,posfloor=rayCast(RootPart.Position,(CFrame.new(RootPart.Position,RootPart.Position - Vector3.new(0,1,0))).lookVector,4,Character)





	--idle
	game:service'RunService'.RenderStepped:connect(function()
		if Humanoid.MoveDirection.x == 0 and Idle == false then
			change = 1
			for i = 1,1 do
				LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0-.01*math.sin(tick()*3),0)*CFrame.Angles(0.2,0,0),.1) --LeftUpperArm
				RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0-.00*math.sin(tick()*3),0)*CFrame.Angles(0.2,0,-0),.1)--RightUpperArm
				LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.1+0.1*math.sin(tick()*3),0,0),.1)--LeftLowerArm
				RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0.1+0.1*math.sin(tick()*3),0,0),.1)--RightLowerArm
				LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftUpperLeg
				RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--LeftLowerLeg
				RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--RightUpperLeg
				Root.C0 = Root.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Torso
				Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(0-.03*math.sin(tick()*3),0,0),.1)--Head
				RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
				LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
				Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0-.005*math.sin(tick()*3),0)*CFrame.Angles(0,0,0),.1)--Head
				game:GetService("RunService").RenderStepped:wait()
			end
			--walk
			for i = 1,2000 do
				if Humanoid.MoveDirection.x > 0 and Idle == false or Humanoid.MoveDirection.x < 0 and Idle == false then
					LeftShoulder.C0 = LeftShoulder.C0:lerp(CFrame.new(LeftShoulder.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0-1*math.sin(tick()*8),0,0),.1) --LeftUpperArm
					RightShoulder.C0 = RightShoulder.C0:lerp(CFrame.new(RightShoulder.C0 .p)*CFrame.new(0,0,0)*CFrame.Angles(0+1*math.sin(tick()*8),0,0),.1)--RightUpperArm
					LeftElbow.C0 = LeftElbow.C0:lerp(CFrame.new(LeftElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0+0.6*math.cos(tick()*8),0,0),.1)--LeftLowerArm
					RightElbow.C0 = RightElbow.C0:lerp(CFrame.new(RightElbow.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0-0.6*math.cos(tick()*8),0,0),.1)--RightLowerArm
					LeftHip.C0 = LeftHip.C0:lerp(CFrame.new(LeftHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0-1*math.sin(tick()*8),0,0.1),.1)--LeftUpperLeg
					RightHip.C0 = RightHip.C0:lerp(CFrame.new(RightHip.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0+1*math.sin(tick()*8),0,-0.1),.1)--RightUpperLeg
					LeftKnee.C0 = LeftKnee.C0:lerp(CFrame.new( LeftKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0+1.4*math.cos(tick()*8),0,0),.1)--LeftLowerLeg
					RightKnee.C0 = RightKnee.C0:lerp(CFrame.new(RightKnee.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0-1.4*math.cos(tick()*8),0,0),.1)--RightUpperLeg
					Root.C0 = Root.C0:lerp(CFrame.new(0,0-.1*math.sin(tick()*8),0)*CFrame.Angles(-0.1,0,0),.1)--Torso
					Neck.C0 = Neck.C0:lerp(CFrame.new( Neck.C0.p)*CFrame.Angles(0,0,0),.1)--Head
					RightFoot.RightAnkle.C0 = RightFoot.RightAnkle.C0:lerp(CFrame.new( RightFoot.RightAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(rad(0),rad(0),rad(0)),.1)--Head
					LeftFoot.LeftAnkle.C0 = LeftFoot.LeftAnkle.C0:lerp(CFrame.new( LeftFoot.LeftAnkle.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
					RightHand.RightWrist.C0 = RightHand.RightWrist.C0:lerp(CFrame.new( RightHand.RightWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
					LeftHand.LeftWrist.C0 = LeftHand.LeftWrist.C0:lerp(CFrame.new( LeftHand.LeftWrist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
					Waist.C0 = Waist.C0:lerp(CFrame.new( Waist.C0.p)*CFrame.new(0,0,0)*CFrame.Angles(0,0,0),.1)--Head
					game:GetService("RunService").RenderStepped:wait()
				end
			end
		end
	end)
end)

UICorner_3.Parent = SAITAMA

UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_3.Parent = SAITAMA

FidgetSpinner.Name = "Fidget Spinner"
FidgetSpinner.Parent = main
FidgetSpinner.BackgroundColor3 = Color3.fromRGB(170, 170, 255)
FidgetSpinner.Position = UDim2.new(0.359712243, 0, 0.140939593, 0)
FidgetSpinner.Size = UDim2.new(0, 77, 0, 21)
FidgetSpinner.Font = Enum.Font.SourceSansBold
FidgetSpinner.Text = "Fidget Spinner"
FidgetSpinner.TextColor3 = Color3.fromRGB(0, 0, 0)
FidgetSpinner.TextSize = 14.000
FidgetSpinner.MouseButton1Down:connect(function()
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 0
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = 0
	for i=1,2,0.1 do
		wait(.1)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame+Vector3.new(0,1,0)
		for _,anim in pairs(game.Players.LocalPlayer.Character.Humanoid:GetPlayingAnimationTracks()) do
			anim:Stop()
		end
	end
	for _,part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if part.ClassName == "Accessory" or part.ClassName == "Shirt" or part.ClassName == "Pants" or part.ClassName == "ShirtGraphic" or part.ClassName == "BodyColors" then
			part:remove()
		end 
		if part:IsA("BasePart") then
			part.Color = Color3.fromRGB(255, 204, 153)
		end
	end


	game.Players.LocalPlayer.Character.Head.Color = Color3.fromRGB(0,255,0)

	game.Players.LocalPlayer.Character.Head.Mesh.Offset = Vector3.new(0,-0.75,-0.5)
	game.Players.LocalPlayer.Character.Head.Mesh.MeshId = "rbxassetid://785024366"
	game.Players.LocalPlayer.Character.Head.face.Texture = "rbxassetid://785492382"
	game.Players.LocalPlayer.Character.Head.Mesh.Scale = Vector3.new(13, 20, 13)
	local shirt = Instance.new("Shirt",game.Players.LocalPlayer.Character) shirt.ShirtTemplate = "rbxassetid://1037676911"
	local pants = Instance.new("Pants",game.Players.LocalPlayer.Character) pants.PantsTemplate = "rbxassetid://1010828432"

	local fidget1 = Instance.new("Part",game.Players.LocalPlayer.Character) fidget1.Anchored = false fidget1.Size = Vector3.new(0,0,0) fidget1.Color = Color3.fromRGB(0,255,0) fidget1.CanCollide = false
	game.Players.LocalPlayer.Character.Head.Mesh:Clone().Parent = fidget1
	fidget1.Mesh.Scale = Vector3.new(3,4,3)
	fidget1.Mesh.Offset = Vector3.new(0,-1,-0.1)
	game.Players.LocalPlayer.Character.Head.face:Clone().Parent = fidget1
	fidget1.CFrame = game.Players.LocalPlayer.Character["Right Arm"].CFrame
	for i=1,3 do
		wait()
		fidget1.Position = fidget1.Position+Vector3.new(0,1,0)
	end
	local weld = Instance.new("Weld",fidget1) weld.Part0 = fidget1 weld.Part1= game.Players.LocalPlayer.Character["Right Arm"] weld.Name = "FidgetHip"

	local fidget2 = Instance.new("Part",game.Players.LocalPlayer.Character) fidget2.Anchored = false fidget2.Size = Vector3.new(0,0,0) fidget2.Color = Color3.fromRGB(0,255,0) fidget2.CanCollide = false
	game.Players.LocalPlayer.Character.Head.Mesh:Clone().Parent = fidget2
	fidget2.Mesh.Scale = Vector3.new(3,4,3)
	fidget2.Mesh.Offset = Vector3.new(0,-1,-0.1)
	game.Players.LocalPlayer.Character.Head.face:Clone().Parent = fidget2
	fidget2.CFrame = game.Players.LocalPlayer.Character["Left Arm"].CFrame
	for i=1,3 do
		wait()
		fidget2.Position = fidget2.Position+Vector3.new(0,1,0)
	end
	local weld = Instance.new("Weld",fidget2) weld.Part0 = fidget2 weld.Part1= game.Players.LocalPlayer.Character["Left Arm"] weld.Name = "FidgetHip2"

	local fidget3 = Instance.new("Part",game.Players.LocalPlayer.Character) fidget3.Anchored = false fidget3.Size = Vector3.new(0,0,0) fidget3.Color = Color3.fromRGB(0,255,0) fidget3.CanCollide = false
	game.Players.LocalPlayer.Character.Head.Mesh:Clone().Parent = fidget3
	fidget3.Mesh.Scale = Vector3.new(3,4,3)
	fidget3.Mesh.Offset = Vector3.new(0,-1,-0.1)
	game.Players.LocalPlayer.Character.Head.face:Clone().Parent = fidget3
	fidget3.CFrame = game.Players.LocalPlayer.Character["Right Leg"].CFrame
	for i=1,3 do
		wait()
		fidget3.Position = fidget3.Position+Vector3.new(0,1,0)
	end
	local weld = Instance.new("Weld",fidget3) weld.Part0 = fidget3 weld.Part1= game.Players.LocalPlayer.Character["Right Leg"] weld.Name = "FidgetHip3"

	local fidget4 = Instance.new("Part",game.Players.LocalPlayer.Character) fidget4.Anchored = false fidget4.Size = Vector3.new(0,0,0) fidget4.Color = Color3.fromRGB(0,255,0) fidget4.CanCollide = false
	game.Players.LocalPlayer.Character.Head.Mesh:Clone().Parent = fidget4
	fidget4.Mesh.Scale = Vector3.new(3,4,3)
	fidget4.Mesh.Offset = Vector3.new(0,-1,-0.1)
	game.Players.LocalPlayer.Character.Head.face:Clone().Parent = fidget4
	fidget4.CFrame = game.Players.LocalPlayer.Character["Left Leg"].CFrame
	for i=1,3 do
		wait()
		fidget4.Position = fidget4.Position+Vector3.new(0,1,0)
	end
	local weld = Instance.new("Weld",fidget4) weld.Part0 = fidget4 weld.Part1= game.Players.LocalPlayer.Character["Left Leg"] weld.Name = "FidgetHip4"

	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 75
	game.Players.LocalPlayer.Character.Humanoid.MaxHealth = 333333333
	game.Players.LocalPlayer.Character.Humanoid.Health = 333333333
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
	rot = 0
	armrot = 0
	speed = 0.25
	armspeed = 0.25
	flying = nil
	flyingtornado1 = nil
	flyingtornado2 = nil
	tornado1 = nil
	tornado2 = nil 
	fullspin = false
	counter = 0
	function fullrot()

		local part = Instance.new("Part",game.Players.LocalPlayer.Character) part.Material = Enum.Material.Neon part.Color = Color3.fromRGB(0,255,0) part.Anchored = true part.Transparency = 0.9 part.CanCollide = false part.Shape = Enum.PartType.Cylinder part.Size = Vector3.new(math.huge,1,1)
		part.Name = "FullSpinC"
		part.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)*CFrame.Angles(0,0,math.rad(90))
		game:GetService("Debris"):AddItem(part,1.5)	
		for i=0.9,1,0.004 do
			wait()
			part.Size = part.Size+Vector3.new(0,2,2)
			part.Transparency = i

		end
		part:remove()
	end

	game:GetService("RunService").RenderStepped:connect(function()

		for _,part in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if part.Name == "Torso" or part.Name == "Right Leg" or part.Name == "Left Leg" or part.Name == "Right Arm" or part.Name == "Left Arm" then
				part.Color = Color3.fromRGB(255, 204, 153)
			end
		end
		game.Players.LocalPlayer.Character.Head.Color = Color3.fromRGB(0,255,0)





		counter = counter+1
		if counter >= 10 then
			counter= 0
			if fullspin == true then
				fullrot()	
			end
		end
		rot = rot+speed
		armrot = armrot+armspeed
		game.Players.LocalPlayer.Character.Head.CanCollide = false
		fidget1.FidgetHip.C0 = CFrame.new(fidget1.FidgetHip.C0.p)*CFrame.Angles(0,armrot,0)
		fidget2.FidgetHip2.C0 = CFrame.new(fidget2.FidgetHip2.C0.p)*CFrame.Angles(0,-armrot,0)
		for _,child in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if child.Name == "FullSpinC" then
				child.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)*CFrame.Angles(0,0,math.rad(90))
			end
		end

		if flying ~= nil then

			fidget3.FidgetHip3.C0 = CFrame.new(fidget3.FidgetHip3.C0.p)*CFrame.Angles(0,rot*2,0)
			fidget4.FidgetHip4.C0 = CFrame.new(fidget4.FidgetHip4.C0.p)*CFrame.Angles(0,-rot*2,0)
			flying.CFrame = CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position+Vector3.new(0,-3.5,0))
		end
		game.Players.LocalPlayer.Character.Torso.Neck.C0 = CFrame.new(game.Players.LocalPlayer.Character.Torso.Neck.C0.p)*CFrame.Angles(math.rad(90),0,rot)
		if fullspin == true then

			game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0 = game.Players.LocalPlayer.Character.HumanoidRootPart.RootJoint.C0*CFrame.Angles(0,0,rot*10)
			for _,child in pairs(game.Workspace:GetChildren()) do
				if child ~= game.Players.LocalPlayer.Character then
					for _,InChild in pairs(child:GetChildren()) do
						if InChild:IsA("BasePart") then
							if InChild.Position.X > game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X-20 and InChild.Position.X < game.Players.LocalPlayer.Character.HumanoidRootPart.Position.X+20 then
								if InChild.Position.Z > game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z-20 and InChild.Position.Z < game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Z+20 then
									for _,InChild2 in pairs(child:GetChildren()) do
										if InChild2.ClassName == "Humanoid" then
											InChild2.Health = InChild2.Health-2
											InChild.Velocity = game.Workspace.CurrentCamera.CFrame.lookVector*80
										end
									end
								end
							end 
						end
					end
				end
			end

		end
		if tornado1 ~= nil then
			local pos1 = game.Players.LocalPlayer.Character["Right Arm"].CFrame:toWorldSpace(CFrame.new(Vector3.new(0,-1,0))).p
			local pos2 = game.Players.LocalPlayer:GetMouse().Hit:toWorldSpace(CFrame.new(7.5,0,0)).p
			tornado1.Mesh.Scale = Vector3.new(15,(pos1-pos2).magnitude,15)
			tornado1.CFrame = CFrame.new((pos1+pos2)/2,pos1)*CFrame.Angles(math.rad(90),armrot*2,math.rad(180))
			for _,child in pairs(game.Workspace:GetChildren()) do
				if child ~= game.Players.LocalPlayer.Character then
					for _,InChild in pairs(child:GetChildren()) do
						if InChild:IsA("BasePart") then
							if (InChild.Position-pos2).magnitude < 7.5 then
								for _,InChild2 in pairs(child:GetChildren()) do
									if InChild2.ClassName == "Humanoid" then
										InChild2.Health = InChild2.Health-2
										InChild.Velocity = game.Workspace.CurrentCamera.CFrame.lookVector*80
									end
								end
							end 
						end
					end
				end
			end



		end
		if tornado2 ~= nil then
			local pos1 = game.Players.LocalPlayer.Character["Left Arm"].CFrame:toWorldSpace(CFrame.new(Vector3.new(0,-1,0))).p
			local pos2 = game.Players.LocalPlayer:GetMouse().Hit:toWorldSpace(CFrame.new(-7.5,0,0)).p
			tornado2.Mesh.Scale = Vector3.new(15,(pos1-pos2).magnitude,15)
			tornado2.CFrame = CFrame.new((pos1+pos2)/2,pos1)*CFrame.Angles(math.rad(90),armrot*2,math.rad(180))

			for _,child in pairs(game.Workspace:GetChildren()) do
				if child ~= game.Players.LocalPlayer.Character then
					for _,InChild in pairs(child:GetChildren()) do
						if InChild:IsA("BasePart") then
							if (InChild.Position-pos2).magnitude < 10 then
								for _,InChild2 in pairs(child:GetChildren()) do
									if InChild2.ClassName == "Humanoid" then
										InChild2.Health = InChild2.Health-1
										InChild.Velocity = game.Workspace.CurrentCamera.CFrame.lookVector*80
									end
								end
							end 
						end
					end
				end
			end
		end


		if flyingtornado1 ~= nil then
			local pos1 = game.Players.LocalPlayer.Character["Right Leg"].CFrame:toWorldSpace(CFrame.new(Vector3.new(0,-1,0))).p
			local cframe1 = game.Players.LocalPlayer.Character["Right Leg"].CFrame:toWorldSpace(CFrame.new(Vector3.new(0,-1,0)))
			local pos2 = game.Players.LocalPlayer.Character["Right Leg"].CFrame:toWorldSpace(CFrame.new(Vector3.new(7.5,0,0))).p-Vector3.new(0,4000,0)

			local ray = Ray.new(pos1,cframe1:toWorldSpace(CFrame.new(Vector3.new(500,0,0))).p-Vector3.new(0,4000,0))
			local hit,position,normal = game.Workspace:FindPartOnRay(ray,game.Players.LocalPlayer.Character)
			if hit ~= nil then
				pos2 = position
			end

			flyingtornado1.Mesh.Scale = Vector3.new(6,(pos1-pos2).magnitude,6)
			flyingtornado1.CFrame = CFrame.new((pos1+pos2)/2,pos1)*CFrame.Angles(math.rad(90),armrot*2,math.rad(180))

			for _,child in pairs(game.Workspace:GetChildren()) do
				if child ~= game.Players.LocalPlayer.Character then
					for _,InChild in pairs(child:GetChildren()) do
						if InChild:IsA("BasePart") then
							if (InChild.Position-pos2).magnitude < 3 then
								for _,InChild2 in pairs(child:GetChildren()) do
									if InChild2.ClassName == "Humanoid" then
										InChild2.Health = InChild2.Health-1
										InChild.Velocity = game.Workspace.CurrentCamera.CFrame.lookVector*80
									end
								end
							end 
						end
					end
				end
			end
		end

		if flyingtornado2 ~= nil then
			local pos1 = game.Players.LocalPlayer.Character["Left Leg"].CFrame:toWorldSpace(CFrame.new(Vector3.new(0,-1,0))).p
			local cframe1 = game.Players.LocalPlayer.Character["Left Leg"].CFrame:toWorldSpace(CFrame.new(Vector3.new(0,-1,0)))
			local pos2 = game.Players.LocalPlayer.Character["Left Leg"].CFrame:toWorldSpace(CFrame.new(Vector3.new(-7.5,0,0))).p-Vector3.new(0,4000,0)

			local ray = Ray.new(pos1,cframe1:toWorldSpace(CFrame.new(Vector3.new(-500,0,0))).p-Vector3.new(0,4000,0))
			local hit,position,normal = game.Workspace:FindPartOnRay(ray,game.Players.LocalPlayer.Character)

			if hit ~= nil then
				pos2 = position
			end

			flyingtornado2.Mesh.Scale = Vector3.new(6,(pos1-pos2).magnitude,6)
			flyingtornado2.CFrame = CFrame.new((pos1+pos2)/2,pos1)*CFrame.Angles(math.rad(90),armrot*2,math.rad(180))

			for _,child in pairs(game.Workspace:GetChildren()) do
				if child ~= game.Players.LocalPlayer.Character then
					for _,InChild in pairs(child:GetChildren()) do
						if InChild:IsA("BasePart") then
							if (InChild.Position-pos2).magnitude < 3 then
								for _,InChild2 in pairs(child:GetChildren()) do
									if InChild2.ClassName == "Humanoid" then
										InChild2.Health = InChild2.Health-1
										InChild.Velocity = game.Workspace.CurrentCamera.CFrame.lookVector*80
									end
								end
							end 
						end
					end
				end
			end
		end






	end)
	game:GetService("UserInputService").InputBegan:connect(function(key)
		if key.KeyCode == Enum.KeyCode.F then
			if flying == nil then
				flying = Instance.new("Part",game.Players.LocalPlayer.Character) flying.Transparency = 1 flying.Anchored = true flying.Size = Vector3.new(3,1,3)
				flyingtornado1 = Instance.new("Part",game.Players.LocalPlayer.Character) flyingtornado1.Color = Color3.fromRGB(200,255,200) flyingtornado1.Transparency = 0.5 flyingtornado1.CanCollide = false flyingtornado1.Anchored = true
				local mesh = Instance.new("SpecialMesh",flyingtornado1) mesh.MeshId = "rbxassetid://1040723301"
				flyingtornado2 = Instance.new("Part",game.Players.LocalPlayer.Character) flyingtornado2.Color = Color3.fromRGB(200,255,200) flyingtornado2.Transparency = 0.5 flyingtornado2.CanCollide = false flyingtornado2.Anchored = true
				local mesh = Instance.new("SpecialMesh",flyingtornado2) mesh.MeshId = "rbxassetid://1040723301"

			else
				flying:remove()
				flying = nil
				flyingtornado1:remove()
				flyingtornado1 = nil
				flyingtornado2:remove()
				flyingtornado2 = nil
			end
		end
		if key.KeyCode == Enum.KeyCode.E then
			armspeed = 0.5
			tornado1 = Instance.new("Part",game.Players.LocalPlayer.Character) tornado1.Color = Color3.fromRGB(200,255,200) tornado1.Transparency = 0.5 tornado1.CanCollide = false tornado1.Anchored = true
			local mesh = Instance.new("SpecialMesh",tornado1) mesh.MeshId = "rbxassetid://1040723301"
			tornado2 = Instance.new("Part",game.Players.LocalPlayer.Character) tornado2.Color = Color3.fromRGB(200,255,200) tornado2.Transparency = 0.5 tornado2.CanCollide = false tornado2.Anchored = true
			local mesh = Instance.new("SpecialMesh",tornado2) mesh.MeshId = "rbxassetid://1040723301"

			game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0*CFrame.Angles(0,0,math.rad(90))
			game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0*CFrame.Angles(0,0,math.rad(-90))
		end
		if key.KeyCode == Enum.KeyCode.R then
			if fullspin == false then
				fullspin = true

			else
				fullspin = false
			end
		end
	end)
	game:GetService("UserInputService").InputEnded:connect(function(key)

		if key.KeyCode == Enum.KeyCode.E then
			tornado1:remove()
			tornado2:remove()
			tornado1 = nil
			tornado2 = nil
			armspeed = 0.25
			game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Right Shoulder"].C0*CFrame.Angles(0,0,math.rad(-90))
			game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0 = game.Players.LocalPlayer.Character.Torso["Left Shoulder"].C0*CFrame.Angles(0,0,math.rad(90))
		end
	end)
end)

UICorner_4.Parent = FidgetSpinner

UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_4.Parent = FidgetSpinner

PAPYRUS.Name = "PAPYRUS"
PAPYRUS.Parent = main
PAPYRUS.BackgroundColor3 = Color3.fromRGB(170, 170, 255)
PAPYRUS.Position = UDim2.new(0.359712243, 0, 0.42281878, 0)
PAPYRUS.Size = UDim2.new(0, 77, 0, 21)
PAPYRUS.Font = Enum.Font.SourceSansBold
PAPYRUS.Text = "PAPYRUS"
PAPYRUS.TextColor3 = Color3.fromRGB(0, 0, 0)
PAPYRUS.TextSize = 14.000
PAPYRUS.MouseButton1Down:connect(function()
	p = game.Players.LocalPlayer
	char = p.Character
	torso = char.Torso
	hed = char.Head
	neck = char.Torso.Neck
	hum = char.Humanoid
	hum.MaxHealth = math.huge
	local msg = game:GetService("Chat")
	torso.BrickColor = BrickColor.new("Institutional white")
	hed.BrickColor = BrickColor.new("Institutional white")
	char["Right Arm"].BrickColor = BrickColor.new("Institutional white")
	char["Left Arm"].BrickColor = BrickColor.new("Institutional white")
	char["Left Leg"].BrickColor = BrickColor.new("Institutional white") 
	char["Right Leg"].BrickColor = BrickColor.new("Institutional white")
	ypcall(function()
		shirt = Instance.new("Shirt", char)
		shirt.Name = "Shirt"
		pants = Instance.new("Pants", char)
		pants.Name = "Pants"
		char.Shirt.ShirtTemplate = "rbxassetid://527139198"
		char.Pants.PantsTemplate = "rbxassetid://1002356841"
	end)
	hed.face.Texture = "http://www.roblox.com/asset/?id=0"
	p1 = Instance.new("Part",char)
	p1.FormFactor = Enum.FormFactor.Custom
	p1.Size = Vector3.new(2,4,3)
	p1.CanCollide = false
	p1.Locked = true
	p1.BottomSurface = Enum.SurfaceType.Smooth
	p1.TopSurface = Enum.SurfaceType.Smooth
	SMesh = Instance.new("SpecialMesh", p1)
	SMesh.MeshId = "http://www.roblox.com/asset/?id=0"
	SMesh.MeshType = Enum.MeshType.FileMesh
	SMesh.Name = "Mesh"
	SMesh.TextureId = "http://www.roblox.com/asset/?id=0"
	w1 = Instance.new("Weld", hed)
	w1.Part0 = hed
	w1.C0 = CFrame.new(0,0.76,0.2)*CFrame.Angles(0.3,0,0)
	w1.Part1 = p1
	w1.C1 = CFrame.new(0, 0, 0)
	CV="Maroon"
	Player = game.Players.LocalPlayer
	Character = Player.Character
	local txt = Instance.new("BillboardGui", Character)
	txt.Adornee = Character .Head
	txt.Name = "_status"
	txt.Size = UDim2.new(2, 0, 1.2, 0)
	txt.StudsOffset = Vector3.new(-9, 8, 0)
	local text = Instance.new("TextLabel", txt)
	text.Size = UDim2.new(10, 0, 7, 0)
	text.FontSize = "Size24"
	text.TextScaled = true
	text.TextTransparency = 0
	text.BackgroundTransparency = 1 
	text.TextTransparency = 0
	text.TextStrokeTransparency = 0
	text.Font = "Bodoni"
	text.TextStrokeColor3 = Color3.new(255,85,0)

	v=Instance.new("Part")
	v.Name = "ColorBrick"
	v.Parent=Player.Character
	v.FormFactor="Symmetric"
	v.Anchored=true
	v.CanCollide=false
	v.BottomSurface="Smooth"
	v.TopSurface="Smooth"
	v.Size=Vector3.new(10,5,3)
	v.Transparency=1
	v.CFrame=Character.Torso.CFrame
	v.BrickColor=BrickColor.new(CV)
	v.Transparency=1
	text.TextColor3 = Color3.new(255,170,0)
	v.Shape="Block"
	text.Text = "Papyrus Disbelief"
	----------------------------------------------------
	z = Instance.new("Sound", char)
	z.SoundId = "rbxassetid://321451733"--321451733
	z.Looped = true
	z.Pitch = 1
	z.Volume = 3
	wait(.001)
	z:Play()
	----------------------------------------------------
	--Shark op
	--by osama44
	--for shark nigger
	--Converted to local by Scenius

	Player=game.Players.LocalPlayer
	o1 = Instance.new("ParticleEmitter")
	o1.Name = "ora"
	o1.Parent = script
	o1.Transparency = NumberSequence.new(0,1)
	o1.Size = NumberSequence.new(1.5,3.5)
	o1.Color = ColorSequence.new(Color3.new(0, 0.333333, 1),Color3.new(0, 0.333333, 1))
	o1.Enabled = false
	o1.LightEmission = 1
	o1.Texture = "rbxassetid://243086902"
	o1.Lifetime = NumberRange.new(1,1)
	o1.Rate = 500
	o1.RotSpeed = NumberRange.new(90,90)
	o1.Speed = NumberRange.new(0,0)
	sv = Instance.new("Part")
	for i = 1, 2 do
		sv.Parent = script
	end
	sv.BrickColor = BrickColor.new("Deep orange")
	sv.Name = "sword"
	sv.Size = Vector3.new(0.248, 8.654, 1.153)
	sv.Orientation = Vector3.new(90, 90, 0)
	svm = Instance.new("FileMesh", sv)
	svm.MeshId = "rbxassetid://445556170"
	repeat wait() until Player.Character
	repeat wait() until #script:children() >= 0
	script.Parent=Player.PlayerGui
	Effects = { }
	--[[Credits to SazErenos for his Artificical Heartbeat]]--
	ArtificialHB = Instance.new("BindableEvent", script)
	ArtificialHB.Name = "Heartbeat"

	script:WaitForChild("Heartbeat")

	frame = 1 / 30
	tf = 0
	allowframeloss = false
	tossremainder = false
	lastframe = tick()
	script.Heartbeat:Fire()

	game:GetService("RunService").Heartbeat:connect(function(s, p)
		tf = tf + s
		if tf >= frame then
			if allowframeloss then
				script.Heartbeat:Fire()
				lastframe = tick()
			else
				for i = 1, math.floor(tf / frame) do
					script.Heartbeat:Fire()
				end
				lastframe = tick()
			end
			if tossremainder then
				tf = 0
			else
				tf = tf - frame * math.floor(tf / frame)
			end
		end
	end)

	function swait(num)
		if num == 0 or num == nil then
			ArtificialHB.Event:wait()
		else
			for i = 0, num do
				ArtificialHB.Event:wait()
			end
		end
	end
	------------------[[Variables and Main Stuff]]--------------------



	local Player = game.Players.localPlayer
	local Character = Player.Character
	local Humanoid = Character.Humanoid
	local char=Character
	local LeftArm = Character["Left Arm"]
	local RightArm = Character["Right Arm"]
	local LeftLeg = Character["Left Leg"]
	local RightLeg = Character["Right Leg"]
	local Head = Character.Head
	local Torso = Character.Torso
	local cam = game.Workspace.CurrentCamera
	local RootPart = Character.HumanoidRootPart
	local RootJoint = RootPart.RootJoint
	local equipped = false
	local attack = false
	local Anim = 'Idle'
	local idle = 0
	local attacktype = 1
	local Torsovelocity = (RootPart.Velocity * Vector3.new(1, 0, 1)).magnitude 
	local velocity = RootPart.Velocity.y
	local sine = 0
	local change = 1
	local grabbed = false
	local cn = CFrame.new
	local mr = math.rad
	local angles = CFrame.Angles
	local ud = UDim2.new
	local c3 = Color3.new
	local ORW=Torso["Right Shoulder"]
	local OLW=Torso["Left Shoulder"]
	local OLH=Torso["Left Hip"]
	local ORH=Torso["Right Hip"]
	local DesiredSpeed=15
	local desiredjp=50
	EffectModel = Instance.new("Model", Character)
	it=Instance.new
	vt=Vector3.new
	cf=CFrame.new
	euler=CFrame.Angles
	EffectModel.Name = "Effects"
	local Animator=Humanoid.Animator
	local Animate=char.Animate
	local EffecMo=EffectModel
	euler=CFrame.Angles
	RotCF = euler(-1.57, 0, 3.14)
	it=Instance.new
	vt=Vector3.new
	LastMove=""
	Orbs={}
	EffecMo=EffectModel
	RootCF = CFrame.Angles(0, 0, 0)
	NeckCF = CFrame.new(0, 1, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0)
	local RW=Instance.new("Motor",nil)
	RW.Name="Right Shoulder"
	local LW=Instance.new("Motor",nil)
	LW.Name="Left Shoulder"
	local RH=Instance.new("Motor",nil)
	RH.Name="Right Hip"
	local LH=Instance.new("Motor",nil)
	LH.Name="Left Hip"
	Neck=Torso.Neck
	r1m=RootJoint.C1
	r0m=RootJoint.C0
	n1m=Neck.C1
	n0m=Neck.C0
	local rarmc1 = RW.C1
	local larmc1 = LW.C1
	local rlegc1 = RH.C1
	local llegc1 = LH.C1
	local resetc1 = false
	Comboing=false
	HTime=0
	LastDamage=0
	ComboHits=0

	local co1 = 10
	local co2 = 10
	local co3 = 20
	local co4 = 1
	local cooldown1 = 0
	local cooldown2 = 0
	local cooldown3 = 0
	local cooldown4 = 0
	local skillcolorscheme = BrickColor.new("Deep orange").Color
	local scrn = Instance.new("ScreenGui", Player.PlayerGui)
	makeframe = function(par, trans, pos, size, color)

		local frame = Instance.new("Frame", par)
		frame.BackgroundTransparency = trans
		frame.BorderSizePixel = 0
		frame.Position = pos
		frame.Size = size
		frame.BackgroundColor3 = color
		return frame
	end

	makelabel = function(par, text)

		local label = Instance.new("TextLabel", par)
		label.BackgroundTransparency = 1
		label.Size = UDim2.new(1, 0, 1, 0)
		label.Position = UDim2.new(0, 0, 0, 0)
		label.TextColor3 = Color3.new(255, 255, 255)
		label.TextStrokeTransparency = 0
		label.FontSize = Enum.FontSize.Size32
		label.Font = Enum.Font.SourceSansLight
		label.BorderSizePixel = 0
		label.TextScaled = true
		label.Text = text
	end

	framesk1 = makeframe(scrn, 0.5, UDim2.new(0.8, 0, 0.85, 0), UDim2.new(0.16, 0, 0.1, 0), skillcolorscheme)
	framesk2 = makeframe(scrn, 0.5, UDim2.new(0.8, 0, 0.74, 0), UDim2.new(0.16, 0, 0.1, 0), skillcolorscheme)
	framesk3 = makeframe(scrn, 0.5, UDim2.new(0.8, 0, 0.63, 0), UDim2.new(0.16, 0, 0.1, 0), skillcolorscheme)
	framesk4 = makeframe(scrn, 0.5, UDim2.new(0.8, 0, 0.52, 0), UDim2.new(0.16, 0, 0.1, 0), skillcolorscheme)
	bar1 = makeframe(framesk1, 0, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 1, 0), skillcolorscheme)
	bar2 = makeframe(framesk2, 0, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 1, 0), skillcolorscheme)
	bar3 = makeframe(framesk3, 0, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 1, 0), skillcolorscheme)
	bar4 = makeframe(framesk4, 0, UDim2.new(0, 0, 0, 0), UDim2.new(1, 0, 1, 0), skillcolorscheme)
	text1 = Instance.new("TextLabel", framesk1)
	text1.BackgroundTransparency = 1
	text1.Size = UDim2.new(1, 0, 1, 0)
	text1.Position = UDim2.new(0, 0, 0, 0)
	text1.TextColor3 = Color3.new(255, 255, 255)
	text1.TextStrokeTransparency = 0
	text1.FontSize = Enum.FontSize.Size18
	text1.Font = Enum.Font.SourceSansLight
	text1.BorderSizePixel = 0
	text1.TextScaled = true
	text1.Text = "[Z]"
	text2 = Instance.new("TextLabel", framesk2)
	text2.BackgroundTransparency = 1
	text2.Size = UDim2.new(1, 0, 1, 0)
	text2.Position = UDim2.new(0, 0, 0, 0)
	text2.TextColor3 = Color3.new(255, 255, 255)
	text2.TextStrokeTransparency = 0
	text2.FontSize = Enum.FontSize.Size18
	text2.Font = Enum.Font.SourceSansLight
	text2.BorderSizePixel = 0
	text2.TextScaled = true
	text2.Text = "[X]"
	text3 = Instance.new("TextLabel", framesk3)
	text3.BackgroundTransparency = 1
	text3.Size = UDim2.new(1, 0, 1, 0)
	text3.Position = UDim2.new(0, 0, 0, 0)
	text3.TextColor3 = Color3.new(255, 255, 255)
	text3.TextStrokeTransparency = 0
	text3.FontSize = Enum.FontSize.Size18
	text3.Font = Enum.Font.SourceSansLight
	text3.BorderSizePixel = 0
	text3.TextScaled = false
	text3.Text = "[C]"
	text4 = Instance.new("TextLabel", framesk4)
	text4.BackgroundTransparency = 1
	text4.Size = UDim2.new(1, 0, 1, 0)
	text4.Position = UDim2.new(0, 0, 0, 0)
	text4.TextColor3 = Color3.new(255, 255, 255)
	text4.TextStrokeTransparency = 0
	text4.FontSize = Enum.FontSize.Size18
	text4.Font = Enum.Font.SourceSansLight
	text4.BorderSizePixel = 0
	text4.TextScaled = true
	text4.Text = "[V]"

	------------[[Particle Emitters]]---------------------
	local pe=Instance.new("ParticleEmitter",script)
	pe.Enabled=false
	pe.Name="pe"
	local col1= Color3.new(0, 85, 255)
	pe.Color=ColorSequence.new(col1)
	pe.Texture="rbxassetid://436792038"
	pe.LightEmission=1
	pe.Size=NumberSequence.new({NumberSequenceKeypoint.new(0, 1.65), NumberSequenceKeypoint.new(1, 0)})
	pe.Transparency=NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 1)})
	pe.Lifetime=NumberRange.new(1.5)
	pe.Rate=500
	pe.Acceleration=Vector3.new(5,0,5)
	pe.Rotation=NumberRange.new(5)
	pe.RotSpeed=NumberRange.new(10)
	pe.Speed=NumberRange.new(5)

	local pe=Instance.new("ParticleEmitter",script)
	pe.Enabled=false
	pe.Name="pe2"
	local col1= BrickColor.new("Deep orange").Color
	pe.Color=ColorSequence.new(col1)
	pe.Texture="rbxassetid://436792038"
	pe.LightEmission=.5
	pe.Size=NumberSequence.new({NumberSequenceKeypoint.new(0, 1.65), NumberSequenceKeypoint.new(1, 0)})
	pe.Transparency=NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(1, 1)})
	pe.Lifetime=NumberRange.new(1)
	pe.Rate=500
	pe.Rotation=NumberRange.new(5)
	pe.RotSpeed=NumberRange.new(10)
	pe.Speed=NumberRange.new(5)
	pe.VelocitySpread=360

	------------------[[Main Functions]]--------------------

	function CameraShake(Times, Power)
		coroutine.resume(coroutine.create(function()
			FV = Instance.new("BoolValue", Character)
			FV.Name = "CameraShake"
			for ShakeNum=1,Times do
				swait()
				local ef=Power
				if ef>=1 then
					Humanoid.CameraOffset = Vector3.new(math.random(-ef,ef),math.random(-ef,ef),math.random(-ef,ef))
				else
					ef=Power*10
					Humanoid.CameraOffset = Vector3.new(math.random(-ef,ef)/10,math.random(-ef,ef)/10,math.random(-ef,ef)/10)
				end	
			end
			Humanoid.CameraOffset = Vector3.new(0,0,0)
			FV:Destroy()
		end))
	end

	so = function(id, par, vol, pit)
		local sou = Instance.new("Sound", par or workspace)
		if par==char then sou.Parent=char.Torso end
		sou.Volume = vol
		sou.Pitch = pit or 1
		sou.SoundId = "http://www.roblox.com/asset/?id=" .. id
		coroutine.resume(coroutine.create(function(Sound)
			swait()
			Sound:play()
			while sou.Parent.Parent ~= nil and sou.TimePosition >= sou.TimeLength do
				swait()
			end
			sou.Parent = char.Torso
		end), sou)
		game:GetService("Debris"):AddItem(sou, sou.TimeLength + 0.5)
	end

	part = function(formfactor, parent, reflectance, transparency, brickcolor, name, size)
		local fp = it("Part")
		fp.Parent = parent
		fp.Reflectance = reflectance
		fp.Transparency = transparency
		fp.CanCollide = false
		fp.Locked = true
		fp.BrickColor = brickcolor
		fp.Name = name
		fp.Size = size
		fp.Position = Torso.Position
		fp.Material = "SmoothPlastic"
		fp:BreakJoints()
		return fp
	end
	mesh = function(Mesh, part, meshtype, meshid, offset, scale)
		local mesh = it(Mesh)
		mesh.Parent = part
		if Mesh == "SpecialMesh" then
			mesh.MeshType = meshtype
			if meshid ~= "nil" then
				mesh.MeshId = "http://www.roblox.com/asset/?id=" .. meshid
			end
		end
		mesh.Offset = offset
		mesh.Scale = scale
		return mesh
	end
	local function weldBetween(a, b)
		local OR=CFrame.new(a.Position)
		local P1C, P2C=a.CFrame:inverse()*OR,b.CFrame:inverse()*OR
		local weld = Instance.new("ManualWeld", a)
		weld.Part0 = a
		weld.Part1 = b
		weld.C0 = P1C
		weld.C1=P2C
		return weld
	end
	lock=function(a,b)
		local vp2=Instance.new("BodyPosition",a)
		vp2.MaxForce=Vector3.new(math.huge,math.huge,math.huge)
		vp2.P=1e7
		vp2.D=1e3
		vp2.Position=b.Position
		local vp3=Instance.new("BodyGyro",a)
		vp3.MaxTorque=Vector3.new(math.huge,math.huge,math.huge)
		vp3.P=1e7
		vp3.D=1e3
		vp3.cframe=a.CFrame
		return vp2,vp3
	end
	weld = function(parent, part0, part1, c0)
		local weld = it("Motor")
		weld.Parent = parent
		weld.Part0 = part0
		weld.Part1 = part1
		weld.C0 = c0
		return weld
	end
	function NoOutline(Part)
		Part.TopSurface,Part.BottomSurface,Part.LeftSurface,Part.RightSurface,Part.FrontSurface,Part.BackSurface = 10,10,10,10,10,10
	end

	Par=function(Parent,Name,Col,size,Mater)
		p=Instance.new("Part",Parent)
		p.Anchored=true
		p.CanCollide=false
		p.BrickColor=BrickColor.new(Col)
		p.Locked=true
		NoOutline(p)
		p.Size=size or Vector3.new(1,1,1)
		p.Material=Mater
		return p
	end
	Par2=function(size,cframe,color,meshtype,meshscale) --returns a basic part for further manipulation
		local par = Instance.new("Part")
		par.formFactor="Custom"
		par.TopSurface=0
		par.BottomSurface=0
		par.Size=size
		par.CFrame=cframe
		par.BrickColor=BrickColor.new(color)
		if meshtype then
			local m = Instance.new(meshtype,par)
			m.Scale=meshscale
		end
		return par
	end
	BillboardGui = function(image, position, size)
		local billpar = Instance.new("Part")
		billpar.Transparency = 1
		billpar.formFactor = "Custom"
		billpar.Size = Vector3.new(1, 1, 1)
		billpar.Anchored = true
		billpar.CanCollide = false
		billpar.CFrame = CFrame.new(position)
		billpar.Name = "BillboardGuiPart"
		local bill = Instance.new("BillboardGui", billpar)
		bill.Adornee = billpar
		bill.Size = UDim2.new(1, 0, 1, 0)
		bill.SizeOffset = Vector2.new(size, size)
		local d = Instance.new("ImageLabel", bill)
		d.BackgroundTransparency = 1
		d.Size = UDim2.new(1, 0, 1, 0)
		d.Image = image
		return billpar
	end
	gui = function(GuiType, parent, text, backtrans, backcol, pos, size)
		local gui = it(GuiType)
		gui.Parent = parent
		gui.Text = text
		gui.BackgroundTransparency = backtrans
		gui.BackgroundColor3 = backcol
		gui.SizeConstraint = "RelativeXY"
		gui.TextXAlignment = "Center"
		gui.TextYAlignment = "Center"
		gui.Position = pos
		gui.Size = size
		gui.Font = "SciFi"
		gui.FontSize = "Size14"
		gui.TextWrapped = false
		gui.TextStrokeTransparency = 0
		gui.TextColor3 = Color3.new(255,255,127)
		return gui
	end

	local TotalSuppressedTable = {}
	CreatePart = function(Parent, Material, Reflectance, Transparency, BColor, Name, Size)
		local RbxUtility = LoadLibrary("RbxUtility")
		local Create = RbxUtility.Create
		local Part = Create("Part")({Parent = Parent, Reflectance = Reflectance, Transparency = Transparency, CanCollide = false, Locked = true, BrickColor = BrickColor.new(tostring(BColor)), Name = Name, Size = Size, Material = Material})
		RemoveOutlines(Part)
		return Part
	end

	function BreakEffect(brickcolor,cframe,x1,y1,z1) --Credits to Ace
		local prt=part(3,EffectModel,0,0,brickcolor,"Effect",vt(0.5,0.5,0.5))
		prt.Anchored=true
		prt.Material="Neon"
		prt.CFrame=cframe*euler(math.random(-50,50),math.random(-50,50),math.random(-50,50))
		game:GetService("Debris"):AddItem(prt,10)
		local msh=mesh("SpecialMesh",prt,"Sphere","nil",vt(0,0,0),vt(x1,y1,z1))
		local num=math.random(10,50)/1000
		table.insert(Effects,{prt,"Shatter",num,prt.CFrame,math.random()-math.random(),0,math.random(50,100)/100})
	end

	local function CFrameFromTopBack(at, top, back)
		local right = top:Cross(back)
		return CFrame.new(at.x, at.y, at.z,
			right.x, top.x, back.x,
			right.y, top.y, back.y,
			right.z, top.z, back.z)
	end
	function clerp(a,b,t)
		return a:Lerp(b,t)
	end
	function QuaternionFromCFrame(cf)
		local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
		local trace = m00 + m11 + m22
		if trace > 0 then
			local s = math.sqrt(1 + trace)
			local recip = 0.5/s
			return (m21-m12)*recip, (m02-m20)*recip, (m10-m01)*recip, s*0.5
		else
			local i = 0
			if m11 > m00 then
				i = 1
			end
			if m22 > (i == 0 and m00 or m11) then
				i = 2
			end
			if i == 0 then
				local s = math.sqrt(m00-m11-m22+1)
				local recip = 0.5/s
				return 0.5*s, (m10+m01)*recip, (m20+m02)*recip, (m21-m12)*recip
			elseif i == 1 then
				local s = math.sqrt(m11-m22-m00+1)
				local recip = 0.5/s
				return (m01+m10)*recip, 0.5*s, (m21+m12)*recip, (m02-m20)*recip
			elseif i == 2 then
				local s = math.sqrt(m22-m00-m11+1)
				local recip = 0.5/s return (m02+m20)*recip, (m12+m21)*recip, 0.5*s, (m10-m01)*recip
			end
		end
	end
	function QuaternionToCFrame(px, py, pz, x, y, z, w)
		local xs, ys, zs = x + x, y + y, z + z
		local wx, wy, wz = w*xs, w*ys, w*zs
		local xx = x*xs
		local xy = x*ys
		local xz = x*zs
		local yy = y*ys
		local yz = y*zs
		local zz = z*zs
		return CFrame.new(px, py, pz,1-(yy+zz), xy - wz, xz + wy,xy + wz, 1-(xx+zz), yz - wx, xz - wy, yz + wx, 1-(xx+yy))
	end
	function QuaternionSlerp(a, b, t)
		local cosTheta = a[1]*b[1] + a[2]*b[2] + a[3]*b[3] + a[4]*b[4]
		local startInterp, finishInterp;
		if cosTheta >= 0.0001 then
			if (1 - cosTheta) > 0.0001 then
				local theta = math.acos(cosTheta)
				local invSinTheta = 1/math.sin(theta)
				startInterp = math.sin((1-t)*theta)*invSinTheta
				finishInterp = math.sin(t*theta)*invSinTheta  
			else
				startInterp = 1-t
				finishInterp = t
			end
		else
			if (1+cosTheta) > 0.0001 then
				local theta = math.acos(-cosTheta)
				local invSinTheta = 1/math.sin(theta)
				startInterp = math.sin((t-1)*theta)*invSinTheta
				finishInterp = math.sin(t*theta)*invSinTheta
			else
				startInterp = t-1
				finishInterp = t
			end
		end
		return a[1]*startInterp + b[1]*finishInterp, a[2]*startInterp + b[2]*finishInterp, a[3]*startInterp + b[3]*finishInterp, a[4]*startInterp + b[4]*finishInterp
	end

	local newMotor = function(part0, part1, c0, c1)
		local w = Instance.new('Motor', part0)
		w.Part0 = part0
		w.Part1 = part1
		w.C0 = c0
		w.C1 = c1
		return w
	end

	Triangle=function(a, b, c)
		local col=BrickColor.new("White")
		--Credit to Fenrier
		local edg1 = (c-a):Dot((b-a).unit)
		local edg2 = (a-b):Dot((c-b).unit)
		local edg3 = (b-c):Dot((a-c).unit)
		if edg1 <= (b-a).magnitude and edg1 >= 0 then
			a, b, c = a, b, c
		elseif edg2 <= (c-b).magnitude and edg2 >= 0 then
			a, b, c = b, c, a
		elseif edg3 <= (a-c).magnitude and edg3 >= 0 then
			a, b, c = c, a, b
		else 
			assert(false, "unreachable")
		end

		local len1 = (c-a):Dot((b-a).unit)
		local len2 = (b-a).magnitude - len1
		local width = (a + (b-a).unit*len1 - c).magnitude
		local maincf = CFrameFromTopBack(a, (b-a):Cross(c-b).unit, -(b-a).unit)

		local list = {}

		if len1 > 0.01 then
			local w1 = Instance.new('WedgePart', EffectModel)
			game:GetService("Debris"):AddItem(w1,5)
			coroutine.resume(coroutine.create(function(p)
				for i=1, 10 do
					p.Transparency=i/10
					swait()
				end
				p:Remove()
			end),w1)
			w1.FormFactor = "Custom"
			w1.BrickColor = col
			w1.Material = "SmoothPlastic"
			w1.CanCollide = false
			local sz = Vector3.new(0.2, width, len1)
			w1.Size = sz
			local sp = Instance.new("SpecialMesh",w1)
			sp.MeshType = "Wedge"
			sp.Scale = Vector3.new(0,1,1) * sz/w1.Size
			w1:BreakJoints()
			w1.Anchored = true
			w1.Transparency = 0
			w1.CFrame = maincf*CFrame.Angles(math.pi,0,math.pi/2)*CFrame.new(0,width/2,len1/2)
		end

		if len2 > 0.01 then
			local w2 = Instance.new('WedgePart', EffectModel)
			game:GetService("Debris"):AddItem(w2,5)
			coroutine.resume(coroutine.create(function(p)
				for i=1, 10 do
					p.Transparency=i/10
					swait()
				end
				p:Remove()
			end),w2)

			w2.FormFactor = "Custom"
			w2.BrickColor = col
			w2.Material = "SmoothPlastic"
			w2.CanCollide = false
			local sz = Vector3.new(0.2, width, len2)
			w2.Size = sz
			local sp = Instance.new("SpecialMesh",w2)
			sp.MeshType = "Wedge"
			sp.Scale = Vector3.new(0,1,1) * sz/w2.Size
			w2:BreakJoints()
			w2.Anchored = true
			w2.Transparency = 0
			w2.CFrame = maincf*CFrame.Angles(math.pi,math.pi,-math.pi/2)*CFrame.new(0,width/2,-len1 - len2/2)
		end
		return unpack(list)
	end

	osamachain = function(P0,P1,Color1,Color2,thickness1,thickness2,T)
		local Part0=P0.Position
		local Part1=P1.Position
		local magz = (Part0 - Part1).magnitude
		local curpos = Part0
		local parts = {} 
		local lastpart=P0
		local model = Instance.new("Model",EffecMo) 
		model.Name = "osama_chain" 
		local par=model
		if par:FindFirstChild("TimeLeft")~=nil then
			par:FindFirstChild("TimeLeft"):Destroy()	
		end
		local chains = {} 
		local WAT=false
		local cb=Instance.new("Part",model)
		cb.Name="Main_chain"
		cb.Size=Vector3.new(.2,1,.2)
		cb.BrickColor=BrickColor.new(Color1)
		cb.Anchored=false
		cb.CanCollide=false
		cb.Locked=true
		cbM=Instance.new("CylinderMesh",cb) 
		cbM.Name="Mesh"               
		cb.CFrame = CFrame.new((Part0 + Part1)/2, Part0) * CFrame.Angles(math.pi/2, 0, 0)      
		for j = 1, T do
			local Part0=P0.Position
			local Part1=P1.Position
			local trolpos = CFrame.new(curpos,Part1)*CFrame.new(0,0,magz/T).p
			local p = Instance.new("Part") 
			p.Name="Outline"..j
			p.Size = Vector3.new(.2,1,.2) 
			p.BrickColor = BrickColor.new(Color2)
			p.TopSurface = 0 
			p.BottomSurface = 0 
			p.CanCollide = false 
			p.Locked=true
			p.Anchored=true
			p.Material = "Neon" 
			p.TopSurface = 0 
			p.BottomSurface = 0 
			local mesh = Instance.new("CylinderMesh",p) 
			mesh.Name = "Mesh" 
			mesh.Scale = Vector3.new(1.5,magz/T,1.5) 
			p.Parent = model
			p.CFrame = CFrame.new(curpos,trolpos)*CFrame.new(0,0,magz/T/2)
			curpos = p.CFrame*CFrame.new(0,0,magz/T/2).p
			p.CFrame=p.CFrame*CFrame.Angles(math.rad(90),0,0)
			p.Transparency=0.35
			local str=Instance.new("ObjectValue",p)
			str.Value=lastpart 
			str.Name="LP"
			lastpart=p
			table.insert(parts,{p,p})
			table.insert(chains,{0,0,parts,0})

			coroutine.resume(coroutine.create(function()
				while WAT==false do
					game:GetService("RunService").RenderStepped:wait()
					local Part0=P0.Position
					local Part1=P1.Position
					local ow=j
					local magz = (Part0 - Part1).magnitude
					local oldT=T
					local wtf=magz
					mesh.Scale = Vector3.new(thickness2,magz/T,thickness2) 
					if ow>1 then
						local dangnigga=CFrame.new(str.Value.Position)*CFrame.new(0,0,wtf/oldT/2).p
						local trolpos = CFrame.new(dangnigga,Part1)*CFrame.new(0,0,wtf/oldT).p
						p.CFrame = CFrame.new(str.Value.Position,Part1)*CFrame.new(0,0,-(wtf/oldT))*CFrame.Angles(math.rad(90),0,0)
					end
					if ow<=1 then
						local dangnigga=Part0
						local trolpos = CFrame.new(dangnigga,Part1)*CFrame.new(0,0,wtf/oldT).p
						p.CFrame = CFrame.new(dangnigga,trolpos)*CFrame.new(0,0,wtf/oldT/2)*CFrame.Angles(math.rad(90),0,0)
					end
				end
			end))
		end


		coroutine.resume(coroutine.create(function()
			while WAT==false do
				local Part0=P0.Position
				local Part1=P1.Position
				cbM.Scale = Vector3.new(thickness1, (Part0 - Part1).magnitude, thickness1)
				cb.CFrame = CFrame.new((Part0 + Part1)/2, Part0) * CFrame.Angles(math.pi/2, 0, 0) 
				for i, v in pairs(chains) do 
					v[1] = v[1] %200 +4
					local dir = i%2 == 0 and 1 or -1 
					for j, V in pairs(v[3]) do 
						local val = math.sin(math.pi/2 * 2 * (((v[1] + (100 * j/#v[3])*dir) % 100)/100)) 
						V[2].Transparency = 0.12 + val * 0.85
					end 
				end 
				game:GetService("RunService").RenderStepped:wait()
			end
		end)) 

		local t=Instance.new("BoolValue",par)
		t.Name="TimeLeft"

		coroutine.resume(coroutine.create(function()
			repeat wait() until par:FindFirstChild("TimeLeft")==nil
			WAT=true
			for _,v in pairs(model:children()) do
				coroutine.resume(coroutine.create(function()
					for i=1,30 do
						swait() 
						v.Mesh.Scale=v.Mesh.Scale-Vector3.new(.05,0,.05)
						v.Transparency=i/30
					end	
					v:Destroy()
				end))	
				game.Debris:AddItem(model,1)
			end
		end))

		return t
	end
	AnimTab={}
	angles=CFrame.Angles
	euler=CFrame.fromEulerAnglesXYZ
	cf=CFrame.new
	AnimTab["Idle"]=function(frameN,sine)
		local frame={}	
		frame[1]={
			CFrame.new(0.0749855712, -0.0629398525, 0.0235529467, 0.819152057, -0.0499904789, -0.571393847, 0.0499904789, 0.998626292, -0.0157019496, 0.571393847, -0.0157019496, 0.820525885)  * CFrame.new(0, .05*math.cos(sine/16), 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-2.23517418e-008, 1.49999809, -5.96046448e-008, 0.707106829, 0, 0.707106948, -0.0616284125, 0.99619478, 0.0616284236, -0.704416037, -0.0871557444, 0.704416215) * CFrame.new(0, .02*math.cos(sine/16), 0) * CFrame.Angles( math.rad(2*math.cos(sine/16)), 0, 0), 
			CFrame.new(1.39567375, 0.0430115312, 0.0315978527, 0.694800496, -0.393022656, -0.602318823, 0.404297799, 0.90606755, -0.12484619, 0.594807148, -0.156772524, 0.788436532) * CFrame.new(0, .05* math.cos(sine/16), 0) * CFrame.Angles(0, 0, math.rad(3.5*math.cos(sine/16))), 
			CFrame.new(-1.58251691, 0.206372619, 0.0614111423, 0.471944094, 0.547303855, 0.691178441, -0.39397791, 0.832269073, -0.39001283, -0.788701952, -0.0882446468, 0.608410358) * CFrame.new(0, .05 * math.cos(sine/16), 0) * CFrame.Angles( math.rad(3.5*math.cos(sine/16)), 0, 0),  
			CFrame.new(0.560000062, -1.83199704, 8.94069672e-008, 0.99619472, -0.0871557444, 2.98023224e-008, 0.0841859877, 0.962250233, 0.258819044, -0.0225575566, -0.257834196, 0.965925813) * CFrame.new(0,-.05*math.cos(sine/16), 0) * CFrame.Angles(0, 0, 0),
			CFrame.new(-0.612000167, -1.99999762, -4.47034836e-008, 0.936116815, 0.0871557519, 0.340718925, -0.0818995982, 0.996194839, -0.0298090391, -0.342020333, 1.3038516e-008, 0.939692676)* CFrame.new(0,-.05*math.cos(sine/16), 0) * CFrame.Angles(0, 0, 0),
		}

		return frame[frameN]
	end

	AnimTab["Walk"]=function(frameN,sine,num)
		local frame={}	
		frame[1]={
			CFrame.new(-0.0113935694, 0.00570777431, 0.130231544, 0.984834015, 0.0075960937, -0.173317313, 0.00759613095, 0.99619472, 0.0868239552, 0.173317313, -0.0868239775, 0.981028795) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(4.61004674e-007, 1.49999475, -2.23517418e-007, 0.996191978, 0.00759613141, 0.0868240595, -9.31322575e-010, 0.99619472, -0.0871556401, -0.0871557146, 0.0868239626, 0.992401242) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.46789289, 0.0982637256, -0.144648015, 0.950443208, -0.30540812, -0.058124274, 0.310294747, 0.943467736, 0.116559155, 0.0192402601, -0.128818408, 0.99147892) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.51850045, 0.0611076728, -0.0488293171, 0.793944538, 0.343733251, -0.501494884, -0.374889195, 0.926151514, 0.0412922278, 0.478652835, 0.155221671, 0.864171624) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(.5, -1.85 - 0.5 * math.cos(sine / num) / 2, 0 + 2 *  math.sin(sine / num) / 2) * angles(math.rad(-60 *  math.sin(sine / num)), math.rad(-5), math.rad(0)),
			CFrame.new(-.5, -1.85 + 0.5 * math.cos(sine / num) / 2, 0 - 2 * math.sin(sine / num) / 2) * angles(math.rad(60 *  math.sin(sine / num)), math.rad(5), math.rad(0)),
		}
		return frame[frameN]
	end

	AnimTab["Fall"]=function(frameN)
		local frame={}	
		frame[1]={
			CFrame.new(-0, -0, -0, 1, 0, 0, 0, 1, 0, 0, 0, 1) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0, 1.49999714, 4.47034836e-008, 1, 0, -0, 0, 0.996194601, -0.0871557221, 0, 0.0871557221, 0.996194601) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.52677226, 0.170301318, 0.120866239, 0.615058243, -0.725984514, -0.307655036, 0.75595212, 0.653862953, -0.0316542089, 0.224143073, -0.213102654, 0.950971305) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.74943757, 0.22577554, 0.248999774, -0.467496186, 0.588313401, 0.659799039, -0.437883109, 0.494264781, -0.750973344, -0.767922878, -0.639991939, 0.0265456047) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.5, -1.79199886, 0.372999966, 1, 0, 0, 0, 0.965925813, 0.258819044, 0, -0.258819044, 0.965925813) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.5, -1.56999934, 3.57627869e-007, 1, 0, 0, 0, 0.906307697, 0.422618449, 0, -0.422618449, 0.906307697) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		return frame[frameN]
	end

	AnimTab["Jump"]=function(frameN)
		local frame={}	
		frame[1]={
			CFrame.new(-0, -0, -0, 1, 0, 0, 0, 1, 0, 0, 0, 1) * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(0), 0, 0), 
			CFrame.new(0, 1.49999642, -2.98023224e-007, 1, 0, -0, 0, 0.984807611, -0.173648387, 0, 0.173648387, 0.984807611) * CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(10), 0, 0), 
			CFrame.new(1.52818167, 0.149664342, 0.34200123, 0.642788768, -0.627507448, -0.439385235, 0.766045749, 0.526541293, 0.368688077, 2.44126284e-008, -0.573576927, 0.8191517) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.55943918, 0.108779103, 0.407002598, 0.0947543383, 0.640856326, 0.761791289, -0.612354636, 0.640856147, -0.462954849, -0.784887373, -0.422618419, 0.4531537) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.5, -1.79199874, 0.372999489, 1, 0, 0, 0, 0.819151998, 0.573576391, 0, -0.573576391, 0.819151998) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.5, -1.18119395, -0.181302905, 1, 0, 0, 0, 0.906307697, 0.422618449, 0, -0.422618449, 0.906307697) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		return frame[frameN]
	end

	AnimTab["ClickCombo"]=function(frameN)
		local frame={}	
		frame[1]={
			CFrame.new(-0.0197398271, 0.00017363939, -0.0113914032, 0.819431186, 0.0131589621, -0.573026359, -0.0151344128, 0.999884605, 0.00131906569, 0.572977841, 0.00759153441, 0.819535732) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-5.12972474e-006, 1.49999857, 6.86198473e-006, 0.939692736, 0, -0.342020154, -0.0298089944, 0.99619472, -0.081899412, 0.340719104, 0.0871555582, 0.936116457) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.46780205, 0.710095406, 0.234785587, -0.355826288, -0.865559995, 0.352411389, -0.172264263, -0.30988273, -0.935039043, 0.918538094, -0.393419534, -0.038840577) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.43954968, -2.52574682e-006, 0.129604459, 0.836516142, 0.258819044, 0.482963055, -0.224143833, 0.965925813, -0.129409522, -0.499999762, 5.96046448e-008, 0.866025388) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.679453552, -2.00000072, -0.0836714357, 0.984807849, -0.173648208, 1.78813934e-007, 0.173648164, 0.984807789, 1.49011612e-008, 2.08616257e-007, -2.23517418e-008, 0.999999762) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.604891539, -2.00168324, 0.0733468086, 0.902858794, 0.0789898112, 0.422619224, -0.0871558189, 0.996194482, -8.33533704e-008, -0.421009451, -0.0368335843, 0.906307936) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		frame[2]={
			CFrame.new(-0.0613368936, 0.00152878393, 0.0285331458, 0.76637429, 0.0408957675, 0.641089976, -0.0435777232, 0.99898237, -0.0116322488, -0.640913188, -0.0190227255, 0.767376542) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-7.62548461e-006, 1.49999809, -3.71038914e-006, 0.999998212, 0, 2.98023224e-008, 5.58793545e-009, 0.99619478, 0.0871554092, 0, -0.0871555507, 0.996193051) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.00463496707, 0.187205061, -0.965997756, 0.367293179, 0.711594164, 0.598938942, 0.427254975, 0.442903399, -0.788219512, -0.826164603, 0.545407176, -0.141356587) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.49999774, 3.53902578e-006, 1.47521496e-005, 0.907670081, 0.258818388, 0.330364645, -0.243210018, 0.965925872, -0.0885214061, -0.342019051, -2.08616257e-007, 0.939689517) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.499999136, -2.00000024, -3.50921755e-006, 0.999998271, 1.86264515e-009, 5.96046448e-008, 1.86264515e-009, 1.00000012, -1.37835741e-007, 5.96046448e-008, -1.37835741e-007, 0.99999845) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.645505011, -2.00401926, 0.0868109241, 0.924950242, 0.16841127, 0.340715557, -0.168411225, 0.985266805, -0.0298095532, -0.340716124, -0.0298096016, 0.939684689) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		frame[3]={
			CFrame.new(1.55471647e-009, -0.0068855267, -5.47999889e-006, 0.793305218, -2.25794793e-007, 0.608824253, 0.000484734424, 0.999999702, -0.000631258881, -0.608824015, 0.000795871951, 0.79330498) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.0225859769, 1.49797451, 0.0388732702, 0.883248448, 0.0451714694, 0.466724664, -0.00345645775, 0.995949268, -0.089850761, -0.468892813, 0.0777472705, 0.879826784) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.58917701, 0.14805764, 0.334518611, 0.0183337033, -0.201969534, -0.979220271, 0.697920084, 0.70388478, -0.132113129, 0.715941131, -0.680995286, 0.153863311) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.88436937, 0.643480539, -0.285786152, 0.300701588, 0.768738747, 0.564463854, 0.950921416, -0.286961168, -0.115765437, 0.0729858056, 0.571571708, -0.817299783) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.412421823, -2.00387192, 0.0902987272, 0.791517377, 0.00115086511, -0.611145437, 0.00795604475, 0.999894083, 0.0121870684, 0.611094832, -0.0145086367, 0.791424394) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.409770161, -1.99211299, -0.0764102042, 0.792799294, 0.000281186076, -0.609482467, 0.00198945496, 0.999993384, 0.00304915174, 0.609479368, -0.00362995872, 0.792793512) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		frame[4]={
			CFrame.new(2.62498816e-007, -0.000344276341, -2.2777408e-007, 0.803031087, 0, -0.595937431, -0.000474512577, 0.999999702, -0.000639379025, 0.595937312, 0.000796243548, 0.80303061) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.0595012531, 1.49132609, -0.0711210817, 0.77105993, -0.119002283, 0.62554419, 0.00120455027, 0.982652485, 0.185453147, -0.636761785, -0.14224194, 0.757826924) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.59903359, 0.230916396, 0.409287423, 0.0014244318, -0.198947608, -0.980009317, 0.835885108, 0.538167715, -0.108036242, 0.54890269, -0.819021165, 0.167063877) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.625070512, 0.361982256, -0.745636106, 0.285767585, -0.796516061, 0.532822251, 0.955926418, 0.276036203, -0.100043766, -0.0673916936, 0.537928045, 0.840292692) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.398624241, -1.9999733, -0.0658840984, 0.804467261, -0.000422894955, 0.593996882, -5.37931919e-005, 0.999999702, 0.000784777105, -0.593996882, -0.000663250685, 0.804466903) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.398404002, -1.99966228, 0.0658915937, 0.803506851, -0.000106021762, 0.595295787, -1.34408474e-005, 1, 0.000196315348, -0.595295668, -0.000165745616, 0.803506553) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		frame[5]={
			CFrame.new(-1.14056382e-008, -0.196045384, -0.000156056514, 1, 5.81785571e-008, -0.00159262121, -1.21010919e-006, 0.99999994, -0.000796537439, 0.00159247965, 0.000796022301, 0.999999464) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(9.34411162e-008, 1.47852278, -0.144922316, 0.99999392, 7.4505806e-008, -5.21540642e-008, 5.78365871e-008, 0.957062781, 0.289872348, -7.4505806e-008, -0.289865702, 0.957063496) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.663555026, 0.49231568, -0.850663185, 0.015370708, 0.692666352, 0.721096218, 0.999231637, 0.0153704779, -0.036063727, -0.0360642895, 0.721095979, -0.691897511) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.663553596, 0.492314607, -0.850663126, 0.0153705887, -0.692666411, -0.721096218, -0.999231517, 0.015370396, -0.0360638089, 0.0360642895, 0.721096158, -0.691897392) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.499701917, -1.92411804, 0.38171339, 0.999994397, 0.000301316381, -0.000750280917, 5.81403583e-006, 0.924113035, 0.382118583, 0.000808849931, -0.382119298, 0.924106598) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.401899934, -1.79915607, -0.00056552887, 0.999996126, -7.83959404e-005, 0.000813350081, -9.8903547e-007, 0.995200098, 0.0978638232, -0.000817283988, -0.0978644416, 0.995195687) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		frame[6]={
			CFrame.new(-0, -0.828355193, 0.211025894, 1, 0, 0, 0, 0.939692676, 0.342019737, 0, -0.342019737, 0.939692676) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0, 1.49999678, 3.7252903e-006, 1, 0, 0, 0, 0.996194541, -0.0871557444, 0, 0.0871557444, 0.996194541) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.87859392, 0.514964342, 0.34640047, -0.0871552005, -0.936116815, -0.340718567, 0.996194661, -0.0818997845, -0.029810369, -1.13248825e-006, -0.342018634, 0.939689815) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.68897307, 0.493994951, 0.408263475, 2.7980894e-008, 0.906309366, 0.422614932, -0.999999881, 6.40749931e-007, -1.28149986e-006, -1.43051147e-006, -0.422614932, 0.906309187) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.5, -1.59677243, -0.49357605, 1, 0, 0, 0, 0.984807909, -0.17364797, 0, 0.17364797, 0.984807909) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.5, -1.90224135, 0.424649239, 1, 0, 0, 0, 0.906307638, 0.422618598, 0, -0.422618598, 0.906307638) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		frame[7]={
			CFrame.new(-0, 0, 0, 0.960631907, 0.00137611502, 0.277821034, -0.159289986, 0.822030306, 0.546711087, -0.227624968, -0.569442153, 0.789887726) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.0181836374, 1.50775862, -0.0594066978, 0.999913454, -0.0105673671, -0.00784052908, 0.0118241087, 0.983038306, 0.183019012, 0.00577357411, -0.183095813, 0.983078241) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.5073173, 1.31327307, -0.909579456, 0.94229573, -0.200924531, 0.267783791, 0.109451406, -0.571028471, -0.813601255, 0.316384584, 0.795962393, -0.516086161) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.57927585, 0.317291111, 0.397556216, 0.809802711, 0.208654553, 0.548345804, -0.517000973, 0.695623755, 0.498816311, -0.277362049, -0.687437952, 0.671192646) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.655821919, -1.91117561, 0.471306443, 0.991203368, 0.0697749257, 0.112460986, -0.110218167, 0.905595839, 0.409570932, -0.0732664168, -0.418363273, 0.905320168) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.524112225, -1.89465261, -0.507151604, 0.994412482, 0.0338317044, -0.100033343, -0.0809665471, 0.852411568, -0.516580105, 0.0677920207, 0.521791637, 0.850385308) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		return frame[frameN]
	end

	AnimTab["C"]=function(frameN)
		local frame={}	
		frame[1]={
			CFrame.new(2.84053385e-007, -0.699999809, -2.38418579e-007, 0.965778768, -0.258819073, -0.0168577731, 0.232835919, 0.836516201, 0.496012032, -0.114275634, -0.482962906, 0.868152142) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-5.63820706e-008, 1.49240422, 0.0868239999, 1, -4.84287739e-008, -8.94069672e-008, -4.47034836e-008, 0.98480767, -0.173648149, -2.98023224e-008, 0.173648193, 0.984807789) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.74633741, 0.23793821, 0.0817345008, 0.855079293, -0.517596483, -0.0305508971, 0.513783395, 0.837906241, 0.18422699, -0.0697565079, -0.173225164, 0.982408822) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.49061811, 0.166142434, -1.07410741, -0.0469467044, 0.428182781, -0.9024719, -0.761570275, 0.569285035, 0.309717506, 0.64637953, 0.701836109, 0.299365371) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.463051915, -0.780309081, -0.937637031, 0.941776395, 0.166060507, -0.29237175, -0.294348687, 0.827483535, -0.478152335, 0.162530512, 0.536371887, 0.828184247) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.799590945, -1.51444077, -0.389154136, 0.970662296, 0.0849219561, 0.224951029, -0.22485368, 0.652014375, 0.724098086, -0.0851795673, -0.75343585, 0.651980817) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		return frame[frameN]
	end

	AnimTab["Z"]=function(frameN)
		local frame={}	
		frame[1]={
			CFrame.new(-0, -0, 0, 0.939692557, 0, 0.342020363, 0, 1, 0, -0.342020363, 0, 0.939692557) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(7.67409801e-007, 1.49999976, -2.84612179e-006, 0.965925753, -0.0449434593, -0.254887015, 0, 0.98480773, -0.173648164, 0.258819044, 0.167731255, 0.951251149) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.45801651, 1.30391252, -0.184753254, 0.908105314, -0.402072936, 0.116977036, -0.316420078, -0.841866553, -0.43720898, 0.274269402, 0.360022634, -0.891720653) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.49999797, -1.36718154e-006, -4.20212746e-006, 0.907673359, 0.258819044, -0.330366075, -0.243210346, 0.965925813, 0.0885213241, 0.342020154, 0, 0.939692616) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.552665412, -2.01035452, 0.0304116532, 0.962249815, -0.0871557146, -0.257833838, 0.0841859728, 0.996194422, -0.022557551, 0.258818924, -5.58793545e-009, 0.965926111) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.49999544, -2, -1.74716115e-006, 0.99619472, 0, 0.0871555209, 0, 1, 0, -0.0871555209, 0, 0.99619472) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		return frame[frameN]
	end

	AnimTab["X"]=function(frameN)
		local frame={}	
		frame[1]={
			CFrame.new(0, -0, 0, -4.37113883e-008, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-008) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0, 1.5, 0, 1.19248824e-008, 0, -1, 0, 1, 0, 1, 0, 1.19248824e-008) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(1.875, 0.443000317, 2.5331974e-007, -3.09086197e-008, -1, 3.09086197e-008, 0.707106769, -4.37113883e-008, -0.707106769, 0.707106769, 0, 0.707106769) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-1.30599999, 0.0260016322, -4.529953e-006, 0.694272041, 0.422618032, 0.58256346, -0.323744178, 0.906307817, -0.271653652, -0.642787516, 1.08828191e-008, 0.766044438) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(0.677001357, -1.99999976, 0, 0.98480773, -0.173648179, 0, 0.173648179, 0.98480773, 0, 0, 0, 1) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
			CFrame.new(-0.500001073, -2, 7.00354576e-007, 0.866025329, 0, 0.500000179, 0, 1, 0, -0.500000179, 0, 0.866025329) * CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), 
		}
		return frame[frameN]
	end
	lastcframe={RootJoint.C0,Neck.C0,RW.C0,LW.C0,RH.C0,LH.C0}
	function PlayAnimationFromTable(tabl, speed, bool)
		RootJoint.C0 = clerp(RootJoint.C0, tabl[1], speed) 
		Neck.C0 = clerp(Neck.C0, tabl[2], speed) 
		RW.C0 = clerp(RW.C0, tabl[3], speed) 
		LW.C0 = clerp(LW.C0, tabl[4], speed) 
		RH.C0 = clerp(RH.C0, tabl[5], speed) 
		LH.C0 = clerp(LH.C0, tabl[6], speed)
		lastcframe={RootJoint.C0,Neck.C0,RW.C0,LW.C0,RH.C0,LH.C0} 
		if bool == true then
			if resetc1 == false then
				resetc1 = true
				RootJoint.C1 = RootJoint.C1
				Torso.Neck.C1 = Torso.Neck.C1
				RW.C1 = rarmc1
				LW.C1 = larmc1
				RH.C1 = rlegc1
				LH.C1 = llegc1
			end
		end

	end

	CamShake=function(Part,Distan,Power,Times) 
		local de=Part.Position
		for i,v in pairs(workspace:children()) do
			if v:IsA("Model") and v:findFirstChild("Humanoid") then
				for _,c in pairs(v:children()) do
					if c.ClassName=="Part" and (c.Position - de).magnitude < Distan then
						local Noob=v.Humanoid
						if Noob~=nil then
							if Noob:FindFirstChild("CamShake")==nil then-- and Noob == Character then
--[[local ss=script.CamShake:clone()
ss.Parent=Noob
ss.Power.Value=Power
ss.Times.Value=Times
ss.Disabled=false]]
								CameraShake(Times, Power)
							end
						end
					end
				end
			end
		end
	end

	local RbxUtility = LoadLibrary("RbxUtility")
	local Create = RbxUtility.Create

	function RemoveOutlines(part)
		part.TopSurface, part.BottomSurface, part.LeftSurface, part.RightSurface, part.FrontSurface, part.BackSurface = 10, 10, 10, 10, 10, 10
	end

	function rayCast(Position, Direction, Range, Ignore)
		return game:service("Workspace"):FindPartOnRay(Ray.new(Position, Direction.unit * (Range or 999.999)), Ignore) 
	end 
	function rayCastWithIngore(Position, Direction, Range, Ignore)
		return game:service("Workspace"):FindPartOnRayWithIgnoreList(Ray.new(Position, Direction.unit * (Range or 999.999)), Ignore) 
	end 

	detect_state = function()
		Torsovelocity = (RootPart.Velocity * Vector3.new(1, 0, 1)).magnitude 
		velocity = RootPart.Velocity.y
		sine = sine + change
		local hit, pos = rayCast(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position - Vector3.new(0, 1, 0))).lookVector, 4, Character)
		if equipped == true then
			if RootPart.Velocity.y > 1 and hit == nil then 
				Anim = "Jump"
			elseif RootPart.Velocity.y < -1 and hit == nil then 
				Anim = "Fall"
			elseif Torsovelocity < 1 and hit ~= nil then
				Anim = "Idle"
			elseif Torsovelocity > 2 and hit ~= nil  then
				Anim = "Walk"
			end
		end
	end

	function Lightning(Part0,Part1,Times,Offset,Color,Thickness,Trans) -- Lightning module
		local magz = (Part0 - Part1).magnitude
		local curpos = Part0
		local trz = {-Offset,Offset}
		for i=1,Times do
			local li =Par(EffectModel,"Lightning",Color,Vector3.new(Thickness,Thickness,magz/Times),"Neon")
			li.Transparency = Trans 
			li.BrickColor = BrickColor.new(Color)
			ora=Instance.new("BlockMesh",li)
			ora.Scale=Vector3.new(Thickness,Thickness,1)     
			local Offzet = Vector3.new(trz[math.random(1,2)],trz[math.random(1,2)],trz[math.random(1,2)])
			local trolpos = CFrame.new(curpos,Part1)*CFrame.new(0,0,magz/Times).p+Offzet
			if Times == i then
				local magz2 = (curpos - Part1).magnitude
				li.Size = Vector3.new(Thickness,Thickness,magz2)
				li.CFrame = CFrame.new(curpos,Part1)*CFrame.new(0,0,-magz2/2)
			else
				li.CFrame = CFrame.new(curpos,trolpos)*CFrame.new(0,0,magz/Times/2)
			end
			curpos = li.CFrame*CFrame.new(0,0,magz/Times/2).p
			game.Debris:AddItem(li,.1)
		end
	end
	function Lightning2(Part0,Part1,Times,Offset,Color,Thickness,Trans,V) -- Lightning module
		local magz = (Part0 - Part1).magnitude
		local curpos = Part0
		local trz = {-Offset,Offset}
		for i=1,Times do
			local li =Par(EffectModel,"Lightning",Color,Vector3.new(Thickness,Thickness,magz/Times),"Neon")
			li.Transparency = Trans 
			ora=Instance.new("BlockMesh",li)
			ora.Scale=Vector3.new(Thickness,Thickness,1)     
			local Offzet = Vector3.new(trz[math.random(1,2)],trz[math.random(1,2)],trz[math.random(1,2)])
			local trolpos = CFrame.new(curpos,Part1)*CFrame.new(0,0,magz/Times).p+Offzet
			if Times == i then
				local magz2 = (curpos - Part1).magnitude
				li.Size = Vector3.new(Thickness,Thickness,magz2)
				li.CFrame = CFrame.new(curpos,Part1)*CFrame.new(0,0,-magz2/2)
			else
				li.CFrame = CFrame.new(curpos,trolpos)*CFrame.new(0,0,magz/Times/2)
			end
			curpos = li.CFrame*CFrame.new(0,0,magz/Times/2).p
			coroutine.resume(coroutine.create(function() 
				for i=1,V do
					swait()
					li.Transparency=i/V	
				end
				li:Destroy()
			end))
		end
	end
	function Lightning3(Part0,Part1,Times,Offset,Color,Thickness,Trans,last) -- Lightning module
		local magz = (Part0 - Part1).magnitude
		local curpos = Part0
		local trz = {-Offset,Offset}
		for i=1,Times do
			local li =Par(EffectModel,"Lightning",Color,Vector3.new(Thickness,Thickness,magz/Times),"Neon")
			li.Transparency = Trans 
			local Offzet = Vector3.new(trz[math.random(1,2)],trz[math.random(1,2)],trz[math.random(1,2)])
			local trolpos = CFrame.new(curpos,Part1)*CFrame.new(0,0,magz/Times).p+Offzet
			if Times == i then
				local magz2 = (curpos - Part1).magnitude
				li.Size = Vector3.new(Thickness,Thickness,magz2)
				li.CFrame = CFrame.new(curpos,Part1)*CFrame.new(0,0,-magz2/2)
			else
				li.CFrame = CFrame.new(curpos,trolpos)*CFrame.new(0,0,magz/Times/2)
			end
			curpos = li.CFrame*CFrame.new(0,0,magz/Times/2).p
			game.Debris:AddItem(li,5)
			coroutine.resume(coroutine.create(function()
				for i=1,20 do
					swait()
					li.Transparency=li.Transparency+last	
				end
				li:Destroy()   
			end))
		end
	end

	GET_THE_NEAREST_FAGGOT = function(pos)
		local list = (game.Workspace:children())
		local torso = nil
		local DISTANCE_u_BITCH = 1000
		local temp, human, temp2 = nil, nil, nil
		for x = 1, #list do
			temp2 = list[x]
			if temp2.className == "Model" and temp2.Name ~= Character.Name then
				temp = temp2:findFirstChild("Torso")
				human = temp2:findFirstChild("Humanoid")
				if temp ~= nil and human ~= nil and human.Health > 0 and (temp.Position - pos).magnitude < DISTANCE_u_BITCH then
					local FOUND_YOU = true
					if Player.Neutral == false and game.Players:GetPlayerFromCharacter(temp.Parent) ~= nil  then
						FOUND_YOU = false
					end
					if FOUND_YOU == true then
						torso = temp
						DISTANCE_u_BITCH = (temp.Position - pos).magnitude
					end
				end
			end
		end
		return torso, DISTANCE_u_BITCH
	end
	Damagefunc=function(hit,Damage, knockback,tiem, Type, Delay,stun,removebodypos)
		local Hited=false
		if hit.Parent == nil then
			return 
		end

		h = hit.Parent:FindFirstChild("Humanoid")
		if h ~= nil and hit.Parent.Name ~= Character.Name and hit.Parent:FindFirstChild("Torso") ~= nil then
			if hit.Parent:findFirstChild("DebounceHit") ~= nil and hit.Parent.DebounceHit.Value == true then
				return 
			end
			if h.Health<=0 then return end 
			h = hit.Parent:FindFirstChild("Humanoid")
			c = Instance.new("ObjectValue")
			c.Name = "creator"
			c.Value = game:service("Players").LocalPlayer
			c.Parent = h
			game:GetService("Debris"):AddItem(c, 0.5)
			if Type=="H2" then
				local eff = Par2(Vector3.new(1, 1, 1), hit.CFrame * CFrame.new(math.random(-15, 15) / 10, math.random(-20, 15) / 10, math.random(-5, 5) / 10) * CFrame.Angles(math.random(-15, 15), math.random(-15, 15), math.random(-15, 15)), "Really black", "SpecialMesh", Vector3.new(0.5, 0.5, 0.5))
				eff.Parent = EffectModel
				eff.Name = "BloodEffect"
				eff.Mesh.MeshType = "Sphere"
				eff.Anchored = true
				eff.CanCollide = false
				game:GetService("Debris"):AddItem(eff, 5)
				coroutine.resume(coroutine.create(function(p, A)
					local R = Vector3.new(math.random(-5, 5), math.random(7, 9), math.random(-5, 5)) / 50
					for i = 1, 6 do
						p.Mesh.Scale = p.Mesh.Scale + Vector3.new(0.85, 0.85, 0.85)
						p.Transparency =1
						p.CFrame = p.CFrame * A
						swait()
					end
					p:Remove()
				end), eff, CFrame.Angles(math.rad(math.random(-4, 4) * 4), math.rad(math.random(-4, 4) * 3), math.rad(math.random(-4, 4) * 2)), 0)
				local eb = BillboardGui("http://www.roblox.com/asset/?id=233069772", eff.Position, 0)
				eb.Parent = EffectModel
				eb.BillboardGui.ImageLabel.ImageColor3=Color3.new(255, 0, 0)
				eb.BillboardGui.ImageLabel.Rotation = math.random(-180, 180)
				eb.BillboardGui.Size = UDim2.new(2, 0, 2, 0)
				game:GetService("Debris"):AddItem(eb, 3)
				coroutine.resume(coroutine.create(function(p)
					local r = math.random(-3, 3) * 9
					if r > -12 and r < 1 then
						r = -12
					else
						if r < 12 and r > -1 then
							r = 12
						end
					end
					for i = 1, 6 do
						p.BillboardGui.ImageLabel.ImageTransparency = 0.25 + i / 6
						p.BillboardGui.Size = UDim2.new(2 + i / 1.75, 0, 2 + i / 1.75, 0)
						p.BillboardGui.ImageLabel.Rotation = p.BillboardGui.ImageLabel.Rotation + r
						swait()
					end
					p:Remove()
				end), eb)

				local hitnum = math.random(1, 8)
				if hitnum == 1 then
					so("153092274", hit, 1, 1)
				end
				if hitnum == 2 then
					so("199149186", hit, 2, .5)
				end
				if hitnum == 3 then
					so("153092296", hit, 1, .3)
				end
				if hitnum == 4 then
					so("199149235", hit, 1, .5)
				end
				if hitnum == 5 then
					so("199149269", hit, 1, .4)
				end
				if hitnum == 6 then
					so("199149297", hit, 1, .5)
				end
				if hitnum == 7 then
					so("201858024", hit, 1, .6)
				end
				if hitnum == 8 then
					so("201858024", hit, 1, .5)
				end
			end   

			if Type=="H1" then
				local hitnum=math.random(2,4)       
				p=Par(EffectModel,"EffectHi","White",Vector3.new(1,1,1),"SmoothPlastic")
				p.CFrame=hit.Parent.Torso.CFrame
				m=Instance.new("SpecialMesh")
				m.MeshType="Sphere"
				m.Parent=p
				game:GetService("Debris"):AddItem(p,5)
				coroutine.resume(coroutine.create(function(p)
					for i=1, 8 do
						p.Transparency=i/8
						p.Mesh.Scale=p.Mesh.Scale+Vector3.new(.5,.5,.5)
						swait(.5)
					end
					p:Remove() end),p)

				if hitnum==1 then
					so("153092274", hit, 1, 1)
				else
					if hitnum == 2 then
						so("153092217", hit, 1, 1)
					else
						if hitnum == 3 then
							so("153092227", hit, 1, 1)
						else
							if hitnum == 4 then
								so("153092238", hit, 1, 1)
							end
						end
					end     end
			end

			Noob=hit.Parent
			HTime=time()+1.8
			LastDamage=LastDamage + Damage*1
			ComboHits=ComboHits+1
			Comboing=true
			Hited=true
			local ded=false
			Comboing=true

			h:TakeDamage(Damage)
			local Part=hit
			ShowDamage(Part.CFrame * CFrame.new(0, 0, Part.Size.Z / 2).p + Vector3.new(0, 3.5, 0), -Damage, 1.5, BrickColor.new("Deep orange").Color)
			if stun==true then
				local t=hit.Parent.Torso	
				if hit.Parent.Torso:FindFirstChild("EBOLA")==nil then
					local   r=Instance.new("BodyGyro")
					r.P=1e7
					r.D=1e3
					r.maxTorque=Vector3.new(50000,50000,50000)*50000000000
					r.cframe=r.CFrame*CFrame.fromEulerAnglesXYZ(math.rad(90),0,0)
					r.Parent=t
					game:GetService("Debris"):AddItem(r,1)
					r.Name="EBOLA"
					local fff=Instance.new("BodyForce")
					fff.force=Vector3.new(0,1200,0)
					fff.Parent=t
					game:GetService("Debris"):AddItem(fff,1)
					local hum = hit.Parent.Humanoid
					local bodvol = Instance.new("BodyVelocity")
					bodvol.velocity = Vector3.new(0,0,0)+RootPart.CFrame.lookVector*4
					bodvol.Name="EBOLA"           
					bodvol.P = 4000
					bodvol.maxForce=Vector3.new(50000000,5000000,50000000)*10000
					bodvol.Parent = hit
					game.Debris:AddItem(bodvol,.5)

				end

			end
			if stun~=true  then
				if removebodypos==true then
					for _,v in pairs(hit:children()) do
						if v.ClassName=="BodyPosition" or v.ClassName=="BodyVelocity" then
							v.Parent=nil
						end
					end
				end
				local hum = hit.Parent.Humanoid
				if hit:FindFirstChild("EBOLA")~=nil then hit:FindFirstChild("EBOLA").Parent=nil end
				local bodvol = Instance.new("BodyVelocity")
				bodvol.Name="EBOLA"            
				bodvol.velocity = knockback
				bodvol.P = 4000
				bodvol.maxForce=Vector3.new(50000000,5000000,50000000)*10000
				bodvol.Parent = hit
				game.Debris:AddItem(bodvol,tiem)

			end

			local debounce = Instance.new("BoolValue")
			debounce.Name = "DebounceHit"
			debounce.Parent = hit.Parent
			debounce.Value = true
			game:GetService("Debris"):AddItem(debounce, Delay)
			c = Instance.new("ObjectValue")
			c.Name = "creator"
			c.Value = Player
			c.Parent = h
			game:GetService("Debris"):AddItem(c, 0.5)
			local  CRIT = false
		end
	end     
	function MagnitudeDamage(Part, magni,Damage, knockback,tiem, Type, Delay ,stun,removebodypos)
		for _, c in pairs(workspace:children()) do
			local hum = c:findFirstChild("Humanoid")
			if hum ~= nil then
				local head = c:findFirstChild("Torso")
				if head ~= nil then
					local targ = head.Position - Part.Position
					local mag = targ.magnitude
					if mag <= magni and c.Name ~= Player.Name then 
						Damagefunc(head,Damage, knockback,tiem, Type, Delay,stun,removebodypos)
					end
				end
			end
		end
	end
	Cooldown=function(name,duration)
		local t=Instance.new("BoolValue",char)
		t.Name=name
		coroutine.resume(coroutine.create(function()
			swait((duration*30)-1)
			game.Debris:AddItem(t,.1)
		end))
	end

	Koy=""
	Dmoves=nil

	Stop = function()
		canjump = false
	end
	Resume= function()
		canjump = true
	end

	Player.Character.Humanoid.Changed:connect(function()
		if canjump == false then
			Player.Character.Humanoid.Jump = false
		end
	end)

	doingmoves=function(value)
		if value==true then
			LastMove=""
			Stop()
			input=""
			Koy=""
			CanCancel=false
			Dmoves=true	
			DIR=RootPart.CFrame.lookVector
		end	

		if value==false then
			Dmoves=false
			LastMove=""
			Koy=""
			if Dmoves==false then
				CanCancel=true
				char.Humanoid.WalkSpeed=DesiredSpeed
				Resume()
			end
			Dmoves=false
		end	

	end

	Dmoves=false

	input=""
	age=0
	cam_ing=false
	local Input_MaxTime=.8
	local Input_Time=Input_MaxTime
	local Input_Addition=.2
	local Input_Lose=.1
	local Max_Input=20
	local Running_Timer=false

	coroutine.resume(coroutine.create(function()
		while true do
			swait()
			if Input_Time>0 then
				Input_Time=Input_Time-Input_Lose
			elseif Input_Time < 0 then
				Input_Time=0
				input=""
			elseif Input_Time == 0 then
				input=""
			elseif Input_Time > Input_MaxTime then
				Input_Time = Input_MaxTime
			end
		end
	end))

	getDirection=function()
		local par=RootPart
		Cam=workspace.CurrentCamera
		return {CFrame.new(par.Position,Vector3.new(Cam.CoordinateFrame.x,par.Position.y,Cam.CoordinateFrame.z))*CFrame.fromEulerAnglesXYZ(0,math.pi,0),Vector3.new(Cam.CoordinateFrame.p.x,par.CFrame.p.y,Cam.CoordinateFrame.p.z)}
	end
	getrek=function()
		Cam=workspace.CurrentCamera
		Cam=workspace.CurrentCamera
		return {CFrame.new(RootPart.Position,Vector3.new(Noob.Torso.Position.x,RootPart.Position.y,Noob.Torso.Position.z)),Vector3.new(Noob.Torso.CFrame.p.x,Noob.Torso.CFrame.p.y,Noob.Torso.CFrame.p.z)}
	end
	FaceMouse=function()
		Cam=workspace.CurrentCamera
		return {CFrame.new(char.Torso.Position,Vector3.new(mouse.Hit.p.x,char.Torso.Position.y,mouse.Hit.p.z)),Vector3.new(mouse.Hit.p.x,mouse.Hit.p.y,mouse.Hit.p.z)}
	end
	FaceForward=function() 
		RootPart.CFrame=getDirection()[1]
		return RootPart.CFrame
	end


	ph0segui = function(Char, Dealt,color)
		local holder = Instance.new("Model",Char)
		holder.Name = "Effect"
		local c = Par(holder,"Head","White",Vector3.new(1, 0.4, 1),"SmoothPlastic")
		c.Transparency = 1
		local b = Instance.new("BillboardGui", c)
		b.Size = UDim2.new(5, 0, 5, 0)
		b.AlwaysOnTop = true
		local damgui = it("TextLabel")
		damgui.Parent = b
		damgui.Text = Dealt
		damgui.BackgroundTransparency = 1
		damgui.BackgroundColor3 = Color3.new(0, 0, 0)
		damgui.SizeConstraint = "RelativeXY"
		damgui.TextXAlignment = "Center"
		damgui.TextYAlignment = "Center"
		damgui.Position =  UDim2.new(0, 0, 0, 0)
		damgui.Size = UDim2.new(1, 0, 1, 0)
		damgui.Font = "ArialBold"
		damgui.FontSize = "Size14"
		damgui.TextWrapped = false
		damgui.TextStrokeTransparency = 0
		damgui.TextColor3 = BrickColor.new(color).Color
		damgui.TextScaled = true
		local ms = Instance.new("CylinderMesh")
		ms.Scale = Vector3.new(0.8, 0.8, 0.8)
		ms.Parent = c
		c.Reflectance = 0
		Instance.new("BodyGyro").Parent = c
		c.Parent = holder
		if Char:findFirstChild("Head") ~= nil then
			c.CFrame = cf(Char.Head.CFrame.p + Vector3.new(math.random(-100, 100) / 100, 3, math.random(-100, 100) / 100))
		else
			if Char.Parent:findFirstChild("Head") ~= nil then
				c.CFrame = cf(Char.Parent.Head.CFrame.p + Vector3.new(math.random(-100, 100) / 100, 3, math.random(-100, 100) / 100))
			end
		end
		local f = Instance.new("BodyPosition")
		f.P = 2000
		f.D = 100
		f.maxForce = Vector3.new(545000, 545000, 545000)
		f.position = c.Position + Vector3.new(0, 1, 0)
		f.Parent = c
		c.CanCollide = false
		c.CanCollide = false
		coroutine.resume(coroutine.create(function()
			swait(20)
			for i=1,15 do
				swait()
				damgui.TextTransparency=i/15
				damgui.TextStrokeTransparency=i/15	
				f.position=f.position+Vector3.new(0,.3,0)
			end	
		end))
		game:GetService("Debris"):AddItem(m, 1)
	end
	mouse=nil
	ShowDamage = function(Pos, Text, Time, Color)

		local Rate = 0.033333333333333
		if not Pos then
			local Pos = Vector3.new(0, 0, 0)
		end
		local Text = Text or ""
		local Time = Time or 2
		if not Color then
			local Color = Color3.new(1, 0, 1)
		end
		local EffectPart = CreatePart(workspace, "SmoothPlastic", 0, 1, BrickColor.new(Color), "Effect", Vector3.new(0, 0, 0))
		EffectPart.Anchored = true
		local BillboardGui = Create("BillboardGui")({Size = UDim2.new(3, 0, 3, 0), Adornee = EffectPart, Parent = EffectPart})
		local TextLabel = Create("TextLabel")({BackgroundTransparency = 1, Size = UDim2.new(1, 0, 1, 0), Text = Text, TextColor3 = Color, TextScaled = true, Font = Enum.Font.ArialBold, Parent = BillboardGui})
		game.Debris:AddItem(EffectPart, Time + 0.1)
		EffectPart.Parent = game:GetService("Workspace")
		delay(0, function()

			local Frames = Time / Rate
			for Frame = 1, Frames do
				wait(Rate)
				local Percent = Frame / Frames
				EffectPart.CFrame = CFrame.new(Pos) + Vector3.new(0, Percent, 0)
				TextLabel.TextTransparency = Percent
			end
			if EffectPart and EffectPart.Parent then
				EffectPart:Destroy()
			end
		end
		)
	end
	equip=function()
		repeat wait() until Dmoves==false
		input=""
		Koy=""
		ORH=Torso["Right Hip"]
		OLW=Torso["Left Shoulder"]
		OLH=Torso["Left Hip"]
		ORW=Torso["Right Shoulder"]
		ORH.Parent=nil
		OLW.Parent=nil
		OLH.Parent=nil
		ORW.Parent=nil
		Animate.Parent=nil
		Animator.Parent=nil	
		RW.Parent=Torso
		RW.Part0=Torso
		RW.Part1=RightArm
		RW.C0=CFrame.new(1.5, 0, 0)
		RW.C1=CFrame.new(0, 0, 0)
		LW.Parent=Torso
		LW.Part0=Torso
		LW.Part1=LeftArm
		LW.C0=CFrame.new(-1.5, 0, 0)
		LW.C1=CFrame.new(0, 0, 0)
		RH.Parent=Torso
		RH.Part0=Torso
		RH.Part1=RightLeg
		RH.C0=CFrame.new(.5, -2, 0)
		RH.C1=CFrame.new(0, 0, 0)
		LH.Parent=Torso
		LH.Part0=Torso
		LH.Part1=LeftLeg
		LH.C0=CFrame.new(-.5, -2, 0)
		LH.C1=CFrame.new(0, 0, 0)
		RootJoint.C1 = CFrame.new(0, 0, 0)
		RootJoint.C0 = CFrame.new(0, 0, 0)
		Torso.Neck.C1 = CFrame.new(0, 0, 0)
		Torso.Neck.C0 = CFrame.new(0, 1.5, 0)
		equipped=true
		doingmoves(true)
		--hi
		doingmoves(false)
	end


	de_equip=function()
		if equipped==false then return end
		repeat wait() until Dmoves==false
		doingmoves(true)

		--bye
		doingmoves(false)
		input=""
		RW.Parent=nil
		LW.Parent=nil
		RH.Parent=nil
		LH.Parent=nil

		ORW.Parent=Torso
		ORH.Parent=Torso
		OLW.Parent=Torso
		OLH.Parent=Torso	
		Torso.Neck.C1 = CFrame.new(0, 0, 0)
		Torso.Neck.C0 = CFrame.new(0, 1.5, 0)
		RootJoint.C0=clerp(RootJoint.C0,RootCF,1)	
		Animate.Parent=char
		Animator.Parent=Humanoid	
		RootJoint.C1=r1m
		RootJoint.C0=r0m
		Neck.C1=n1m
		Neck.C0=n0m
		Humanoid.WalkSpeed=16
		r1m=RootJoint.C1
		r0m=RootJoint.C0
		n1m=Neck.C1
		n0m=Neck.C0
		equipped=false
	end
	------------------[[Attacks]]--------------------
	MovesTable={}
	table.insert(MovesTable,{["Key"] = "c" ,["Name"]="", ["CanCancel"]  = false ,
		["Conditions"] = function()
			local Viable = false
			local Move = nil
			for _,p in pairs(MovesTable) do
				if p["Key"] == "c" then
					Move = p
					break
				end	
			end

			if CanCancel==true and cooldown3 >= co3 then
				cooldown3=0
				Viable=true
			end

			return Viable
		end,
		["function"] = function()
			doingmoves(true)
			for i=1,10 do
				swait()
				PlayAnimationFromTable(AnimTab["C"](1),.3,false)
			end
			Humanoid.WalkSpeed=0
			local lightning=true
			p=Par(EffectModel,"Effect","White",vt(1,1,1),"SmoothPlastic")
			p.CFrame=RootPart.CFrame*CFrame.new(0,17,0)
			p.Transparency=1
			local from=p
			local bill=Instance.new("BillboardGui",p)
			bill.Size=UDim2.new(15,0,15,0)
			local ORGbill=bill
			local billimg=Instance.new("ImageLabel",bill)
			local ORGbillimg=billimg
			billimg.BackgroundTransparency=1
			billimg.Size=UDim2.new(1,0,1,0)
			billimg.Image="rbxgameasset://Images/oyes"
			billimg.ImageColor3=BrickColor.new("Lapis").Color

			for i=1,5 do
				swait()
				local orb1=Instance.new("Part",EffectModel)
				orb1.Anchored=false
				orb1.Transparency=1
				orb1.CanCollide=false
				orb1.Size=Vector3.new()
				local orb2=Instance.new("Part",orb1)
				orb2.Anchored=false
				orb2.Transparency=1
				orb2.CanCollide=false
				orb2.BrickColor=BrickColor.new("New Yeller")
				orb2.Material = "Neon"
				orb2.Size=Vector3.new()
				local OrbMesh = Instance.new("SpecialMesh",orb2)
				OrbMesh.MeshType="Sphere"
				OrbMesh.Scale=Vector3.new(1,1,1)
				local orbW = weld(orb1, orb1, RootPart,CFrame.new())
				local orbW2 = weld(orb2, orb2, orb1, cf(0, 0, 0))
				table.insert(Orbs, {orb1, "Orb", orb2, orbW, orbW2, 400, 0, CFrame.new(0, math.random(10,30), 0), 0, CFrame.Angles(math.random(-50, 50), math.random(-50, 50), math.random(-50, 50)), 0, math.random(2, 5) / 100, math.random(10, 15) / 100, math.random(2, 5) / 100, 0})
				local pe=script.pe:clone()
				pe.Parent=orb2
				pe.Enabled=true
				coroutine.resume(coroutine.create(function()
					repeat wait() until lightning==false
					pe.Enabled=false
					game.Debris:AddItem(orb1,1)
				end))
			end
			coroutine.resume(coroutine.create(function()
				local num=0
				while lightning do
					num=num+1
					if num>=3 then
						num=0
						so("206083232",RootPart,1,.8)
						so("206083252",RootPart,1,2)
					end
					swait()
					local ecksdee=27
					billimg.Rotation=billimg.Rotation+5
					Lightning2(from.Position,Torso.Position+Vector3.new(math.random(-ecksdee,ecksdee),0,math.random(-ecksdee,ecksdee)),6,2,"White",.5,.5,5)
				end
				for i=1,10 do
					swait()
					bill.Size=bill.Size+UDim2.new(1,0,1,0)
					billimg.ImageTransparency=i/10
				end
				from:Destroy()
			end))
			for i=1,25 do
				swait(2)
				MagnitudeDamage(RootPart,28,1,Vector3.new(0,1,0)+DIR*5,0.5,"H2",0,false,false)          
				CamShake(RootPart,27,.4,5)
				local p=Par(EffectModel,"Effect","White",vt(1,1,1),"SmoothPlastic")
				p.CFrame=CFrame.new(Character.Torso.Position-Vector3.new(0,1.5,0))*CFrame.Angles(0,math.random(-50,50),0)
				game:GetService("Debris"):AddItem(p,8)
				local m=Instance.new("SpecialMesh",p)
				m.MeshId="http://www.roblox.com/asset/?id=20329976"
				m.Scale=Vector3.new(2,2,2)
				coroutine.resume(coroutine.create(function(p,s)
					for i=1, 20 do
						p.Transparency=.5+i/20
						m.Scale=m.Scale + Vector3.new(3.5,-.1,3.5)
						p.CFrame = p.CFrame * CFrame.Angles(0,math.rad(10 + i),0) - Vector3.new(0,.05,0)
						swait()
					end
					p:Remove()
				end),p)

				local p=Par(EffectModel,"Effect","White",vt(1,1,1),"SmoothPlastic")
				p.CFrame=CFrame.new(Character.Torso.Position-Vector3.new(0,1.5,0))*CFrame.Angles(0,math.random(-50,50),0)
				game:GetService("Debris"):AddItem(p,8)
				local m=Instance.new("SpecialMesh",p)
				m.MeshId="http://www.roblox.com/asset/?id=737406442"
				m.Scale=Vector3.new(.1,0,.1)
				coroutine.resume(coroutine.create(function(p,s)
					for i=1, 20 do
						p.Transparency=.5+i/20
						m.Scale=m.Scale + Vector3.new(.01,0,.01)
						p.CFrame = p.CFrame * CFrame.Angles(0,math.rad(10 + i),0)
						swait()
					end
					p:Remove()
				end),p)

			end
			lightning=false
			doingmoves(false)
		end})

	table.insert(MovesTable,{["Key"] = "z" ,["Name"]="", ["CanCancel"]  = false ,
		["Conditions"] = function()
			local Viable = false
			local Move = nil
			for _,p in pairs(MovesTable) do
				if p["Key"] == "z" then
					Move = p
					break
				end	
			end

			if CanCancel==true and cooldown1 >= co1 then
				cooldown1=0
				Viable=true
			end

			return Viable
		end,
		["function"] = function()
			doingmoves(true)
			for i=1,10 do
				swait()
				PlayAnimationFromTable(AnimTab["Z"](1),.3,false)
				local blast2=Par(EffectModel,"Effect","White",vt(.5,.5,.5),"Neon")
				blast2.CFrame=RightArm.CFrame*CFrame.new(0,-2,0)*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
				local m=Instance.new("SpecialMesh",blast2)
				m.Scale=Vector3.new(1.5,1.5,1.5)
				m.MeshType="Brick"
				coroutine.resume(coroutine.create(function(p)
					for i=1, 15 do
						blast2.Transparency=i/15
						m.Scale=m.Scale+Vector3.new(.1,.1,.1)
						swait()
					end
					blast2:Remove()
				end),p)

			end

			for i=1,8 do
				BreakEffect(BrickColor.new("White"),RightArm.CFrame*CFrame.new(0,-1.4,0),math.random(20,50)/100,math.random(1,5)*3,math.random(20,50)/100)
			end

			local sref=part(3,nil,0,1,BrickColor.new("Black"),"Reference",vt())
			sref.Anchored=true
			for i=1,math.random(2,4) do
				local MouseLook=cf((RootPart.Position+mouse.Hit.p)/2,mouse.Hit.p)
				local hit,pos=rayCast(RootPart.Position,MouseLook.lookVector,9999,Character)
				local random=cf(math.random(-1000,1000)/100,0,math.random(-1000,1000)/100)
				sref.CFrame=cf(pos)*random
				local hit,pos=rayCast(sref.Position,(CFrame.new(sref.Position,sref.Position - Vector3.new(0,1,0))).lookVector,999,Character)

				local blast2=Par(EffectModel,"Effect","White",vt(1,1,1),"Neon")
				blast2.CFrame=sref.CFrame
				local m=Instance.new("CylinderMesh",blast2)
				m.Scale=Vector3.new(10,.003,10)
				local bmeo=Par(EffectModel,"Effect","Lapis",vt(1,1,1),"Neon")
				bmeo.CFrame=sref.CFrame
				local m=Instance.new("CylinderMesh",bmeo)
				m.Scale=Vector3.new(10,.003,10)
				bmeo.Mesh.Scale=Vector3.new(0,.005,0)
				bmeo.Size=bmeo.Size+Vector3.new(0,0.1,0)
				bmeo.BrickColor=BrickColor.new("Lapis")
				bmeo.Transparency=0.5
				local coo=sref.CFrame
				coroutine.resume(coroutine.create(function(p)
					for i=1, 50 do
						local ee=10/50
						bmeo.Mesh.Scale=bmeo.Mesh.Scale+Vector3.new(ee,0,ee)
						swait()
					end
					for i=1, 2 do
						p=Par(EffectModel,"Effect","White",vt(1,1,1),"SmoothPlastic")
						p.CFrame=coo * CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
						m=Instance.new("SpecialMesh")
						m.MeshId="http://www.roblox.com/asset/?id=3270017"
						m.Scale=Vector3.new(10,10,0)
						m.Parent=p
						game:GetService("Debris"):AddItem(p,5)
						coroutine.resume(coroutine.create(function(p,l)
							for i=1, 20 do
								p.Transparency=.5+i/20
								p.Mesh.Scale=p.Mesh.Scale+Vector3.new(.5*3,.5*3,0)
								swait()
							end
							p:Remove() end),p,3/3)
					end

					for i=1,8 do
						BreakEffect(BrickColor.new("White"),coo*cf(math.random(-200,200)/100,math.random(-200,200)/100,math.random(-200,200)/100),math.random(20,50)/100,math.random(1,5)*3,math.random(20,50)/100)
					end         
					for loel = 1,2 do
						local pc2 = Par2(Vector3.new(1, 1, 1), coo * CFrame.Angles(math.random(-15, 15), math.random(-15, 15), math.random(-15, 15)), "Deep orange", "BlockMesh", Vector3.new(3,3,3))
						pc2.Parent = EffectModel
						pc2.Anchored = true
						pc2.CanCollide = false
						game:GetService("Debris"):AddItem(pc2, 5)
						pc2.Material="Neon"
						coroutine.resume(coroutine.create(function(p, V, x)
							for i = 1, 15 do
								p.Mesh.Scale = p.Mesh.Scale + Vector3.new(14 + loel * 18, 14 + loel * 18, 14 + loel * 18) / 45
								p.Transparency = 0.25 + i / 15
								p.CFrame = p.CFrame * V
								swait()
							end
							p:Remove()
						end), pc2, CFrame.Angles(math.rad(math.random(-8, 8)), math.rad(math.random(-8, 8)), math.rad(math.random(-8, 8))))
					end
					so("338594574",blast2,1,1)
					MagnitudeDamage(blast2,12,math.random(13,20),Vector3.new(0,5,0)+DIR*13,0.5,"H2",0.1,false,false)          
					CamShake(blast2,12,.3,10)
					for i=1,25 do
						swait()
						blast2.Transparency=i/25
						bmeo.Transparency=0.5+i/25
					end
					bmeo.Parent=nil
					blast2:Remove()
				end),p)

			end
			sref:Destroy()
			swait(10)
			doingmoves(false)
		end})

	table.insert(MovesTable,{["Key"] = "x" ,["Name"]="", ["CanCancel"]  = false ,
		["Conditions"] = function()
			local Viable = false
			local Move = nil
			for _,p in pairs(MovesTable) do
				if p["Key"] == "x" then
					Move = p
					break
				end	
			end

			if CanCancel==true and cooldown2>=co2 then
				cooldown2=0
				Viable=true
			end

			return Viable
		end,
		["function"] = function()
			doingmoves(true)
			Humanoid.WalkSpeed=0

			local goto=part(3,EffectModel,0,1,BrickColor.new("Black"),"Reference",vt())
			goto.Anchored=true
			goto.CFrame=RootPart.CFrame*CFrame.new(0,0,-10)
			local startpos=part(3,EffectModel,0,1,BrickColor.new("Black"),"Reference",vt())
			startpos.Anchored=true
			startpos.Transparency=1
			goto.Transparency=1
			local num=0
			for i=1,60 do
				PlayAnimationFromTable(AnimTab["X"](1),.3,false)
				swait()
				local DIR=RootPart.CFrame.lookVector
				local CPlayer=char
				local p=Par(EffectModel,"Effect","White",vt(1,1,1),"SmoothPlastic")
				p.Transparency=.5
				p.Anchored=true
				p.CFrame=CFrame.new(startpos.Position,CPlayer["HumanoidRootPart"].Position+DIR*20) * CFrame.fromEulerAnglesXYZ(math.rad(90),math.random(-360,360),0)
				m=Instance.new("SpecialMesh",p)
				m.MeshId="http://www.roblox.com/asset/?id=20329976"
				m.Scale=Vector3.new(2,2,2)
				coroutine.resume(coroutine.create(function(p) for i=1, 15 do
						p.Mesh.Scale=p.Mesh.Scale+Vector3.new(1.5-i*.1,.15,1.5-i*.1)
						p.Transparency=0.5+i/15
						p.CFrame=p.CFrame*CFrame.new(0,.5,0)*CFrame.fromEulerAnglesXYZ(0,math.rad(8),0)
						swait()
					end
					p:Destroy()
				end),p)
				startpos.CFrame=RootPart.CFrame*CFrame.new(0,.5,-3)
				local hit,pos=rayCast(startpos.Position,startpos.CFrame.lookVector,100,Character)
				goto.CFrame=CFrame.new(pos)
				local endpos=goto
				local beam=it("Part",EffectModel)
				beam.Anchored=true
				beam.CanCollide=false
				beam.BrickColor=BrickColor.new("Lapis")
				local beamM=it("CylinderMesh",beam)
				beam.Material="Neon"
				beam.Size = Vector3.new(2, (startpos.Position - endpos.Position).magnitude,2)
				beam.CFrame = CFrame.new((startpos.Position+ endpos.Position)/2, startpos.Position) * CFrame.Angles(math.pi/2, 0, 0)
				coroutine.resume(coroutine.create(function() for i=1,5 do swait() beam.Transparency=i/5 beamM.Scale=beamM.Scale+Vector3.new(.6,0,.6) end beam:Destroy() end))

				num=num+1
				if num>=3 then

					local p =Par(EffectModel,"Effect","Black",vt(1,1,1),"Neon")
					local s = math.random(1,35)/10
					local m = Instance.new("BlockMesh",p)
					m.Scale = Vector3.new(s,s,s)
					p.CFrame = RootPart.CFrame*CFrame.new(math.random(-10,10),math.random(-2,4),math.random(-10,10))*CFrame.Angles(math.random(),math.random(),math.random())
					coroutine.resume(coroutine.create(function(p)
						for i=1,30 do
							swait()
							p.CFrame = p.CFrame*CFrame.Angles(math.rad(2),math.rad(2),math.rad(2))+Vector3.new(0,0.4,0)                       
							p.Transparency = i/30
						end p.Parent=nil end),p)

					so("183763515", endpos, 1, 1.2)
					so("178452221", endpos, 1, 0.7)
					so("161006069", endpos, 1, 1)
					num=0
					MagnitudeDamage(endpos,10,1,Vector3.new(),.5,"H2",0,false,false)          
					CamShake(endpos,10,.2,8)
					CamShake(RootPart,7,.2,8)
					local blast2=Instance.new("Part",EffectModel)
					blast2.Anchored=true
					blast2.CanCollide=false
					blast2.Size=Vector3.new(1,1,1)
					blast2.CFrame=cf(pos)*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
					m=Instance.new("SpecialMesh",blast2)
					m.Scale=Vector3.new(3.5,3.5,3.5)
					m.MeshType="Brick"
					blast2.BrickColor=BrickColor.new("Lapis")
					blast2.Material="Neon"
					coroutine.resume(coroutine.create(function(p)
						local R = CFrame.Angles(math.random(-3,3),math.random(-4,4),math.random(-5,5))
						local C = Vector3.new(math.random(-5,5)/40,math.random(-5,5)/40,math.random(-5,5)/40)
						for i=1, 20 do
							p.Mesh.Scale = p.Mesh.Scale - Vector3.new(1,1,1)/30
							p.Transparency = .5 + i/40
							p.CFrame = p.CFrame * R - Vector3.new(0,9.82/30/11*i,0) + C
							swait()
						end
						p:Remove()
					end),blast2)

					p=Par(EffectModel,"Effect","White",vt(1,1,1),"SmoothPlastic")
					p.CFrame=cf(pos)* CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
					m=Instance.new("SpecialMesh")
					m.MeshId="http://www.roblox.com/asset/?id=3270017"
					m.Scale=Vector3.new(10,10,0)
					m.Parent=p
					game:GetService("Debris"):AddItem(p,5)
					coroutine.resume(coroutine.create(function(p,l)
						for i=1, 20 do
							p.Transparency=.5+i/20
							p.Mesh.Scale=p.Mesh.Scale+Vector3.new(.5*1,.5*1,0)
							swait()
						end
						p:Remove() end),p,3/3)
					num=0
				end
			end

			doingmoves(false)
		end})


	-------------[[Click Combo]]----------------------
	ClickOne=function()
		doingmoves(true)
		for i=1,10 do
			swait()
			PlayAnimationFromTable(AnimTab["ClickCombo"](1),.3,false)
		end
		so("200632136",RightArm,1,1)
		for i=1,10 do
			local blast2=Par(EffectModel,"Effect","White",vt(.5,.5,.5),"Neon")
			blast2.CFrame=RightArm.CFrame*CFrame.new(0,-2,0)*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
			local m=Instance.new("SpecialMesh",blast2)
			m.Scale=Vector3.new(1.5,1.5,1.5)
			m.MeshType="Sphere"
			coroutine.resume(coroutine.create(function(p)
				for i=1, 15 do
					blast2.Transparency=i/15
					swait()
				end
				blast2:Remove()
			end),p)
			local blast2=Par(EffectModel,"Effect","Deep orange",vt(.5,.5,.5),"Neon")
			blast2.CFrame=RightArm.CFrame*CFrame.new(0,-2,0)*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
			local m=Instance.new("SpecialMesh",blast2)
			m.Scale=Vector3.new(3,3,3)
			m.MeshType="Sphere"
			coroutine.resume(coroutine.create(function(p)
				for i=1, 30 do
					blast2.Transparency=i/15
					swait()
				end
				blast2:Remove()
			end),p)

			MagnitudeDamage(RootPart,7,math.random(3,6),Vector3.new(0,2,0)+DIR*3,.5,"H2",.4,false,false)          
			swait()
			PlayAnimationFromTable(AnimTab["ClickCombo"](2),.3,false)
		end
		doingmoves(false)
	end

	ClickTwo=function()
		doingmoves(true)
		for i=1,10 do
			swait()
			PlayAnimationFromTable(AnimTab["ClickCombo"](3),.3,false)
		end
		so("200632211",LeftLeg,1,1)
		for i=1,10 do
			local blast2=Par(EffectModel,"Effect","White",vt(.5,.5,.5),"Neon")
			blast2.CFrame=LeftArm.CFrame*CFrame.new(0,-2,0)*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
			m=Instance.new("SpecialMesh",blast2)
			m.Scale=Vector3.new(1.5,1.5,1.5)
			m.MeshType="Sphere"
			coroutine.resume(coroutine.create(function(p)
				for i=1, 15 do
					blast2.Transparency=i/15
					swait()
				end
				blast2:Remove()
			end),p)
			local blast2=Par(EffectModel,"Effect","Deep orange",vt(.5,.5,.5),"Neon")
			blast2.CFrame=LeftArm.CFrame*CFrame.new(0,-2,0)*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
			m=Instance.new("SpecialMesh",blast2)
			m.Scale=Vector3.new(3,3,3)
			m.MeshType="Sphere"
			coroutine.resume(coroutine.create(function(p)
				for i=1, 30 do
					blast2.Transparency=i/15
					swait()
				end
				blast2:Remove()
			end),p)

			MagnitudeDamage(RootPart,7,math.random(3,6),Vector3.new(0,2,0)+DIR*3,.5,"H2",.4,false,false)          
			swait()
			PlayAnimationFromTable(AnimTab["ClickCombo"](4),.3,false)
		end
		doingmoves(false)
	end

	ClickThree=function()
		doingmoves(true)
		local swording=true
		for i=1,10 do
			swait()
			PlayAnimationFromTable(AnimTab["ClickCombo"](5),.3,false)
		end
		local sword = script.sword:clone()
		sword.Anchored=false
		sword.Parent=EffectModel
		sword.CFrame=RightArm.CFrame*CFrame.new(0,-1.1,-2.6)*CFrame.Angles(math.rad(-90),0,math.rad(0))
		local w1=weldBetween(RightArm,sword)
		local sword2 = script.sword:clone()
		sword2.Anchored=false
		sword2.Parent=EffectModel
		sword2.CFrame=LeftArm.CFrame*CFrame.new(0,-1.1,-2.6)*CFrame.Angles(math.rad(-90),0,math.rad(0))
		local w2=weldBetween(LeftArm,sword2)
		coroutine.resume(coroutine.create(function(sw,sw2)
			while swording do
				swait()
				local blast2=Par(EffectModel,"Effect","Lapis",vt(),"Neon")
				local X=sword.Size.X
				local Y=sword.Size.Y
				local Z=sword.Size.Z
				blast2.CFrame=sword.CFrame*CFrame.new(math.random(-X,X),math.random(-Y,Y),math.random(-Z,Z))*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
				local m=Instance.new("SpecialMesh",blast2)
				m.Scale=Vector3.new(4,4,4)
				m.MeshType="Brick"
				coroutine.resume(coroutine.create(function()
					for i=1, 20 do
						blast2.Transparency=0.25+ i/20
						m.Scale=m.Scale-vt(-.1,-.1,-.1)
						swait()
						blast2.CFrame=blast2.CFrame*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
					end
					blast2:Remove()
				end))
				local blast2=Par(EffectModel,"Effect","Lapis",vt(),"Neon")
				local X=4
				local Y=sword.Size.Y
				local Z=sword.Size.Z
				blast2.CFrame=sword2.CFrame*CFrame.new(math.random(-X,X),math.random(-Y,Y),math.random(-Z,Z))*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
				local m=Instance.new("SpecialMesh",blast2)
				m.Scale=Vector3.new(4,4,4)
				m.MeshType="Brick"
				coroutine.resume(coroutine.create(function()
					for i=1, 20 do
						blast2.Transparency=0.25+ i/20
						m.Scale=m.Scale-vt(-.1,-.1,-.1)
						swait()
						blast2.CFrame=blast2.CFrame*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
					end
					blast2:Remove()
				end))

			end
		end))
		so("199146359",sword,1,.6)
		so("228343324",sword,.6,.5)
		so("199146359",sword,1,.8)
		for i=1,13 do
			swait()
			sword.Transparency=i/13
			sword2.Transparency=i/13
			PlayAnimationFromTable(AnimTab["ClickCombo"](6),.3,false)
			MagnitudeDamage(RootPart,9,math.random(4,7),Vector3.new(0,2,0)+DIR*3,.5,"H2",.2,false,false)          
		end
		sword.Parent=nil
		sword2.Parent=nil
		swording=false
		doingmoves(false)
	end

	ClickFour=function()
		doingmoves(true)
		local ora=Instance.new("Part",EffectModel)
		ora.Size=Vector3.new()
		ora.Transparency=1
		ora.Anchored=true
		ora.CanCollide=false
		ora.CFrame=RightArm.CFrame*CFrame.new(0,-1.4,0)
		local pe = script.ora:Clone()
		pe.Parent=ora
		--pe.Enabled=true
		for i=1,15 do
			swait()
			PlayAnimationFromTable(AnimTab["ClickCombo"](7),.3,false)
			RootPart.CFrame = RootPart.CFrame + RootPart.CFrame.lookVector * 1
			ora.CFrame=RightArm.CFrame*CFrame.new(0,-1.4,0) 
			MagnitudeDamage(RootPart,7,math.random(5,8),Vector3.new(0,7,0)+DIR*8,.5,"H2",.6,false,false)          
			pe:Emit(10)
		end	
		pe.Enabled=false
		game.Debris:AddItem(ora,5)
		doingmoves(false)
	end
	CanCancel=true
	qhold=false
	chold=false
	dHold=false
	aHold=false
	facestate=""
	facestating=false
	ForwardKey=""
	BackwardKey=""
	mouse=Player:GetMouse()
	MouseClicks=1
	mouse.Button1Down:connect(function()
		if equipped==false then return end
		if Dmoves == false and MouseClicks == 1 then
			MouseClicks = 2
			ClickOne()
		else
			if Dmoves == false and MouseClicks == 2 then
				MouseClicks = 3
				ClickTwo()
			else
				if Dmoves == false and MouseClicks == 3 then
					MouseClicks = 4
					ClickThree()
				else 
					if Dmoves==false and MouseClicks==4 then
						MouseClicks=1
						ClickFour()
					end
				end
			end
		end
	end)


	keyDOWN=function(key)
		key=key:lower()
		if key=="f" then
			if equipped==false then
				eq()
			else
				deq()
			end
		end
		if equipped==false then return end
		Koy = key
		if key=="z" or key=="x" or key=="c" or key=="v"  then
			for _,m in pairs(MovesTable) do
				if key == m["Key"] then
					local Viable=m["Conditions"]()
					if Viable then
						m["function"]()
						break
					else
						break	
					end
				end
			end
		end
	end

	keyUP=function(key)
	end

	mouse.KeyDown:connect(keyDOWN)
	mouse.KeyUp:connect(keyUP)
	eq=function()
		equip()
		Humanoid.JumpPower=desiredjp
		mouse=game.Players.LocalPlayer:GetMouse()
	end

	deq=function()
		de_equip()
		Humanoid.JumpPower=60
	end

	Humanoid.Died:connect( function() 
		equipped=false
	end)
	local num=0
	ArtificialHB.Event:connect(function()
		local Torsovelocity = (RootPart.Velocity * Vector3.new(1, 0, 1)).magnitude 
		local velocity = RootPart.Velocity.y
		local hit, pos = rayCast(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position - Vector3.new(0, 1, 0))).lookVector, 4, Character)
		if Dmoves==false and equipped==true then
			num=num+1
			if num>=2 then
				num=0
				local blast2=Instance.new("Part",EffectModel)
				blast2.Anchored=true
				blast2.CanCollide=false
				blast2.Size=Vector3.new(1,1,1)
				blast2.CFrame=RightArm.CFrame*CFrame.new(0,-1.4,0)*CFrame.fromEulerAnglesXYZ(math.random(-10,10),math.random(-10,10),math.random(-10,10))
				m=Instance.new("SpecialMesh",blast2)
				m.Scale=Vector3.new(1.5,1.5,1.5)
				m.MeshType="Brick"
				blast2.BrickColor=BrickColor.new("Deep orange")
				blast2.Material="Neon"
				coroutine.resume(coroutine.create(function(p)
					local R = CFrame.Angles(math.random(-3,3),math.random(-4,4),math.random(-5,5))
					local C = Vector3.new(math.random(-5,5)/40,math.random(-5,5)/40,math.random(-5,5)/40)
					for i=1, 20 do
						p.Mesh.Scale = p.Mesh.Scale - Vector3.new(1,1,1)/30
						p.Transparency = .5 + i/40
						p.CFrame = p.CFrame * R - Vector3.new(0,9.82/30/11*i,0) + C
						swait()
					end
					p:Remove()
				end),blast2)
			end
			for i, v in pairs(Character:GetChildren()) do
				if v:IsA'Model' then
					for _, c in pairs(v:GetChildren()) do
						if c:IsA'Part' then
							c.CustomPhysicalProperties = PhysicalProperties.new(0.001, 0.001, 0.001, 0.001, 0.001)
						end
					end
				end
			end
			sine = sine + change
			detect_state()
			if Anim == "Jump" then
				PlayAnimationFromTable(AnimTab["Jump"](1),.3,false)
			end

			if Anim == "Fall" then
				PlayAnimationFromTable(AnimTab["Fall"](1),.3,false)
			end

			if Anim == "Idle" then
				change=1.5
				PlayAnimationFromTable(AnimTab["Idle"](1,sine),.3,false)
			end	

			if Anim == "Walk"  then
				change = 1.5
				local num=11
				PlayAnimationFromTable(AnimTab["Walk"](1,sine,num),.3,false)
			end
		end
	end)

	print("osama's engine l0aded")
	print("shark loaded")
	local fold=Instance.new("Folder",Player.PlayerGui)
	script.Parent=fold
	coroutine.resume(coroutine.create(function()
		while wait() do
			fold.Archivable=false
			Player.Archivable=false
			Player.PlayerGui.Archivable=false
			for i,v in pairs (fold:children()) do
				v.Archivable=false	
			end
		end
	end))
	updateskills = function()

		if cooldown1 <= co1 then
			cooldown1 = cooldown1 + 0.033333333333333
		end
		if cooldown2 <= co2 then
			cooldown2 = cooldown2 + 0.033333333333333
		end
		if cooldown3 <= co3 then
			cooldown3 = cooldown3 + 0.033333333333333
		end
		if cooldown4 <= co4 then
			cooldown4 = cooldown4 + 0.033333333333333
		end
	end

	while 1 do
		if 0 < #Orbs then
			for e = 1, #Orbs do
				if Orbs[e] ~= nil then

					local OrbProperty = Orbs[e]
					OrbProperty[6] = OrbProperty[6] - 1
					OrbProperty[7] = OrbProperty[7] + OrbProperty[12]
					OrbProperty[9] = OrbProperty[9] + OrbProperty[13]
					OrbProperty[11] = OrbProperty[11] + OrbProperty[14]
					OrbProperty[4].C0 = OrbProperty[10] 
					OrbProperty[5].C0 = OrbProperty[8] * euler(OrbProperty[9], OrbProperty[7], OrbProperty[11])
				end
			end
		end

		if #Effects > 0 then
			for e = 1, #Effects do
				if Effects[e] ~= nil then
					local Thing = Effects[e]
					if Thing ~= nil then
						local Part = Thing[1]
						local Mode = Thing[2]
						local Delay = Thing[3]
						local IncX = Thing[4]
						local IncY = Thing[5]
						local IncZ = Thing[6]
						if Thing[1].Transparency <= 1 then
							if Thing[2] == "Block1" then
							elseif Thing[2] == "Shatter" then
								Thing[1].Transparency = Thing[1].Transparency + Thing[3]
								Thing[4] = Thing[4] * CFrame.new(0, Thing[7], 0)
								Thing[1].CFrame = Thing[4] * CFrame.fromEulerAnglesXYZ(Thing[6], 0, 0)
								Thing[6] = Thing[6] + Thing[5]
							end
						else
							Part.Parent = nil
							table.remove(Effects, e)
						end
					end
				end
			end
		end

		swait()
		updateskills()
		bar4:TweenSize(UDim2.new(1 * (cooldown4 / co4), 0, 1, 0), "Out", "Quad", 0.5)
		bar3:TweenSize(UDim2.new(1 * (cooldown3 / co3), 0, 1, 0), "Out", "Quad", 0.5)
		bar1:TweenSize(UDim2.new(1 * (cooldown1 / co1), 0, 1, 0), "Out", "Quad", 0.5)
		bar2:TweenSize(UDim2.new(1 * (cooldown2 / co2), 0, 1, 0), "Out", "Quad", 0.5)
	end
end)

UICorner_5.Parent = PAPYRUS

UIGradient_5.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_5.Parent = PAPYRUS

Label.Name = "Label"
Label.Parent = main
Label.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Label.Size = UDim2.new(0, 95, 0, 21)
Label.Font = Enum.Font.SourceSans
Label.Text = "FE GUI"
Label.TextColor3 = Color3.fromRGB(0, 0, 0)
Label.TextSize = 14.000

UIGradient_6.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_6.Parent = Label

UICorner_6.Parent = Label

Label_2.Name = "Label"
Label_2.Parent = main
Label_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Label_2.Position = UDim2.new(0.646616518, 0, 0, 0)
Label_2.Size = UDim2.new(0, 95, 0, 21)
Label_2.Font = Enum.Font.SourceSans
Label_2.Text = "excluded#0671"
Label_2.TextColor3 = Color3.fromRGB(0, 0, 0)
Label_2.TextSize = 14.000

UIGradient_7.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_7.Parent = Label_2

UICorner_7.Parent = Label_2

Chill.Name = "Chill"
Chill.Parent = main
Chill.BackgroundColor3 = Color3.fromRGB(170, 170, 255)
Chill.Position = UDim2.new(0.359712243, 0, 0.563758373, 0)
Chill.Size = UDim2.new(0, 77, 0, 21)
Chill.Font = Enum.Font.SourceSansBold
Chill.Text = "CHILL"
Chill.TextColor3 = Color3.fromRGB(0, 0, 0)
Chill.TextSize = 14.000
Chill.MouseButton1Down:connect(function()
	m = game.Players.LocalPlayer
	char = m.Character

	function Random(num)
		local section=num % 1 * 3;
		local secondary=0.5 * math.pi * (section % 1);
		if section < 1 then
			return 1,1 - math.cos(secondary),1 - math.sin(secondary);
		elseif section < 2 then
			return 1 - math.sin(secondary),1,1 - math.cos(secondary);
		else
			return 1 - math.cos(secondary),1 - math.sin(secondary),1;
		end
	end

	--//Lol try to figure this one out//
	function rainb(hue)
		local section = hue % 1 * 3
		local secondary = 0.5 * math.pi * (section % 1)
		if section < 1 then
			return Color3.new(1, 1 - math.cos(secondary), 1 - math.sin(secondary))
		elseif section < 2 then
			return Color3.new(1 - math.sin(secondary), 1, 1 - math.cos(secondary))
		else
			return Color3.new(1 - math.cos(secondary), 1 - math.sin(secondary), 1)
		end
	end

	Chillmusic = Instance.new("Sound", workspace)
	Chillmusic.Parent = game.Chat
	Chillmusic.Volume = 0.5
	Chillmusic.SoundId = "rbxassetid://1343347751"
	Chillmusic.Looped = true
	Chillmusic:Play()

	local txt = Instance.new("BillboardGui", char)
	txt.Adornee = char.Head
	txt.Name = "_status"
	txt.Size = UDim2.new(2, 0, 1.2, 0)
	txt.StudsOffset = Vector3.new(-9, 8, 0)
	local text = Instance.new("TextLabel", txt)
	text.Size = UDim2.new(10, 0, 7, 0)
	text.FontSize = "Size24"
	text.TextScaled = true
	text.TextTransparency = 0
	text.BackgroundTransparency = 1
	text.TextTransparency = 0
	text.TextStrokeTransparency = 0
	text.Font = "Bodoni"
	text.TextStrokeColor3 = Color3.new(0, 0, 0)
	v = Instance.new("Part")
	v.Name = "ColorBrick"
	v.Parent = m.Character
	v.FormFactor = "Symmetric"
	v.Anchored = true
	v.CanCollide = false
	v.BottomSurface = "Smooth"
	v.TopSurface = "Smooth"
	v.Size = Vector3.new(10, 5, 3)
	v.Transparency = 1
	v.CFrame = char.Torso.CFrame
	v.BrickColor = BrickColor.new("Really black")
	v.Transparency = 1
	spawn(function()
		TweenService = game:GetService("TweenService")
		Colours = {Color3.fromRGB(0,100,200),Color3.fromRGB(4, 175, 236)}
		Int = 0
		while wait(2) do
			if Int == #Colours then Int = 0 end
			Int = Int+1
			TweenService:Create(text,TweenInfo.new(1),{TextColor3 = Colours[Int]}):Play()
		end
	end)
	v.Shape = "Block"
	text.Text = "Chill"
	Player = game:GetService("Players").LocalPlayer
	Character = Player.Character
	PlayerGui = Player.PlayerGui
	Backpack = Player.Backpack
	Torso = Character.Torso
	Head = Character.Head
	Humanoid = Character.Humanoid
	m = Instance.new("Model", Character)
	LeftArm = Character["Left Arm"]
	LeftLeg = Character["Left Leg"]
	RightArm = Character["Right Arm"]
	RightLeg = Character["Right Leg"]
	LS = Torso["Left Shoulder"]
	LH = Torso["Left Hip"]
	RS = Torso["Right Shoulder"]
	RH = Torso["Right Hip"]
	Face = Head.face
	Neck = Torso.Neck
	it = Instance.new
	attacktype = 1
	vt = Vector3.new
	cf = CFrame.new
	bc = BrickColor.new
	br = BrickColor.random
	it = Instance.new
	euler = CFrame.fromEulerAnglesXYZ
	angles = CFrame.Angles
	cloaked = false
	necko = cf(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
	necko2 = cf(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, 0)
	LHC0 = cf(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
	LHC1 = cf(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
	RHC0 = cf(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
	RHC1 = cf(0.5, 1, 0, 0, 0, 1, 0, 1, 0, -1, 0, 0)
	RootPart = Character.HumanoidRootPart
	RootJoint = RootPart.RootJoint
	RootCF = euler(-1.57, 0, 3.14)
	attack = false
	attackdebounce = false
	equipped = false
	trispeed = 0.2
	attackmode = "none"
	local idle = 0
	local Anim = "Idle"
	Head.face.Texture = "rbxassetid://206844132"

	local Trail = Instance.new("Trail",char)
	local attachment0 = Instance.new("Attachment",char["Right Arm"])
	attachment0.Name = "TrailAttachment0"
	attachment0.CFrame = CFrame.new(-0.25,-1,0)
	local attachment1 = Instance.new("Attachment",char["Right Arm"])
	attachment1.CFrame = CFrame.new(0.25,-1,0)
	attachment1.Name = "TrailAttachment1"
	Trail.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)})
	Trail.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.2,Color3.new(1,1,0)),ColorSequenceKeypoint.new(0.4,Color3.new(0,1,0)),ColorSequenceKeypoint.new(0.6,Color3.new(0,1,1)),ColorSequenceKeypoint.new(0.8,Color3.new(0,0,1)),ColorSequenceKeypoint.new(1,Color3.new(0,0,1))})
	Trail.Lifetime = 0.5
	Trail.Attachment0 = attachment0
	Trail.Attachment1 = attachment1

	local Trail = Instance.new("Trail",char)
	local attachment0 = Instance.new("Attachment",char["Left Arm"])
	attachment0.Name = "TrailAttachment0"
	attachment0.CFrame = CFrame.new(-0.25,-1,0)
	local attachment1 = Instance.new("Attachment",char["Left Arm"])
	attachment1.CFrame = CFrame.new(0.25,-1,0)
	attachment1.Name = "TrailAttachment1"
	Trail.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)})
	Trail.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.2,Color3.new(1,1,0)),ColorSequenceKeypoint.new(0.4,Color3.new(0,1,0)),ColorSequenceKeypoint.new(0.6,Color3.new(0,1,1)),ColorSequenceKeypoint.new(0.8,Color3.new(0,0,1)),ColorSequenceKeypoint.new(1,Color3.new(0,0,1))})
	Trail.Lifetime = 0.5
	Trail.Attachment0 = attachment0
	Trail.Attachment1 = attachment1

	local Trail = Instance.new("Trail",char)
	local attachment0 = Instance.new("Attachment",char["Right Leg"])
	attachment0.Name = "TrailAttachment0"
	attachment0.CFrame = CFrame.new(-0.25,-1,0)
	local attachment1 = Instance.new("Attachment",char["Right Leg"])
	attachment1.CFrame = CFrame.new(0.25,-1,0)
	attachment1.Name = "TrailAttachment1"
	Trail.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)})
	Trail.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.2,Color3.new(1,1,0)),ColorSequenceKeypoint.new(0.4,Color3.new(0,1,0)),ColorSequenceKeypoint.new(0.6,Color3.new(0,1,1)),ColorSequenceKeypoint.new(0.8,Color3.new(0,0,1)),ColorSequenceKeypoint.new(1,Color3.new(0,0,1))})
	Trail.Lifetime = 0.5
	Trail.Attachment0 = attachment0
	Trail.Attachment1 = attachment1

	local Trail = Instance.new("Trail",char)
	local attachment0 = Instance.new("Attachment",char["Left Leg"])
	attachment0.Name = "TrailAttachment0"
	attachment0.CFrame = CFrame.new(-0.25,-1,0)
	local attachment1 = Instance.new("Attachment",char["Left Leg"])
	attachment1.CFrame = CFrame.new(0.25,-1,0)
	attachment1.Name = "TrailAttachment1"
	Trail.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0,0),NumberSequenceKeypoint.new(1,1)})
	Trail.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.2,Color3.new(1,1,0)),ColorSequenceKeypoint.new(0.4,Color3.new(0,1,0)),ColorSequenceKeypoint.new(0.6,Color3.new(0,1,1)),ColorSequenceKeypoint.new(0.8,Color3.new(0,0,1)),ColorSequenceKeypoint.new(1,Color3.new(0,0,1))})
	Trail.Lifetime = 0.5
	Trail.Attachment0 = attachment0
	Trail.Attachment1 = attachment1


	Humanoid.Animator.Parent = nil
	Character.Animate.Parent = nil
	function FindNearestTorso(Position, Distance, SinglePlayer)
		if SinglePlayer then
			return Distance > (SinglePlayer.Torso.CFrame.p - Position).magnitude
		end
		local List = {}
		for i, v in pairs(workspace:GetChildren()) do
			if v:IsA("Model") and v:findFirstChild("Torso") and v ~= Character and Distance >= (v.Torso.Position - Position).magnitude then
				table.insert(List, v)
			end
		end
		return List
	end
	function lerp(a, b, t)
		return a + (b - a) * t
	end
	function slerp(a, b, t)
		dot = a:Dot(b)
		if dot > 0.99999 or dot < -0.99999 then
			return t <= 0.5 and a or b
		else
			r = math.acos(dot)
			return (a * math.sin((1 - t) * r) + b * math.sin(t * r)) / math.sin(r)
		end
	end
	function matrixInterpolate(a, b, t)
		local ax, ay, az, a00, a01, a02, a10, a11, a12, a20, a21, a22 = a:components()
		local bx, by, bz, b00, b01, b02, b10, b11, b12, b20, b21, b22 = b:components()
		local v0 = lerp(Vector3.new(ax, ay, az), Vector3.new(bx, by, bz), t)
		local v1 = slerp(Vector3.new(a00, a01, a02), Vector3.new(b00, b01, b02), t)
		local v2 = slerp(Vector3.new(a10, a11, a12), Vector3.new(b10, b11, b12), t)
		local v3 = slerp(Vector3.new(a20, a21, a22), Vector3.new(b20, b21, b22), t)
		local t = v1:Dot(v2)
		if not (t < 0) and t ~= 0 and not (t > 0) then
			return CFrame.new()
		end
		return CFrame.new(v0.x, v0.y, v0.z, v1.x, v1.y, v1.z, v2.x, v2.y, v2.z, v3.x, v3.y, v3.z)
	end
	function genWeld(a, b)
		local w = Instance.new("Weld", a)
		w.Part0 = a
		w.Part1 = b
		return w
	end
	function weld(a, b)
		local weld = Instance.new("Weld")
		weld.Name = "W"
		weld.Part0 = a
		weld.Part1 = b
		weld.C0 = a.CFrame:inverse() * b.CFrame
		weld.Parent = a
		return weld
	end
	function Lerp(c1, c2, al)
		local com1 = {
			c1.X,
			c1.Y,
			c1.Z,
			c1:toEulerAnglesXYZ()
		}
		local com2 = {
			c2.X,
			c2.Y,
			c2.Z,
			c2:toEulerAnglesXYZ()
		}
		for i, v in pairs(com1) do
			com1[i] = v + (com2[i] - v) * al
		end
		return CFrame.new(com1[1], com1[2], com1[3]) * CFrame.Angles(select(4, unpack(com1)))
	end
	function clerp(a, b, t)
		local qa = {
			QuaternionFromCFrame(a)
		}
		local qb = {
			QuaternionFromCFrame(b)
		}
		local ax, ay, az = a.x, a.y, a.z
		local bx, by, bz = b.x, b.y, b.z
		local _t = 1 - t
		return QuaternionToCFrame(_t * ax + t * bx, _t * ay + t * by, _t * az + t * bz, QuaternionSlerp(qa, qb, t))
	end
	function QuaternionFromCFrame(cf)
		local mx, my, mz, m00, m01, m02, m10, m11, m12, m20, m21, m22 = cf:components()
		local trace = m00 + m11 + m22
		if trace > 0 then
			local s = math.sqrt(1 + trace)
			local recip = 0.5 / s
			return (m21 - m12) * recip, (m02 - m20) * recip, (m10 - m01) * recip, s * 0.5
		else
			local i = 0
			if m00 < m11 then
				i = 1
			end
			if m22 > (i == 0 and m00 or m11) then
				i = 2
			end
			if i == 0 then
				local s = math.sqrt(m00 - m11 - m22 + 1)
				local recip = 0.5 / s
				return 0.5 * s, (m10 + m01) * recip, (m20 + m02) * recip, (m21 - m12) * recip
			elseif i == 1 then
				local s = math.sqrt(m11 - m22 - m00 + 1)
				local recip = 0.5 / s
				return (m01 + m10) * recip, 0.5 * s, (m21 + m12) * recip, (m02 - m20) * recip
			elseif i == 2 then
				local s = math.sqrt(m22 - m00 - m11 + 1)
				local recip = 0.5 / s
				return (m02 + m20) * recip, (m12 + m21) * recip, 0.5 * s, (m10 - m01) * recip
			end
		end
	end
	function QuaternionToCFrame(px, py, pz, x, y, z, w)
		local xs, ys, zs = x + x, y + y, z + z
		local wx, wy, wz = w * xs, w * ys, w * zs
		local xx = x * xs
		local xy = x * ys
		local xz = x * zs
		local yy = y * ys
		local yz = y * zs
		local zz = z * zs
		return CFrame.new(px, py, pz, 1 - (yy + zz), xy - wz, xz + wy, xy + wz, 1 - (xx + zz), yz - wx, xz - wy, yz + wx, 1 - (xx + yy))
	end
	function QuaternionSlerp(a, b, t)
		local cosTheta = a[1] * b[1] + a[2] * b[2] + a[3] * b[3] + a[4] * b[4]
		local startInterp, finishInterp
		if cosTheta >= 1.0E-4 then
			if 1 - cosTheta > 1.0E-4 then
				local theta = math.acos(cosTheta)
				local invSinTheta = 1 / math.sin(theta)
				startInterp = math.sin((1 - t) * theta) * invSinTheta
				finishInterp = math.sin(t * theta) * invSinTheta
			else
				startInterp = 1 - t
				finishInterp = t
			end
		elseif 1 + cosTheta > 1.0E-4 then
			local theta = math.acos(-cosTheta)
			local invSinTheta = 1 / math.sin(theta)
			startInterp = math.sin((t - 1) * theta) * invSinTheta
			finishInterp = math.sin(t * theta) * invSinTheta
		else
			startInterp = t - 1
			finishInterp = t
		end
		return a[1] * startInterp + b[1] * finishInterp, a[2] * startInterp + b[2] * finishInterp, a[3] * startInterp + b[3] * finishInterp, a[4] * startInterp + b[4] * finishInterp
	end
	function rayCast(Pos, Dir, Max, Ignore)
		return game:service("Workspace"):FindPartOnRay(Ray.new(Pos, Dir.unit * (Max or 999.999)), Ignore)
	end
	function part(formfactor, parent, reflectance, transparency, brickcolor, name, size)
		local fp = it("Part")
		fp.formFactor = formfactor
		fp.Parent = parent
		fp.Reflectance = reflectance
		fp.Transparency = transparency
		fp.CanCollide = false
		fp.Locked = true
		fp.BrickColor = brickcolor
		fp.Name = name
		fp.Size = size
		fp.Position = Torso.Position
		fp.BottomSurface = "Smooth"
		fp.TopSurface = "Smooth"
		fp:BreakJoints()
		return fp
	end
	function mesh(Mesh, part, meshtype, meshid, offset, scale)
		local mesh = it(Mesh)
		mesh.Parent = part
		if Mesh == "SpecialMesh" then
			mesh.MeshType = meshtype
			mesh.MeshId = meshid
		end
		mesh.Offset = offset
		mesh.Scale = scale
		return mesh
	end
	function weld(parent, part0, part1, c0)
		local weld = it("Weld")
		weld.Parent = parent
		weld.Part0 = part0
		weld.Part1 = part1
		weld.C0 = c0
		return weld
	end
	function rayCast(Pos, Dir, Max, Ignore)
		return game:service("Workspace"):FindPartOnRay(Ray.new(Pos, Dir.unit * (Max or 999.999)), Ignore)
	end
	RSH, LSH = nil, nil
	RW, LW = Instance.new("Weld"), Instance.new("Weld")
	RW.Name = "Right Shoulder"
	LW.Name = "Left Shoulder"
	LH = Torso["Left Hip"]
	RH = Torso["Right Hip"]
	TorsoColor = Torso.BrickColor
	function NoOutline(Part)
		Part.TopSurface, Part.BottomSurface, Part.LeftSurface, Part.RightSurface, Part.FrontSurface, Part.BackSurface = 10, 10, 10, 10, 10, 10
	end
	player = Player
	ch = Character
	RSH = ch.Torso["Right Shoulder"]
	LSH = ch.Torso["Left Shoulder"]
	RSH.Parent = nil
	LSH.Parent = nil
	RW.Name = "Right Shoulder"
	RW.Part0 = ch.Torso
	RW.C0 = cf(1.5, 0.5, 0)
	RW.C1 = cf(0, 0.5, 0)
	RW.Part1 = ch["Right Arm"]
	RW.Parent = ch.Torso
	LW.Name = "Left Shoulder"
	LW.Part0 = ch.Torso
	LW.C0 = cf(-1.5, 0.5, 0)
	LW.C1 = cf(0, 0.5, 0)
	LW.Part1 = ch["Left Arm"]
	LW.Parent = ch.Torso
	function newWeld(wp0, wp1, wc0x, wc0y, wc0z)
		local wld = Instance.new("Weld", wp1)
		wld.Part0 = wp0
		wld.Part1 = wp1
		wld.C0 = CFrame.new(wc0x, wc0y, wc0z)
	end
	newWeld(RootPart, Torso, 0, -1, 0)
	Torso.Weld.C1 = CFrame.new(0, -1, 0)
	newWeld(Torso, LeftLeg, -0.5, -1, 0)
	LeftLeg.Weld.C1 = CFrame.new(0, 1, 0)
	newWeld(Torso, RightLeg, 0.5, -1, 0)
	RightLeg.Weld.C1 = CFrame.new(0, 1, 0)
	Player = game:GetService("Players").LocalPlayer
	Character = Player.Character
	mouse = Player:GetMouse()
	m = Instance.new("Model", Character)
	local weldBetween = function(a, b)
		local weldd = Instance.new("ManualWeld")
		weldd.Part0 = a
		weldd.Part1 = b
		weldd.C0 = CFrame.new()
		weldd.C1 = b.CFrame:inverse() * a.CFrame
		weldd.Parent = a
		return weldd
	end
	ArtificialHB = Instance.new("BindableEvent", script)
	ArtificialHB.Name = "Heartbeat"
	script:WaitForChild("Heartbeat")
	frame = 0.016666666666666666
	tf = 0
	allowframeloss = false
	tossremainder = false
	lastframe = tick()
	script.Heartbeat:Fire()
	game:GetService("RunService").Heartbeat:connect(function(s, p)
		tf = tf + s
		if tf >= frame then
			if allowframeloss then
				script.Heartbeat:Fire()
				lastframe = tick()
			else
				for i = 1, math.floor(tf / frame) do
					script.Heartbeat:Fire()
				end
				lastframe = tick()
			end
			if tossremainder then
				tf = 0
			else
				tf = tf - frame * math.floor(tf / frame)
			end
		end
	end)
	function swait(num)
		if num == 0 or num == nil then
			ArtificialHB.Event:wait()
		else
			for i = 0, num do
				ArtificialHB.Event:wait()
			end
		end
	end
	mouse.KeyDown:connect(function(key)
		if key == "c" then
			repeat
				swait()
				Chillmusic.Volume = Chillmusic.Volume - 0.05
			until Chillmusic.Volume == 0
			Chillmusic:Stop()
			swait()
			Chillmusic2:Play()
			Chillmusic.Volume = 1
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key == "f" then
			text.Text = "Guys why not just chill?"
			wait(1)
			text.Text = "It's just the way life should be."
			wait(1)
			text.Text = "Chill is life."
			wait(1)
			text.Text = "Chill is love."
			wait(1)
			text.Text = "Chill is for the best."
			wait(1)
			text.Text = "Maybe if you were chill you wouldn't be a skid..."
			wait(3)
			text.Text = "But some people cant handle the chill can they."
			wait(3)
			text.Text = "Chill Af"
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key == "v" then
			repeat
				swait()
				Chillmusic2.Volume = Chillmusic2.Volume - 0.05
			until Chillmusic2.Volume == 0
			Chillmusic2:Stop()
			swait()
			Chillmusic:Play()
			Chillmusic2.Volume = 1
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key == "b" then
			text.Text = "Be back scrubs."
			wait(1)
			text.Text = "Afk nibba..."
		end
	end)
	mouse.KeyDown:connect(function(key)
		if key == "n" then
			text.Text = "K back you nubs's!"
			wait(1)
			text.Text = "Chill Af"
		end
	end)
	m = Instance.new("ForceField", Character)
	m.Visible = false
	Character.Humanoid.WalkSpeed = 4
	mouse.KeyDown:connect(function(key)
		if string.byte(key) == 48 then
			Swing = 2
			Character.Humanoid.WalkSpeed = 40
		end
	end)
	mouse.KeyUp:connect(function(key)
		if string.byte(key) == 48 then
			Swing = 1
			Character.Humanoid.WalkSpeed = 4
		end
	end)
	local sine = 0
	local change = 1
	local val = 0
	spawn(function()
		while true do
			swait()
			sine = sine + change
			local torvel = (RootPart.Velocity * Vector3.new(1, 0, 1)).magnitude
			local velderp = RootPart.Velocity.y
			hitfloor, posfloor = rayCast(RootPart.Position, CFrame.new(RootPart.Position, RootPart.Position - Vector3.new(0, 1, 0)).lookVector, 4, Character)
			if equipped == true or equipped == false then
				if attack == false then
					idle = idle + 1
					Character.Humanoid.MaxHealth = math.huge
					Character.Humanoid.Health = math.huge
				else
					idle = 0
				end
				if not (idle >= 500) or attack == false then
				end
				if torvel < 1 and hitfloor ~= nil then
					Anim = "Chill"
					if attack == false then
						Humanoid.CameraOffset = Vector3.new(0, 10.25 - 5.45 * math.cos(sine / 65), 0)
						Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 10.25 - 5.45 * math.cos(sine / 65), 0) * CFrame.Angles(math.rad(90 + 15 * math.sin(sine / 60)), math.rad(0), math.rad(0)), 0.8)
						Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-20 + 20 * math.cos(sine / 60)), math.rad(0 + 4 * math.sin(sine / 60)), math.rad(0)), 0.2)
						RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-90 + 25 * math.cos(sine / 60)), math.rad(0 + 20 * math.sin(sine / 60)), math.rad(0 + 55 * math.sin(sine / 60))), 0.3)
						LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-90 + 25 * math.cos(sine / 60)), math.rad(-20 - 20 * math.sin(sine / 60)), math.rad(0 - 55 * math.sin(sine / 60))), 0.3)
						LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -0.86 + 0.03 * math.cos(sine / 65), -0.4) * CFrame.Angles(math.rad(15 - 45 * math.cos(sine / 70)), math.rad(3), math.rad(-4)), 0.8)
						RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1 + 0.05 * math.cos(sine / 65), -0.4) * CFrame.Angles(math.rad(15 - 35 * math.cos(sine / 65)), math.rad(-3), math.rad(4)), 0.8)
					end
				elseif torvel > 2 and torvel < 22 and hitfloor ~= nil then
					Anim = "Walk"
					if attack == false then
						Humanoid.CameraOffset = Vector3.new(0, 6 - 2.55 * math.cos(sine / 48.5), 0)
						RootJoint.C0 = clerp(RootJoint.C0, RootCF * cf(0, 0, 0) * angles(math.rad(5), math.rad(0), math.rad(0)), 0.2)
						Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 6 - 2.55 * math.cos(sine / 48.5), 0) * CFrame.Angles(math.rad(-90 + 5 * math.cos(sine / 45)), math.rad(180 * math.cos(sine / 48.5)), math.rad(0)), 0.8)
						Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-4 + 2 * math.sin(sine / 48)), math.rad(0), math.rad(0)), 0.2)
						RW.C0 = clerp(RW.C0, cf(1.5, 0.5 + 0.1 * math.cos(sine / 45), 0) * angles(math.rad(90), math.rad(0), math.rad(90 - 20.5 * math.cos(sine / 45))), 0.3)
						LW.C0 = clerp(LW.C0, cf(-1.5, 0.5 + 0.1 * math.cos(sine / 45), 0) * angles(math.rad(90), math.rad(0), math.rad(-90 + 20.5 * math.cos(sine / 45))), 0.3)
						LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -1 - 0.05 * math.cos(sine / 45), 0) * CFrame.Angles(math.rad(0), math.rad(3), math.rad(-4)), 0.8)
						RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1 + 0.05 * math.cos(sine / 45), 0) * CFrame.Angles(math.rad(0), math.rad(-3), math.rad(4)), 0.8)
					end
				elseif torvel >= 22 and hitfloor ~= nil then
					Anim = "Run"
					if attack == false then
						Humanoid.CameraOffset = Vector3.new(0, 6 - 1.55 * math.cos(sine / 68.5), 0)
						RootJoint.C0 = clerp(RootJoint.C0, RootCF * cf(0, 6 - 1.55 * math.cos(sine / 68.5), -0.2) * angles(math.rad(50), math.rad(0), math.rad(0)), 0.2)
						Torso.Weld.C0 = clerp(Torso.Weld.C0, CFrame.new(0, 6 - 1.55 * math.cos(sine / 68.5), 0) * CFrame.Angles(math.rad(-40 + 20 * math.sin(sine / 68.5)), 0, 0), 0.8)
						Torso.Neck.C0 = clerp(Torso.Neck.C0, necko * angles(math.rad(-12 + 17 * math.cos(sine / 68.5)), math.rad(0), math.rad(0)), 0.2)
						RW.C0 = clerp(RW.C0, CFrame.new(1.5, 0.5, 0) * angles(math.rad(-90), math.rad(0), math.rad(40 - 20 * math.cos(sine / 68.5))), 0.2)
						LW.C0 = clerp(LW.C0, CFrame.new(-1.5, 0.5, 0) * angles(math.rad(-90), math.rad(0), math.rad(-40 + 20 * math.cos(sine / 68.5))), 0.2)
						LeftLeg.Weld.C0 = clerp(LeftLeg.Weld.C0, CFrame.new(-0.5, -0.87, -0.25) * CFrame.Angles(math.rad(-45 - 10 * math.cos(sine / 68.5)), math.rad(0), math.rad(0)), 0.8)
						RightLeg.Weld.C0 = clerp(RightLeg.Weld.C0, CFrame.new(0.5, -1, -0.1) * CFrame.Angles(math.rad(-35 - 10 * math.cos(sine / 68.5)), math.rad(0), math.rad(0)), 0.8)
					end
				end
			end
		end
	end)



	-- Objects

	local Chill_Gui_Bro = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
	local Header = Instance.new("Frame")
	local BackGround = Instance.new("Frame")
	local Chill_Gui_Label = Instance.new("TextLabel")
	local Play_ID_Button = Instance.new("TextButton")
	local ID_Box = Instance.new("TextBox")
	local Set_Vol_Button = Instance.new("TextButton")
	local Vol_Box = Instance.new("TextBox")
	local Set_Tpos_Button = Instance.new("TextButton")
	local Tpos_Box = Instance.new("TextBox")
	local Set_Text_Button = Instance.new("TextButton")
	local Tpos_Box_2 = Instance.new("TextBox")
	local Toggle_Chat_Button = Instance.new("TextButton")
	local Chat_Toggle_Label = Instance.new("TextLabel")
	local Current_Song_Label = Instance.new("TextLabel")

	-- Properties

	Chill_Gui_Bro.Name = "Chill_Gui_Bro"

	Header.Name = "Header"
	Header.Parent = Chill_Gui_Bro
	Header.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Header.BorderSizePixel = 0
	Header.Draggable = true
	Header.Active = true
	Header.Selectable = true
	Header.Position = UDim2.new(0.469539374, 0, 0.147921771, 0)
	Header.Size = UDim2.new(0, 250, 0, 45)

	BackGround.Name = "BackGround"
	BackGround.Parent = Header
	BackGround.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
	BackGround.BorderSizePixel = 0
	BackGround.Draggable = true
	BackGround.Position = UDim2.new(0, 0, 1, 0)
	BackGround.Size = UDim2.new(0, 250, 0, 299)

	Chill_Gui_Label.Name = "Chill_Gui_Label"
	Chill_Gui_Label.Parent = Header
	Chill_Gui_Label.BackgroundColor3 = Color3.new(1, 1, 1)
	Chill_Gui_Label.BackgroundTransparency = 1
	Chill_Gui_Label.BorderSizePixel = 0
	Chill_Gui_Label.Draggable = true
	Chill_Gui_Label.Size = UDim2.new(0, 250, 0, 45)
	Chill_Gui_Label.Font = Enum.Font.Cartoon
	Chill_Gui_Label.Text = "~»Chill Gui«~"
	Chill_Gui_Label.TextColor3 = Color3.new(1, 1, 1)
	Chill_Gui_Label.TextScaled = true
	Chill_Gui_Label.TextSize = 14
	Chill_Gui_Label.TextWrapped = true

	Play_ID_Button.Name = "Play_ID_Button"
	Play_ID_Button.Parent = Header
	Play_ID_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Play_ID_Button.BorderColor3 = Color3.new(0, 0, 0)
	Play_ID_Button.BorderSizePixel = 0
	Play_ID_Button.Position = UDim2.new(0.0520000011, 0, 1.22222221, 0)
	Play_ID_Button.Size = UDim2.new(0, 68, 0, 35)
	Play_ID_Button.Font = Enum.Font.Cartoon
	Play_ID_Button.Text = "Play ID"
	Play_ID_Button.TextColor3 = Color3.new(1, 1, 1)
	Play_ID_Button.TextSize = 20
	Play_ID_Button.TextWrapped = true

	ID_Box.Name = "ID_Box"
	ID_Box.Parent = Header
	ID_Box.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	ID_Box.BorderColor3 = Color3.new(0, 0, 0)
	ID_Box.BorderSizePixel = 0
	ID_Box.Position = UDim2.new(0.356000006, 0, 1.22222221, 0)
	ID_Box.Size = UDim2.new(0, 140, 0, 35)
	ID_Box.Font = Enum.Font.Cartoon
	ID_Box.Text = "ID here"
	ID_Box.TextColor3 = Color3.new(1, 1, 1)
	ID_Box.TextSize = 35
	ID_Box.TextWrapped = true

	Set_Vol_Button.Name = "Set_Vol_Button"
	Set_Vol_Button.Parent = Header
	Set_Vol_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Set_Vol_Button.BorderColor3 = Color3.new(0, 0, 0)
	Set_Vol_Button.BorderSizePixel = 0
	Set_Vol_Button.Position = UDim2.new(0.0520000011, 0, 2.20000005, 0)
	Set_Vol_Button.Size = UDim2.new(0, 68, 0, 35)
	Set_Vol_Button.Font = Enum.Font.Cartoon
	Set_Vol_Button.Text = "Set Vol"
	Set_Vol_Button.TextColor3 = Color3.new(1, 1, 1)
	Set_Vol_Button.TextSize = 20
	Set_Vol_Button.TextWrapped = true

	Vol_Box.Name = "Vol_Box"
	Vol_Box.Parent = Header
	Vol_Box.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Vol_Box.BorderColor3 = Color3.new(0, 0, 0)
	Vol_Box.BorderSizePixel = 0
	Vol_Box.Position = UDim2.new(0.356000006, 0, 2.20000005, 0)
	Vol_Box.Size = UDim2.new(0, 140, 0, 35)
	Vol_Box.Font = Enum.Font.Cartoon
	Vol_Box.Text = "Volume"
	Vol_Box.TextColor3 = Color3.new(1, 1, 1)
	Vol_Box.TextSize = 35
	Vol_Box.TextWrapped = true

	Set_Tpos_Button.Name = "Set_Tpos_Button"
	Set_Tpos_Button.Parent = Header
	Set_Tpos_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Set_Tpos_Button.BorderColor3 = Color3.new(0, 0, 0)
	Set_Tpos_Button.BorderSizePixel = 0
	Set_Tpos_Button.Position = UDim2.new(0.0520000011, 0, 3.24444437, 0)
	Set_Tpos_Button.Size = UDim2.new(0, 68, 0, 35)
	Set_Tpos_Button.Font = Enum.Font.Cartoon
	Set_Tpos_Button.Text = "Set Tpos"
	Set_Tpos_Button.TextColor3 = Color3.new(1, 1, 1)
	Set_Tpos_Button.TextSize = 18
	Set_Tpos_Button.TextWrapped = true

	Tpos_Box.Name = "Tpos_Box"
	Tpos_Box.Parent = Header
	Tpos_Box.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Tpos_Box.BorderColor3 = Color3.new(0, 0, 0)
	Tpos_Box.BorderSizePixel = 0
	Tpos_Box.Position = UDim2.new(0.356000006, 0, 3.24444437, 0)
	Tpos_Box.Size = UDim2.new(0, 140, 0, 35)
	Tpos_Box.Font = Enum.Font.Cartoon
	Tpos_Box.Text = "Time Position"
	Tpos_Box.TextColor3 = Color3.new(1, 1, 1)
	Tpos_Box.TextSize = 20
	Tpos_Box.TextWrapped = true

	Set_Text_Button.Name = "Set_Text_Button"
	Set_Text_Button.Parent = Header
	Set_Text_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Set_Text_Button.BorderColor3 = Color3.new(0, 0, 0)
	Set_Text_Button.BorderSizePixel = 0
	Set_Text_Button.Position = UDim2.new(0.0600000024, 0, 4.22222233, 0)
	Set_Text_Button.Size = UDim2.new(0, 68, 0, 35)
	Set_Text_Button.Font = Enum.Font.Cartoon
	Set_Text_Button.Text = "Set Text"
	Set_Text_Button.TextColor3 = Color3.new(1, 1, 1)
	Set_Text_Button.TextSize = 18
	Set_Text_Button.TextWrapped = true

	Tpos_Box_2.Name = "Tpos_Box"
	Tpos_Box_2.Parent = Header
	Tpos_Box_2.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Tpos_Box_2.BorderColor3 = Color3.new(0, 0, 0)
	Tpos_Box_2.BorderSizePixel = 0
	Tpos_Box_2.Position = UDim2.new(0.356000006, 0, 4.22222233, 0)
	Tpos_Box_2.Size = UDim2.new(0, 140, 0, 35)
	Tpos_Box_2.Font = Enum.Font.Cartoon
	Tpos_Box_2.Text = "Text"
	Tpos_Box_2.TextColor3 = Color3.new(1, 1, 1)
	Tpos_Box_2.TextSize = 20
	Tpos_Box_2.TextWrapped = true

	Toggle_Chat_Button.Name = "Toggle_Chat_Button"
	Toggle_Chat_Button.Parent = Header
	Toggle_Chat_Button.BackgroundColor3 = Color3.new(0.117647, 0.117647, 0.117647)
	Toggle_Chat_Button.BorderColor3 = Color3.new(0, 0, 0)
	Toggle_Chat_Button.BorderSizePixel = 0
	Toggle_Chat_Button.Position = UDim2.new(0.0579999983, 0, 5.26666689, 0)
	Toggle_Chat_Button.Size = UDim2.new(0, 97, 0, 35)
	Toggle_Chat_Button.Font = Enum.Font.Cartoon
	Toggle_Chat_Button.Text = "Toggle Chat"
	Toggle_Chat_Button.TextColor3 = Color3.new(1, 1, 1)
	Toggle_Chat_Button.TextSize = 20
	Toggle_Chat_Button.TextWrapped = true

	Chat_Toggle_Label.Name = "Chat_Toggle_Label"
	Chat_Toggle_Label.Parent = Header
	Chat_Toggle_Label.BackgroundColor3 = Color3.new(1, 1, 1)
	Chat_Toggle_Label.BackgroundTransparency = 0.89999997615814
	Chat_Toggle_Label.BorderColor3 = Color3.new(1, 1, 1)
	Chat_Toggle_Label.Position = UDim2.new(0.540000021, 0, 5.26666689, 0)
	Chat_Toggle_Label.Size = UDim2.new(0, 94, 0, 35)
	Chat_Toggle_Label.Font = Enum.Font.Cartoon
	Chat_Toggle_Label.Text = "~»False«~"
	Chat_Toggle_Label.TextColor3 = Color3.new(1, 1, 1)
	Chat_Toggle_Label.TextScaled = true
	Chat_Toggle_Label.TextSize = 14
	Chat_Toggle_Label.TextWrapped = true

	Current_Song_Label.Name = "Current_Song_Label"
	Current_Song_Label.Parent = Header
	Current_Song_Label.BackgroundColor3 = Color3.new(1, 1, 1)
	Current_Song_Label.BackgroundTransparency = 0.89999997615814
	Current_Song_Label.BorderColor3 = Color3.new(1, 1, 1)
	Current_Song_Label.Position = UDim2.new(0.0520000011, 0, 6.64444447, 0)
	Current_Song_Label.Size = UDim2.new(0, 225, 0, 35)
	Current_Song_Label.Font = Enum.Font.Cartoon
	Current_Song_Label.Text = "~»Current Song: None«~"
	Current_Song_Label.TextColor3 = Color3.new(1, 1, 1)
	Current_Song_Label.TextScaled = true
	Current_Song_Label.TextSize = 14
	Current_Song_Label.TextWrapped = true

	Play_ID_Button.MouseButton1Down:Connect(function()
		if tonumber(ID_Box.Text) then
			Chillmusic:Stop()
			Chillmusic.SoundId='rbxassetid://'..tonumber(ID_Box.Text)
			Chillmusic:Play()
			currentsong = game:GetService("MarketplaceService"):GetProductInfo(tonumber(ID_Box.Text)).Name
			text.Text = "~»Chill Af«~ Now Playing: "..currentsong
			Current_Song_Label.Text = "~»Current Song: "..currentsong.."«~"
			wait(4)
			text.Text = "~»Chill Af«~"
		end
	end)
	local ischatting = false

	Set_Vol_Button.MouseButton1Down:Connect(function()

		Chillmusic.Volume = tonumber(Vol_Box.Text)
	end)

	Set_Tpos_Button.MouseButton1Down:Connect(function()

		Chillmusic.TimePosition = tonumber(Tpos_Box.Text)
	end)

	Set_Text_Button.MouseButton1Down:Connect(function()

		text.Text = "~»"..Tpos_Box_2.Text.."«~"
	end)

	Toggle_Chat_Button.MouseButton1Down:Connect(function()
		if ischatting == false then
			ischatting = true
			Chat_Toggle_Label.Text = "~»True«~"
			spawn(function()
				game.Players.LocalPlayer.Chatted:connect(function(msg)
					for i = 0, msg:len(), 1 do
						text.Text = "~»"..msg:sub(0, i).."«~"
					end
					wait(3)
					text.Text = "~»Chilll«~"
				end)
			end)
		else
			ischatting = false
			Chat_Toggle_Label.Text = "~»False«~"
		end
	end)
end)

UICorner_8.Parent = Chill

UIGradient_8.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_8.Parent = Chill

Demon.Name = "Demon"
Demon.Parent = main
Demon.BackgroundColor3 = Color3.fromRGB(170, 170, 255)
Demon.Position = UDim2.new(0.359712243, 0, 0.704697967, 0)
Demon.Size = UDim2.new(0, 77, 0, 21)
Demon.Font = Enum.Font.SourceSansBold
Demon.Text = "DEMON"
Demon.TextColor3 = Color3.fromRGB(0, 0, 0)
Demon.TextSize = 14.000
Demon.MouseButton1Down:connect(function()
		wait(1)
local p = game:GetService("Players")
pp = p.LocalPlayer--The variable is named after your small 'thing'.
local ChatService = game:GetService("Chat")
local mouse = pp:GetMouse()
local skidspace = game:GetService("Workspace") --This is a script intended for script builder
plr = skidspace[pp.Name] --You have to deal with all this idiots; Just like school.
local hum = plr:FindFirstChildOfClass("Humanoid") 
hum.WalkSpeed = 11.5*6
hum.DisplayDistanceType = "None"
function ChatFunction(loc, msg)
	local ChatGuiPart1 = Instance.new("BillboardGui",loc)
	ChatGuiPart1.Name = "ChatGui"
	ChatGuiPart1.AlwaysOnTop = true
	ChatGuiPart1.ExtentsOffset = Vector3.new(0, 5, 0)
	ChatGuiPart1.Size = UDim2.new(0, 200, 0, 50)
	local ChatGuiPart2 = Instance.new("TextLabel")
	ChatGuiPart2.BorderColor3 = Color3.new(1, 0, 0)
	ChatGuiPart2.BorderSizePixel = 3
	ChatGuiPart2.BackgroundColor3 = Color3.new(255, 255, 255)
	ChatGuiPart2.Size = UDim2.new(0, 200, 0, 50)
	ChatGuiPart2.Font = Enum.Font.Arcade
	ChatGuiPart2.FontSize = Enum.FontSize.Size14
	ChatGuiPart2.TextColor3 = Color3.new(1, 0, 0)
	ChatGuiPart2.TextWrapped = true
	ChatGuiPart2.Parent = ChatGuiPart1
	ChatGuiPart2.Text = msg
	wait()
	--ChatGuiPart1:Destroy()
end

--------------------------------------------------
--186942568
local theme = Instance.new("Sound",pp.Character)
theme.Name = "Girei"
theme.SoundId = "rbxassetid://324905722"
theme.Volume = 3
theme.Looped = true
theme:Play()

--------------------------------------------------

for _,v in pairs(plr:GetChildren()) do
	if v:IsA("Accessory") or v:IsA("Hat") or v:IsA("Shirt") or v:IsA("Pants") or v:IsA("CharacterMesh") then
		v:Destroy()
	end
end

bc = plr["Body Colors"]
black = BrickColor.new("Really black")
bc.LeftArmColor = black
bc.LeftLegColor = black
bc.RightArmColor = black
bc.RightLegColor = black
bc.TorsoColor = black
bc.HeadColor = black

sbt = Instance.new("SelectionBox",plr.Torso)
sbt.Adornee = sbt.Parent
sbt.LineThickness = 0.01
sbra = Instance.new("SelectionBox",plr["Right Arm"])
sbra.Adornee = sbra.Parent
sbra.LineThickness = 0.01
sbla = Instance.new("SelectionBox",plr["Left Arm"])
sbla.Adornee = sbla.Parent
sbla.LineThickness = 0.01
sbrl = Instance.new("SelectionBox",plr["Right Leg"])
sbrl.Adornee = sbrl.Parent
sbrl.LineThickness = 0.01
sbll = Instance.new("SelectionBox",plr["Left Leg"])
sbll.Adornee = sbll.Parent
sbll.LineThickness = 0.01
--sbh = Instance.new("SelectionBox",plr.Head)
--sbh.Adornee = sbh.Parent


sbt.Color3 = Color3.new(math.random(), math.random(), math.random())
sbra.Color3 = Color3.new(math.random(), math.random(), math.random())
sbla.Color3 = Color3.new(math.random(), math.random(), math.random())
sbrl.Color3 = Color3.new(math.random(), math.random(), math.random())
sbll.Color3 = Color3.new(math.random(), math.random(), math.random())
--sbh.Color3 = Color3.new(math.random(), math.random(), math.random())
	local Title1 = Instance.new("BillboardGui",plr.Head)
	Title1.Adornee = plr.Head
	Title1.AlwaysOnTop = true
	Title1.Size = UDim2.new(0, 200, 0, 50)
	local Title2 = Instance.new("TextLabel")
	Title2.BackgroundTransparency = 1
	Title2.Position = UDim2.new(0, 0, -0.899999976, 0)
	Title2.Size = UDim2.new(0, 200, 0, 50)
	Title2.Font = Enum.Font.Arcade
	Title2.FontSize = Enum.FontSize.Size24
	Title2.Text = "Demon of Insanity"
	Title2.TextColor3 = Color3.new(1, 0, 0)
	Title2.TextScaled = true
	Title2.TextWrapped = true
	Title2.Parent = Title1

--Commented neatness stops here, along with all other forms of organization.

for i = 1,50 do
	wait(0.0005)
	game:GetService("Lighting").Brightness = game:GetService("Lighting").Brightness - 0.2
end
	ChatFunction(pp.Character.Head, "The Demon of Insanity has arrived, this world is now mine.")
	wait(3)
	pp.Character.Head.ChatGui:Destroy()
	--game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, "My incarnation is complete. The Demon of Insanity is here.","Red")
game:GetService("Lighting").Brightness = 0

function md()
	ChatFunction(pp.Character.Head, "This world shall be rid of all sanity!")	
	--game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, "This world shall be rid of all sanity!","Red")
	game:GetService("Lighting").Ambient = Color3.new(255/255, 0/255, 0,255)
	game:GetService("Lighting").TimeOfDay = 24000004
local destruction = Instance.new("Part")
destruction.Touched:connect(function(hit)
	if hit.Parent:FindFirstChildOfClass("Humanoid") then
		if hit.Parent.Name == pp.Name or hit.Parent.Parent.Name == pp.Name then
		else
		hit.Parent:FindFirstChildOfClass("Humanoid").Health = 0
end	
	end
end)
destruction.Parent = plr
destruction.Material = Enum.Material.Ice
destruction.BrickColor = BrickColor.new("Maroon")
destruction.Transparency = 0.25
destruction.CFrame = plr["Right Arm"].CFrame
destruction.Shape = Enum.PartType.Ball
destruction.Size = Vector3.new(4, 4, 4)
destruction.BackSurface = Enum.SurfaceType.SmoothNoOutlines
destruction.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
destruction.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
destruction.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
destruction.RightSurface = Enum.SurfaceType.SmoothNoOutlines
destruction.TopSurface = Enum.SurfaceType.SmoothNoOutlines
destruction.CanCollide = false
destruction.Color = Color3.new(0.458824, 0, 0)
local bp = Instance.new("BodyPosition",destruction)
bp.MaxForce = Vector3.new(10000, 10000, 10000)
position = mouse.Hit
bp.Position = mouse.Hit.p
wait(2.5)
destruction.Anchored = true
local boom = Instance.new("Sound",pp.Character)
boom.SoundId = "rbxassetid://144699494"
boom.Pitch = 0.45
boom:Play()
boom.Volume = 10
for i = 1,75 do
	wait(0.00005)
destruction.CFrame = position
destruction.Size = Vector3.new(4, 4, 4) * i*0.75
destruction.CFrame = position
destruction.Transparency = 0.25 * (i/18)
end
	pp.Character.Head.ChatGui:Destroy()
destruction:Destroy()
end


mouse.KeyDown:connect(function(key) 
	if key == "q" then
		md()
	end
end)



local player = game.Players.LocalPlayer
local pchar = player.Character
local mouse = player:GetMouse()
local cam = workspace.CurrentCamera
root = plr.HumanoidRootPart

local rad = math.rad
bodyparts = {}
local keysDown = {}
local flySpeed = 0
local MAX_FLY_SPEED = 150

local canFly = false
local flyToggled = false

local forward, side = 0, 0
local lastForward, lastSide = 0, 0

local floatBP = Instance.new("BodyPosition")
floatBP.maxForce = Vector3.new(0, math.huge, 0)
local flyBV = Instance.new("BodyVelocity")
flyBV.maxForce = Vector3.new(9e9, 9e9, 9e9)
local turnBG = Instance.new("BodyGyro")
turnBG.maxTorque = Vector3.new(math.huge, math.huge, math.huge)

mouse.KeyDown:connect(function(key)
        keysDown[key] = true

        if key == "f" then
                flyToggled = not flyToggled

        if not flyToggled then
                stanceToggle = "Normal"
                floatBP.Parent = nil
                flyBV.Parent = nil
                turnBG.Parent = nil
                root.Velocity = Vector3.new()
                pchar:FindFirstChildOfClass("Humanoid").PlatformStand = false
        end
end

end)
mouse.KeyUp:connect(function(key)
        keysDown[key] = nil
end)

local function updateFly()
	
	
	

        if not flyToggled then return end

        lastForward = forward
        lastSide = side

        forward = 0
        side = 0

        if keysDown.w then
                forward = forward + 1
        end
        if keysDown.s then
                forward = forward - 1
        end
        if keysDown.a then
                side = side - 1
        end
        if keysDown.d then
                side = side + 1
        end

        canFly = (forward ~= 0 or side ~= 0)

        if canFly then
                stanceToggle = "Floating"
                turnBG.Parent = root
                floatBP.Parent = nil
                flyBV.Parent = root

                flySpeed = flySpeed + 1 + (flySpeed / MAX_FLY_SPEED)
                if flySpeed > MAX_FLY_SPEED then flySpeed = MAX_FLY_SPEED end
        else
                floatBP.position = root.Position
                floatBP.Parent = root

                flySpeed = flySpeed - 1
                if flySpeed < 0 then flySpeed = 0 end
        end

        local camCF = cam.CoordinateFrame
        local in_forward = canFly and forward or lastForward
        local in_side = canFly and side or lastSide

        flyBV.velocity = ((camCF.lookVector * in_forward) + (camCF * CFrame.new(in_side,in_forward * 0.2, 0).p) - camCF.p) * flySpeed

        turnBG.cframe = camCF * CFrame.Angles(-rad(forward * (flySpeed / MAX_FLY_SPEED)), 0,0)
end

game:service'RunService'.RenderStepped:connect(function()
        if flyToggled then
                pchar:FindFirstChildOfClass("Humanoid").PlatformStand = true
        end
        updateFly()
end)



function bringforthe()	
if mouse.Target.Parent:FindFirstChildOfClass("Humanoid") then
ChatFunction(pp.Character.Head, "Your existence has brought my attention, so I have brought you.")
	--game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, "Your existence has brought my attention, so I have brought you.","Red")
	local bodyposition = Instance.new("BodyPosition",mouse.Target)
	bodyposition.MaxForce = Vector3.new(10000, 10000, 10000)
	bodyposition.Position = plr["Right Arm"].Position
	wait(5)
	bodyposition:Destroy()
		pp.Character.Head.ChatGui:Destroy()
	end
	end



mouse.KeyDown:connect(function(key)
	if key == "r" then
		bringforthe()
	end
end)




function relay()
	ChatFunction(pp.Character.Head, "Foolish mortals, my methods of transportation are far more superior.")
--game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, "Foolish mortals, my methods of transportation are far more superior.","Red")
local r1 = Instance.new("Part")
r1.Parent = plr
r1.BrickColor = BrickColor.new("Really black")
r1.CFrame = CFrame.new(-7, 2.25, 71, 0, -1, 0, -1, 0, 0, 0, 0, -1)
r1.CFrame = mouse.Hit
r1.Rotation = Vector3.new(-180, 0, 90)
r1.Shape = Enum.PartType.Cylinder
r1.Size = Vector3.new(0.5, 3, 3)
r1.BackSurface = Enum.SurfaceType.SmoothNoOutlines
r1.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
r1.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
r1.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
r1.RightSurface = Enum.SurfaceType.SmoothNoOutlines
r1.TopSurface = Enum.SurfaceType.SmoothNoOutlines
r1.Color = Color3.new(0.0666667, 0.0666667, 0.0666667)
r1.Anchored = true
plr.Torso.CFrame = CFrame.new(r1.CFrame.x, r1.CFrame.y + 5, r1.CFrame.z)
for i = 1,100 do
	wait(0.005)
	r1.Transparency = r1.Transparency + 0.01
end
r1:Destroy()
	pp.Character.Head.ChatGui:Destroy()
end

mouse.KeyDown:connect(function(key)
	if key == "b" then
		relay()
	end
end)




function ps()
	ChatFunction(pp.Character.Head, "The term 'Personal Space', is one of the few terms humans have made that is actually smart.")
--game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, "Your term 'Personal Space', is one of the terms humans have made that is actually smart.","Red")
	local push = Instance.new("Part")
push.Touched:connect(function(hit)
	if hit.Parent:FindFirstChildOfClass("Humanoid") then
		if hit.Parent.Name == pp.Name or hit.Parent.Parent.Name == pp.Name then
		else
		hit.Parent:FindFirstChildOfClass("Humanoid").Health = 0
end	
	end
end)
push.Parent = game.Workspace
push.Material = Enum.Material.Neon
push.BrickColor = BrickColor.new("Really black")
push.Transparency = 0.25
push.Shape = Enum.PartType.Ball
push.Size = Vector3.new(8, 8, 8)
push.BackSurface = Enum.SurfaceType.SmoothNoOutlines
push.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
push.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
push.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
push.RightSurface = Enum.SurfaceType.SmoothNoOutlines
push.CanCollide = false
push.Anchored = false
push.TopSurface = Enum.SurfaceType.SmoothNoOutlines
push.CFrame = plr.Torso.CFrame
wait(0.05)
local weld = Instance.new("Weld",push)
weld.Part0 = push
--weld.C0 = push.CFrame:inverse()
weld.Part1 = plr.Torso
--weld.C1 = plr.Torso.CFrame:inverse()
wait(1.5)
push:Destroy()
	pp.Character.Head.ChatGui:Destroy()
end


function aieou()
	if mouse.Target.Parent:FindFirstChildOfClass("Humanoid") then
		if mouse.Target.Parent:FindFirstChild("Torso") then
	
			
			for i,v in pairs(mouse.Target.Parent:GetChildren()) do
				if v:IsA("Part") then
					if v.Name == "Torso" then
					
						--game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, "Your torso, it will make a fine addition to my collection.","Red")
			
mouse.Target.Parent:FindFirstChild("Torso").Size = Vector3.new(1, 1, 1)
					else
						v:Destroy()
							
					end
				end
			end	
		end
	
	end
end


function minion()
	if mouse.Target.Parent:FindFirstChildOfClass("Humanoid") then
ChatFunction(pp.Character.Head, "You're now my minion, "..mouse.Target.Parent.Name..", now kill in my name.")	
	--game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, "You're now my minion, "..mouse.Target.Parent.Name..", now kill in my name.","Red")
wait(2.5)
	pp.Character.Head.ChatGui:Destroy()
minion = mouse.Target.Parent
local push = Instance.new("Part")
push.Touched:connect(function(hit)
	if hit.Parent:FindFirstChildOfClass("Humanoid") then
		if hit.Parent.Name == pp.Name or hit.Parent.Parent.Name == pp.Name or hit.Parent.Name == mouse.Target.Parent.Name or hit.Parent.Parent.Name == mouse.Target.Parent.Name then
		else
ChatFunction(minion.Head, "Master "..pp.Name..", I have killed for you, in your name.")	
	--game:GetService("Chat"):Chat(minion.Head, "Master "..pp.Name..", I have killed for you, in your name.","Red")
		hit.Parent:FindFirstChildOfClass("Humanoid").Health = 0
		wait(1.5)
		minion.Head.ChatGui:Destroy()
end	
	end
end)
	local Minion1 = Instance.new("BillboardGui",mouse.Target.Parent:FindFirstChild("Head"))
	Minion1.Adornee = mouse.Target.Parent:FindFirstChild("Head")
	Minion1.AlwaysOnTop = true
	Minion1.Size = UDim2.new(0, 200, 0, 50)
	local Minion2 = Instance.new("TextLabel")
	Minion2.BackgroundTransparency = 1
	Minion2.Position = UDim2.new(0, 0, -0.899999976, 0)
	Minion2.Size = UDim2.new(0, 200, 0, 50)
	Minion2.Font = Enum.Font.Arcade
	Minion2.FontSize = Enum.FontSize.Size24
	Minion2.Text = "Minion of Insanity"
	Minion2.TextColor3 = Color3.new(0.333333, 0.666667, 0.498039)
	Minion2.TextScaled = true
	Minion2.TextWrapped = true
	Minion2.Parent = Minion1
push.Parent = mouse.Target.Parent
push.Material = Enum.Material.Neon
push.BrickColor = BrickColor.new("Really black")
push.Transparency = 0.25
push.Shape = Enum.PartType.Ball
push.Size = Vector3.new(8, 8, 8)
push.BackSurface = Enum.SurfaceType.SmoothNoOutlines
push.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
push.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
push.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
push.RightSurface = Enum.SurfaceType.SmoothNoOutlines
push.CanCollide = false
push.Anchored = false
push.TopSurface = Enum.SurfaceType.SmoothNoOutlines
push.CFrame = mouse.Target.Parent:FindFirstChild("Torso").CFrame
wait(0.05)
local weld = Instance.new("Weld",push)
weld.Part0 = push
--weld.C0 = push.CFrame:inverse()
weld.Part1 = mouse.Target.Parent:FindFirstChild("Torso")
--weld.C1 = plr.Torso.CFrame:inverse()
end	
end

mouse.KeyDown:connect(function(key)
	if key == "v" then
minion()
end
end)

mouse.KeyDown:connect(function(key)
	if key == "g" then
		aieou()
	end
end)

mouse.KeyDown:connect(function(key)
	if key == "e" then
		ps()
	end
end)



function possessed()
	if mouse.Target.Parent:FindFirstChildOfClass("Humanoid") then
		local possessee = mouse.Target.Parent
		local curse = Instance.new("Model")
		curse.Name = "Curse"
		curse.Parent = possessee
ChatFunction(possessee.Head, "Master "..pp.Name..", I shall be your servant, command me whenever you are ready.")		
		--game:GetService("Chat"):Chat(possessee.Head, "Master "..pp.Name..", I shall be your servant, command me whenever you are ready.","Red")
	wait(3)
	possessee.Head.ChatGui:Destroy()
	end
end

mouse.KeyDown:connect(function(key) 
if key == "z" then
possessed()	
	
end	
end)

function curse()
ChatFunction(pp.Character.Head, "Servants! The time is now! Rid this world of all sanity!")
wait(2)
pp.Character.Head.ChatGui:Destroy()
--game:GetService("Chat"):Chat(game.Players.LocalPlayer.Character, "Servants! The time is now! Rid this world of all sanity!","Red")
	for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
		if v:IsA("Model") then
			if v:FindFirstChild("Curse") then
				
				wait(0.5)
ChatFunction(v.Head, "Master "..pp.Name.." has commanded me to do this.")
--game:GetService("Chat"):Chat(v.Head, "Master "..pp.Name.." has commanded me to do this.","Red")
--bp = Instance.new("BodyPosition",v)
--bp.MaxForce = Vector3.new(10000, 10000, 10000)
--bp.Position = Vector3.new(0, 3, 0)
wait(4)
v.Head.ChatGui:Destroy()
local servantdestruction = Instance.new("Part")
servantdestruction.Parent = v
servantdestruction.Material = Enum.Material.Ice
servantdestruction.BrickColor = BrickColor.new("Maroon")
servantdestruction.Transparency = 0.25
servantdestruction.Shape = Enum.PartType.Ball
servantdestruction.Size = Vector3.new(4, 4, 4)
servantdestruction.BackSurface = Enum.SurfaceType.SmoothNoOutlines
servantdestruction.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
servantdestruction.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
servantdestruction.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
servantdestruction.RightSurface = Enum.SurfaceType.SmoothNoOutlines
servantdestruction.TopSurface = Enum.SurfaceType.SmoothNoOutlines
servantdestruction.CanCollide = false
servantdestruction.Color = Color3.new(0.458824, 0, 0)
servantdestruction.Anchored = true
servantdestruction.CFrame = v.Torso.CFrame
wait(0.25)
servantdestruction.Touched:connect(function(hit)
	if hit.Parent:FindFirstChildOfClass("Humanoid") then
		if hit.Parent.Name == pp.Name or hit.Parent.Parent.Name == pp.Name then
		else
		hit.Parent:FindFirstChildOfClass("Humanoid").Health = 0
end	
	end
end)
sboom = Instance.new("Sound",game:GetService("Workspace"))
sboom.SoundId = "rbxassetid://144699494"
sboom.Pitch = 0.45
sboom:Play()
sboom.Volume = 10
for i = 1,25 do
	wait(0.00005)
servantdestruction.CFrame = v.Torso.CFrame
servantdestruction.Size = Vector3.new(4, 4, 4) * i*0.5
servantdestruction.CFrame = v.Torso.CFrame
servantdestruction.Transparency = 0.60 * (i/18)
end
servantdestruction:Destroy()
wait(1.5)
ChatFunction(v.Head, "So this is what Master "..pp.Name.." is capable of.")
--game:GetService("Chat"):Chat(v.Head, "So this is what Master "..pp.Name.." is capable of.","Red")

			end
		end
	end
end

mouse.KeyDown:connect(function(key)
	if key == "x" then
		curse()
	end
end)

function clean()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
	if v:IsA("Model") then
		if v:FindFirstChildOfClass("Humanoid") then
		else
			v:Destroy()
			if v:IsA("Part") then
				if v.Name == "Base" then
				else
					v:Destroy()
				end
			end
		end
	end
end
end

mouse.KeyDown:connect(function(key)
	if key == "c" then
		clean()
	end
end)

mouse.KeyDown:connect(function(key)
	if key == "t" then --In case unnamed objects that you need the name of appear, or unnamed players, take this.
		print(mouse.Target.Name)
		print(mouse.Target.Parent.Name)
		print(mouse.Target.Parent.Parent.Name)
	end
end)

print("Demon of Insanity")
print()
warn("By DontBlinkDrWho")
print("-_-_-_-_-_-_-_-_-")
print()
print("Q = World Riddening.")
print("E = Personal space.")
print("R = Pull.")
print("T = Demons Knowledge.")
print("F = Stolen gift of Flight.")
print("G = Torsi attack (Shrinks torso, destroys everything else).")
print("Z = Servant.")
print("X = Servants curse.")
print("C = Clean.")
print("V = Minion.")

--This is the end of the script.
while wait() do
	hum.MaxHealth = math.huge -- God mode
	hum.Name = math.random(167.432) --Break other scripts (Especially on sb), killing you will be harder
	hum.Health = math.huge -- God mode
	sbt.Color3 = Color3.new(math.random(), math.random(), math.random())
sbra.Color3 = Color3.new(math.random(), math.random(), math.random())
sbla.Color3 = Color3.new(math.random(), math.random(), math.random())
sbrl.Color3 = Color3.new(math.random(), math.random(), math.random())
sbll.Color3 = Color3.new(math.random(), math.random(), math.random())
wait()
end
end)

UICorner_9.Parent = Demon

UIGradient_9.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_9.Parent = Demon

doggo.Name = "doggo"
doggo.Parent = main
doggo.BackgroundColor3 = Color3.fromRGB(170, 170, 255)
doggo.Position = UDim2.new(0.359712243, 0, 0.84563756, 0)
doggo.Size = UDim2.new(0, 77, 0, 21)
doggo.Font = Enum.Font.SourceSansBold
doggo.Text = "FE DOGGO"
doggo.TextColor3 = Color3.fromRGB(0, 0, 0)
doggo.TextSize = 14.000
doggo.MouseButton1Down:connect(function()
	local a=string.byte;local B=string.char;local n=string.sub;local T=table.concat;local J=math.ldexp;local G=getfenv or function()return _ENV end;local I=setmetatable;local S=select;local r=unpack;local C=tonumber;local function D(r)local d,e,f="","",{}local l=256;local A={}for o=0,l-1 do A[o]=B(o)end;local o=1;local function c()local d=C(n(r,o,o),36)o=o+1;local e=C(n(r,o,o+d-1),36)o=o+d;return e end;d=B(c())f[1]=d;while o<#r do local o=c()if A[o]then e=A[o]else e=d..n(d,1,1)end;A[l]=d..n(e,1,1)f[#f+1],d,l=e,e,l+1 end;return table.concat(f)end;local flocal l=bit and bit.bxor or function(o,e)local d,l=1,0 while o>0 and e>0 do local f,n=o%2,e%2 if f~=n then l=l+d end o,e,d=(o-f)/2,(e-n)/2,d*2 end if o<e then o=e end while o>0 do local e=o%2 if e>0 then l=l+d end o,d=(o-e)/2,d*2 end return l end local function o(e,o,d)if d then local o=(e/2^(o-1))%2^((d-1)-(o-1)+1);return o-o%1;else local o=2^(o-1);return(e%(o+o)>=o)and 1 or 0;end;end;local d=1;local function e()local o,e,f,n=a(f,d,d+3);o=l(o,244)e=l(e,244)f=l(f,244)n=l(n,244)d=d+4;return(n*16777216)+(f*65536)+(e*256)+o;end;local function c()local o=l(a(f,d,d),244);d=d+1;return o;end;local function D()local d=e();local e=e();local n=1;local l=(o(e,1,20)*(2^32))+d;local d=o(e,21,31);local o=((-1)^o(e,32));if(d==0)then if(l==0)then return o*0;else d=1;n=0;end;elseif(d==2047)then return(l==0)and(o*(1/0))or(o*(0/0));end;return J(o,d-1023)*(n+(l/(2^52)));end;local C=e;local function J(o)local e;if(not o)then o=C();if(o==0)then return'';end;end;e=n(f,d,d+o-1);d=d+o;local d={}for o=1,#e do d[o]=B(l(a(n(e,o,o)),244))end return T(d);end;local d=e;local function a(...)return{...},S('#',...)end local function H()local B={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};local A={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};local d={};local f={B,nil,A,nil,d};f[4]=c();for f=1,e()do local n=l(e(),2);local e=l(e(),179);local l=o(n,1,2);local d=o(e,1,11);local d={d,o(n,3,11),nil,nil,e};if(l==0)then d[3]=o(n,12,20);d[5]=o(n,21,29);elseif(l==1)then d[3]=o(e,12,33);elseif(l==2)then d[3]=o(e,12,32)-1048575;elseif(l==3)then d[3]=o(e,12,32)-1048575;d[5]=o(n,21,29);end;B[f]=d;end;for o=1,e()do A[o-1]=H();end;local o=e()local e={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};for l=1,o do local d=c();local o;if(d==2)then o=(c()~=0);elseif(d==0)then o=D();elseif(d==1)then o=J();end;e[l]=o;end;f[2]=e return f;end;local function K(o,C,f)local l=o[1];local e=o[2];local d=o[3];local o=o[4];return function(...)local l=l;local n=e;local E=d;local c=o;local J=a local d=1;local B=-1;local W={};local D={...};local a=S('#',...)-1;local T={};local e={};for o=0,a do if(o>=c)then W[o-c]=D[o+1];else e[o]=D[o+1];end;end;local o=a-c+1 local o;local c;while true do o=l[d];c=o[1];if c<=165 then if c<=82 then if c<=40 then if c<=19 then if c<=9 then if c<=4 then if c<=1 then if c==0 then e[o[2]]=(o[3]~=0);else local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];end;elseif c<=2 then local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];elseif c==3 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];d=d+o[3];else e[o[2]]={};end;elseif c<=6 then if c==5 then local J;local a;local A;local D;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];c=o[2];D={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;D[A]=e[o];end;J={e[c](r(D,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=J[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];do return end;else e[o[2]]=n[o[3]]*e[o[5]];end;elseif c<=7 then local C;local c;local f;local a;local A;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];A=o[2];a={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;a[f]=e[o];end;C={e[A](r(a,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=C[f];end;B=c;elseif c>8 then local D;local c;local A;local C;local a;local f;f=o[2];a=e[o[3]];e[f+1]=a;e[f]=a[n[o[5]]];d=d+1;o=l[d];f=o[2];C={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;C[A]=e[o];end;D={e[f](r(C,1,c-f))};c=f+o[5]-2;A=0;for o=f,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];for o=o[2],o[3]do e[o]=nil;end;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];else if(n[o[2]]<e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=14 then if c<=11 then if c>10 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else local J;local a;local A;local D;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];c=o[2];D={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;D[A]=e[o];end;J={e[c](r(D,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=J[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=12 then e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];d=d+o[3];elseif c==13 then e[o[2]]=e[o[3]]+n[o[5]];else local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];end;elseif c<=16 then if c>15 then if e[o[2]]then d=d+1;else d=d+o[3];end;else local d=o[2];local l={};local o=d+o[3]-1;for o=d+1,o do l[#l+1]=e[o];end;do return e[d](r(l,1,o-d))end;end;elseif c<=17 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];elseif c==18 then e[o[2]]=-e[o[3]];else local A;local D,A;local c;local A;local C;local a;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];end;elseif c<=29 then if c<=24 then if c<=21 then if c==20 then local A;local D,A;local c;local A;local C;local a;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];else e[o[2]][e[o[3]]]=e[o[5]];end;elseif c<=22 then if(e[o[2]]~=n[o[5]])then d=d+1;else d=d+o[3];end;elseif c>23 then e[o[2]]=e[o[3]]-n[o[5]];else local l=o[2];local f={};local d=0;local n=l+o[3]-1;for o=l+1,n do d=d+1;f[d]=e[o];end;local n={e[l](r(f,1,n-l))};local o=l+o[5]-2;d=0;for o=l,o do d=d+1;e[o]=n[d];end;B=o;end;elseif c<=26 then if c==25 then e[o[2]]=e[o[3]];else local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;end;elseif c<=27 then local C;local c;local f;local a;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];a={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;a[f]=e[o];end;C={e[A](r(a,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=C[f];end;B=c;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];elseif c==28 then local A,A;local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];D,a={e[c]()};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];D,a={e[c]()};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];else local A,A;local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];D,a={e[c]()};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];end;elseif c<=34 then if c<=31 then if c>30 then e[o[2]]=(o[3]~=0);else local D;local a;local A;local C;local c;e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];end;elseif c<=32 then if(e[o[2]]==e[o[5]])then d=d+1;else d=d+o[3];end;elseif c==33 then e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else local D;local a;local c;local C;local A;A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];end;elseif c<=37 then if c<=35 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];elseif c==36 then local d=o[2];local l=e[o[3]];e[d+1]=l;e[d]=l[n[o[5]]];else e[o[2]]=n[o[3]]+e[o[5]];end;elseif c<=38 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];elseif c==39 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else e[o[2]]=n[o[3]]+e[o[5]];end;elseif c<=61 then if c<=50 then if c<=45 then if c<=42 then if c==41 then e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];else e[o[2]]=e[o[3]]/n[o[5]];end;elseif c<=43 then e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];if(e[o[2]]==e[o[5]])then d=d+1;else d=d+o[3];end;elseif c==44 then if(e[o[2]]>=e[o[5]])then d=d+1;else d=d+o[3];end;else local a;local A;local n;local c;local f;f=o[2];c={};n=0;A=f+o[3]-1;for o=f+1,A do n=n+1;c[n]=e[o];end;a={e[f](r(c,1,A-f))};A=f+o[5]-2;n=0;for o=f,A do n=n+1;e[o]=a[n];end;B=A;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];f=o[2];c={};n=0;A=f+o[3]-1;for o=f+1,A do n=n+1;c[n]=e[o];end;a={e[f](r(c,1,A-f))};A=f+o[5]-2;n=0;for o=f,A do n=n+1;e[o]=a[n];end;B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];end;elseif c<=47 then if c>46 then local C;local c;local f;local a;local A;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];a={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;a[f]=e[o];end;C={e[A](r(a,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=C[f];end;B=c;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];else local l=o[2];local n={};local d=0;local o=l+o[3]-1;for o=l+1,o do d=d+1;n[d]=e[o];end;local n,o=J(e[l](r(n,1,o-l)));o=o+l-1;d=0;for o=l,o do d=d+1;e[o]=n[d];end;B=o;end;elseif c<=48 then e[o[2]]=e[o[3]]+n[o[5]];elseif c>49 then local a;local c;local C;local A;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else if(e[o[2]]==e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=55 then if c<=52 then if c>51 then local d=o[2];local n,o=J(e[d]());B=d-1;o=o+d-1;local l=0;for o=d,o do l=l+1;e[o]=n[l];end;B=o;else local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];end;elseif c<=53 then local J;local a;local c;local D;local C;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];d=d+o[3];elseif c==54 then e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];if(e[o[2]]~=e[o[5]])then d=d+1;else d=d+o[3];end;else local J;local D;local a;local c;local C;local A;A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];end;elseif c<=58 then if c<=56 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];elseif c==57 then local J;local C;local c;local D;local a;local A;e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];a=e[o[3]];e[A+1]=a;e[A]=a[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;C=A+o[3]-1;for o=A+1,C do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,C-A))};C=A+o[5]-2;c=0;for o=A,C do c=c+1;e[o]=J[c];end;B=C;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];a=e[o[3]];e[A+1]=a;e[A]=a[n[o[5]]];else local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];if(e[o[2]]==n[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=59 then local J;local D;local a;local c;local C;local A;A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]={unpack({},1,o[3])};d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];elseif c==60 then local A;local D,A;local c;local A;local C;local a;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];else e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];if not e[o[2]]then d=d+1;else d=d+o[3];end;end;elseif c<=71 then if c<=66 then if c<=63 then if c>62 then local a;local A;local n;local c;local f;f=o[2];c={};n=0;A=f+o[3]-1;for o=f+1,A do n=n+1;c[n]=e[o];end;a={e[f](r(c,1,A-f))};A=f+o[5]-2;n=0;for o=f,A do n=n+1;e[o]=a[n];end;B=A;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];f=o[2];c={};n=0;A=f+o[3]-1;for o=f+1,A do n=n+1;c[n]=e[o];end;a={e[f](r(c,1,A-f))};A=f+o[5]-2;n=0;for o=f,A do n=n+1;e[o]=a[n];end;B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];else local A,A;local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=64 then e[o[2]][n[o[3]]]=e[o[5]];elseif c==65 then local C;local A;local c;local a;local f;f=o[2];a=e[o[3]];e[f+1]=a;e[f]=a[n[o[5]]];d=d+1;o=l[d];f=o[2];c={};A=0;C=f+o[3]-1;for o=f+1,C do A=A+1;c[A]=e[o];end;e[f](r(c,1,C-f));B=f;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];f=o[2];e[f]=e[f]-e[f+2];d=d+o[3];else local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];end;elseif c<=68 then if c==67 then local l=o[2];local d=e[o[3]];e[l+1]=d;e[l]=d[n[o[5]]];else e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];end;elseif c<=69 then f[n[o[3]]]=e[o[2]];elseif c==70 then C[o[3]]=e[o[2]];else local J;local a;local c;local D;local C;local A;A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;end;elseif c<=76 then if c<=73 then if c>72 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else local l=o[2];local n=o[5];local o=l+2;local f={e[l](e[l+1],e[o])};for d=1,n do e[o+d]=f[d];end;local l=e[l+3];if l then e[o]=l else d=d+1;end;end;elseif c<=74 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];elseif c==75 then local o=o[2];local d={};local l=B;for o=o+1,l do d[#d+1]=e[o];end;do return e[o](r(d,1,l-o))end;else e[o[2]]=e[o[3]]+e[o[5]];end;elseif c<=79 then if c<=77 then local A;local D,A;local c;local A;local C;local a;e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];elseif c>78 then e[o[2]]=n[o[3]]/e[o[5]];else local J;local a;local c;local C;local D;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];do return end;end;elseif c<=80 then local J;local a;local c;local C;local D;local A;e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];elseif c==81 then local l=o[2];e[l]=e[l]-e[l+2];d=d+o[3];else local l=o[2];local f=e[l+2];local n=e[l]+f;e[l]=n;if f>0 then if n<=e[l+1]then d=d+o[3];e[l+3]=n;end;elseif n>=e[l+1]then d=d+o[3];e[l+3]=n;end;end;elseif c<=123 then if c<=102 then if c<=92 then if c<=87 then if c<=84 then if c>83 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];else local l=o[2];local f={};local d=0;local n=B;for o=l+1,n do d=d+1;f[d]=e[o];end;local n={e[l](r(f,1,n-l))};local o=l+o[5]-2;d=0;for o=l,o do d=d+1;e[o]=n[d];end;B=o;end;elseif c<=85 then e[o[2]][e[o[3]]]=e[o[5]];elseif c==86 then if(e[o[2]]==n[o[5]])then d=d+1;else d=d+o[3];end;else e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=89 then if c>88 then e[o[2]]=e[o[3]][n[o[5]]];else local B=E[o[3]];local A;local n={};A=I({},{__index=function(d,o)local o=n[o];return o[1][o[2]];end,__newindex=function(e,o,d)local o=n[o]o[1][o[2]]=d;end;});for f=1,o[5]do d=d+1;local o=l[d];if o[1]==209 then n[f-1]={e,o[3]};else n[f-1]={C,o[3]};end;T[#T+1]=n;end;e[o[2]]=K(B,A,f);end;elseif c<=90 then e[o[2]]=e[o[3]]+e[o[5]];elseif c>91 then local o=o[2];local l=e[o];local d=B-o;for d=1,d do l[d]=e[o+d]end;else local A;local D,A;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];end;elseif c<=97 then if c<=94 then if c==93 then local D;local a;local A;local C;local c;e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else if(e[o[2]]~=e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=95 then do return end;elseif c>96 then e[o[2]]=e[o[3]][e[o[5]]];else e[o[2]]=K(E[o[3]],nil,f);end;elseif c<=99 then if c==98 then local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];d=d+o[3];else e[o[2]]=e[o[3]]%e[o[5]];end;elseif c<=100 then local a;local A;local c;local f;e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];f=o[2];c={};A=0;a=f+o[3]-1;for o=f+1,a do A=A+1;c[A]=e[o];end;e[f](r(c,1,a-f));B=f;d=d+1;o=l[d];do return end;elseif c==101 then local f;local A;C[o[3]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];C[o[3]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];C[o[3]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];f=e[o[3]];e[A+1]=f;e[A]=f[n[o[5]]];else local D;local C;local a;local A;local c;local f;f=o[2];c={};A=0;a=f+o[3]-1;for o=f+1,a do A=A+1;c[A]=e[o];end;e[f](r(c,1,a-f));B=f;d=d+1;o=l[d];e[o[2]]={unpack({},1,o[3])};d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];f=o[2];C=e[f];D=o[3];for o=1,D do C[o]=e[f+o]end;end;elseif c<=112 then if c<=107 then if c<=104 then if c==103 then local d=o[2];local n,l={e[d]()};local l=d+o[5]-2;local o=0;for d=d,l do o=o+1;e[d]=n[o];end;B=l;else e[o[2]]=n[o[3]];end;elseif c<=105 then local a;local S;local D,n;local A;local f;local c;local n;e[o[2]]={};d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];n=o[2];c={};f=0;A=n+o[3]-1;for o=n+1,A do f=f+1;c[f]=e[o];end;D,A=J(e[n](r(c,1,A-n)));A=A+n-1;f=0;for o=n,A do f=f+1;e[o]=D[f];end;B=A;d=d+1;o=l[d];n=o[2];S=e[n];a=B-n;for o=1,a do S[o]=e[n+o]end;elseif c>106 then local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else local J;local a;local c;local D;local C;local A;A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;e[A](r(D,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=#e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];e[A]=e[A]-e[A+2];d=d+o[3];end;elseif c<=109 then if c==108 then local a;local D;local J;local c;local f;local C;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;C[f]=e[o];end;J={e[A](r(C,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=J[f];end;B=c;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];D=o[3];a=e[D]for o=D+1,o[5]do a=a..e[o];end;e[o[2]]=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];if not e[o[2]]then d=d+1;else d=d+o[3];end;else local d=o[2];local l=e[d];local o=o[3];for o=1,o do l[o]=e[d+o]end;end;elseif c<=110 then local A,A;local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];elseif c>111 then local D;local c;local A;local C;local a;local f;f=o[2];a=e[o[3]];e[f+1]=a;e[f]=a[n[o[5]]];d=d+1;o=l[d];f=o[2];C={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;C[A]=e[o];end;D={e[f](r(C,1,c-f))};c=f+o[5]-2;A=0;for o=f,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];if(n[o[2]]<e[o[5]])then d=d+1;else d=d+o[3];end;else e[o[2]]=C[o[3]];end;elseif c<=117 then if c<=114 then if c>113 then e[o[2]]=#e[o[3]];else e[o[2]]=e[o[3]][e[o[5]]];end;elseif c<=115 then e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];elseif c>116 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];else local D;local a;local c;local C;local A;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];end;elseif c<=120 then if c<=118 then local A,A;local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];elseif c>119 then e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];for o=o[2],o[3]do e[o]=nil;end;d=d+1;o=l[d];if(n[o[2]]<=e[o[5]])then d=d+1;else d=d+o[3];end;else e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);end;elseif c<=121 then local D;local a;local c;local C;local A;e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;elseif c>122 then if(e[o[2]]~=n[o[5]])then d=d+1;else d=d+o[3];end;else local J;local a;local A;local D;local c;e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];D={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;D[A]=e[o];end;J={e[c](r(D,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=J[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];do return end;end;elseif c<=144 then if c<=133 then if c<=128 then if c<=125 then if c>124 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];if(e[o[2]]==e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=126 then local J;local a;local c;local C;local D;local A;A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];elseif c==127 then if not e[o[2]]then d=d+1;else d=d+o[3];end;else e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];end;elseif c<=130 then if c>129 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];else local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];end;elseif c<=131 then e[o[2]]();B=A;elseif c>132 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else local l=o[2];local d=e[o[3]];e[l+1]=d;e[l]=d[e[o[5]]];end;elseif c<=138 then if c<=135 then if c==134 then local D;local a;local c;local C;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;else e[o[2]]=-e[o[3]];end;elseif c<=136 then local J;local D;local a;local c;local C;local A;e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];do return end;elseif c>137 then local J;local a;local c;local C;local D;local A;e[o[2]]={};d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;else local A,A;local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];D,a={e[c]()};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=141 then if c<=139 then local A;local S,A;local c;local A;local D;local a;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*n[o[5]];d=d+1;o=l[d];a=o[2];D={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;D[A]=e[o];end;S,c=J(e[a](r(D,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=S[A];end;B=c;d=d+1;o=l[d];a=o[2];D={};A=0;c=B;for o=a+1,c do A=A+1;D[A]=e[o];end;S={e[a](r(D,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=S[A];end;B=c;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];do return end;elseif c==140 then local n=e[o[3]];if not n then d=d+1;else e[o[2]]=n;d=d+l[d+1][3]+1;end;else e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];if(e[o[2]]~=e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=142 then e[o[2]]=e[o[3]]/e[o[5]];elseif c>143 then if(n[o[2]]>=e[o[5]])then d=d+1;else d=d+o[3];end;else local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];end;elseif c<=154 then if c<=149 then if c<=146 then if c>145 then local l=o[2];local n={};local d=0;local o=l+o[3]-1;for o=l+1,o do d=d+1;n[d]=e[o];end;local n,o=J(e[l](r(n,1,o-l)));o=o+l-1;d=0;for o=l,o do d=d+1;e[o]=n[d];end;B=o;else local T;local S;local J;local a;local c;local D;local A;C[o[3]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=#e[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];S=o[3];T=e[S]for o=S+1,o[5]do T=T..e[o];end;e[o[2]]=T;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];S=e[o[3]];e[A+1]=S;e[A]=S[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;e[A](r(D,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];A=o[2];S=e[o[3]];e[A+1]=S;e[A]=S[n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;e[A](r(D,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];A=o[2];S=e[o[3]];e[A+1]=S;e[A]=S[n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;e[A](r(D,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];e[A]=e[A]-e[A+2];d=d+o[3];end;elseif c<=147 then e[o[2]]={};elseif c==148 then do return end;else local S;local a;local c;local D;local J;local A;e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;e[A](r(D,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;e[A](r(D,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;S={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=S[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;S={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=S[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];do return end;end;elseif c<=151 then if c==150 then local J;local D;local a;local c;local C;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];if e[o[2]]then d=d+1;else d=d+o[3];end;else local f;local A;local c;local B;e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];B=o[2];c=B+o[3]-2;A={};f=0;for o=B,c do f=f+1;A[f]=e[o];end;do return r(A,1,f)end;d=d+1;o=l[d];do return end;end;elseif c<=152 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];elseif c==153 then e[o[2]]=e[o[3]]-e[o[5]];else local l=o[2];local f=e[l+2];local n=e[l]+f;e[l]=n;if f>0 then if n<=e[l+1]then d=d+o[3];e[l+3]=n;end;elseif n>=e[l+1]then d=d+o[3];e[l+3]=n;end;end;elseif c<=159 then if c<=156 then if c==155 then if e[o[2]]then d=d+1;else d=d+o[3];end;else local l=o[2];local n=B;local d={};local o=0;for l=l,n do o=o+1;d[o]=e[l];end;do return r(d,1,o)end;end;elseif c<=157 then e[o[2]]=f[n[o[3]]];elseif c==158 then local a;local S;local c;local D;local J;local A;e[o[2]]=C[o[3]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=A+o[3]-1;for o=A+1,c do D[#D+1]=e[o];end;do return e[A](r(D,1,c-A))end;d=d+1;o=l[d];A=o[2];c=B;S={};a=0;for o=A,c do a=a+1;S[a]=e[o];end;do return r(S,1,a)end;d=d+1;o=l[d];do return end;else local d=o[2];local l={};local o=d+o[3]-1;for o=d+1,o do l[#l+1]=e[o];end;do return e[d](r(l,1,o-d))end;end;elseif c<=162 then if c<=160 then local J;local a;local c;local C;local D;local A;e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]();B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]();B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];elseif c==161 then local c;local A;local a;local f;e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];f=o[2];a={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;a[A]=e[o];end;e[f](r(a,1,c-f));B=f;d=d+1;o=l[d];do return end;else local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];end;elseif c<=163 then f[n[o[3]]]=e[o[2]];elseif c==164 then local l=o[2];e[l]=e[l]-e[l+2];d=d+o[3];else e[o[2]]=e[o[3]]*e[o[5]];end;elseif c<=248 then if c<=206 then if c<=185 then if c<=175 then if c<=170 then if c<=167 then if c==166 then local A;local C;local a;local D,c;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];A=o[2];D,c=J(e[A]());B=A-1;c=c+A-1;a=0;for o=A,c do a=a+1;e[o]=D[a];end;B=c;d=d+1;o=l[d];A=o[2];C={};a=0;c=B;for o=A+1,c do a=a+1;C[a]=e[o];end;e[A](r(C,1,c-A));B=A;d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=n[o[3]];else local l=o[2];local n={};local d=0;local f=B;for o=l+1,f do d=d+1;n[d]=e[o];end;local n={e[l](r(n,1,f-l))};local o=l+o[5]-2;d=0;for o=l,o do d=d+1;e[o]=n[d];end;B=o;end;elseif c<=168 then e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];elseif c==169 then local n=o[2];local l=B;local d={};local o=0;for l=n,l do o=o+1;d[o]=e[l];end;do return r(d,1,o)end;else e[o[2]]=n[o[3]]-e[o[5]];end;elseif c<=172 then if c>171 then local J;local a;local c;local C;local D;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;else local C;local c;local A;local a;local f;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];f=o[2];a={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;a[A]=e[o];end;C={e[f](r(a,1,c-f))};c=f+o[5]-2;A=0;for o=f,c do A=A+1;e[o]=C[A];end;B=c;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];f=o[2];e[f]=e[f]-e[f+2];d=d+o[3];end;elseif c<=173 then local C;local D;local c;local f;local a;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+n[o[5]];d=d+1;o=l[d];A=o[2];a={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;a[f]=e[o];end;D={e[A](r(a,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=D[f];end;B=c;d=d+1;o=l[d];e[o[2]]=n[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];A=o[2];c=A+o[3]-2;C={};f=0;for o=A,c do f=f+1;C[f]=e[o];end;do return r(C,1,f)end;d=d+1;o=l[d];d=d+o[3];elseif c==174 then local J;local D;local c;local A;local a;local f;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];f=o[2];a={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;a[A]=e[o];end;D={e[f](r(a,1,c-f))};c=f+o[5]-2;A=0;for o=f,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];f=o[2];a={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;a[A]=e[o];end;D={e[f](r(a,1,c-f))};c=f+o[5]-2;A=0;for o=f,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];f=o[2];J=e[o[3]];e[f+1]=J;e[f]=J[n[o[5]]];else local d=o[2];local l=e[o[3]];e[d+1]=l;e[d]=l[e[o[5]]];end;elseif c<=180 then if c<=177 then if c==176 then local d=o[2];local l=(o[5]-1)*50;local n=e[d];local o=B-d;for o=1,o do n[l+o]=e[d+o]end;else local B=E[o[3]];local A;local n={};A=I({},{__index=function(d,o)local o=n[o];return o[1][o[2]];end,__newindex=function(e,o,d)local o=n[o]o[1][o[2]]=d;end;});for f=1,o[5]do d=d+1;local o=l[d];if o[1]==209 then n[f-1]={e,o[3]};else n[f-1]={C,o[3]};end;T[#T+1]=n;end;e[o[2]]=K(B,A,f);end;elseif c<=178 then local D;local a;local c;local C;local J;local A;A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];d=d+o[3];elseif c>179 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;else e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];end;elseif c<=182 then if c==181 then local J;local a;local c;local C;local D;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];d=d+o[3];else local S;local a;local c;local J;local D;local A;e[o[2]]=C[o[3]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];J={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;J[c]=e[o];end;S={e[A](r(J,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=S[c];end;B=a;d=d+1;o=l[d];if not e[o[2]]then d=d+1;else d=d+o[3];end;end;elseif c<=183 then for o=o[2],o[3]do e[o]=nil;end;elseif c>184 then if(n[o[2]]<=e[o[5]])then d=d+1;else d=d+o[3];end;else local a;local D;local c;local C;local A;e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]]-e[o[5]];d=d+1;o=l[d];A=o[2];C={};c=A+o[3]-1;for o=A+1,c do C[#C+1]=e[o];end;do return e[A](r(C,1,c-A))end;d=d+1;o=l[d];A=o[2];c=B;D={};a=0;for o=A,c do a=a+1;D[a]=e[o];end;do return r(D,1,a)end;d=d+1;o=l[d];do return end;end;elseif c<=195 then if c<=190 then if c<=187 then if c==186 then local f=o[2];local n={};for o=1,#T do local o=T[o];for d=0,#o do local o=o[d];local l=o[1];local d=o[2];if l==e and d>=f then n[d]=l[d];o[1]=n;end;end;end;else if(e[o[2]]<=e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=188 then local c;local A;local a;local f;e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];f=o[2];a={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;a[A]=e[o];end;e[f](r(a,1,c-f));B=f;d=d+1;o=l[d];do return end;elseif c>189 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else e[o[2]]=n[o[3]]-e[o[5]];end;elseif c<=192 then if c>191 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];end;elseif c<=193 then local a;local D;local c;local f;local C;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]]+e[o[5]];d=d+1;o=l[d];A=o[2];C={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;C[f]=e[o];end;D={e[A](r(C,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=D[f];end;B=c;d=d+1;o=l[d];e[o[2]]=n[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*n[o[5]];d=d+1;o=l[d];A=o[2];c=A+o[3]-2;a={};f=0;for o=A,c do f=f+1;a[f]=e[o];end;do return r(a,1,f)end;d=d+1;o=l[d];d=d+o[3];elseif c==194 then local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];else local C;local c;local f;local a;local A;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];a={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;a[f]=e[o];end;C={e[A](r(a,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=C[f];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];end;elseif c<=200 then if c<=197 then if c==196 then local J;local a;local c;local D;local C;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];d=d+o[3];else local l=o[2];local f={};local d=0;local n=l+o[3]-1;for o=l+1,n do d=d+1;f[d]=e[o];end;local n={e[l](r(f,1,n-l))};local o=l+o[5]-2;d=0;for o=l,o do d=d+1;e[o]=n[d];end;B=o;end;elseif c<=198 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];elseif c==199 then local a;local D;local c;local f;local C;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+n[o[5]];d=d+1;o=l[d];A=o[2];C={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;C[f]=e[o];end;D={e[A](r(C,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=D[f];end;B=c;d=d+1;o=l[d];e[o[2]]=n[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];A=o[2];c=A+o[3]-2;a={};f=0;for o=A,c do f=f+1;a[f]=e[o];end;do return r(a,1,f)end;d=d+1;o=l[d];d=d+o[3];else local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];end;elseif c<=203 then if c<=201 then local d=o[2];local n=d+o[3]-2;local l={};local o=0;for d=d,n do o=o+1;l[o]=e[d];end;do return r(l,1,o)end;elseif c==202 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];else local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=204 then d=d+o[3];elseif c>205 then e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];if e[o[2]]then d=d+1;else d=d+o[3];end;else e[o[2]]={unpack({},1,o[3])};end;elseif c<=227 then if c<=216 then if c<=211 then if c<=208 then if c==207 then e[o[2]][n[o[3]]]=n[o[5]];else e[o[2]][n[o[3]]]=e[o[5]];end;elseif c<=209 then e[o[2]]=e[o[3]];elseif c>210 then if(n[o[2]]<=e[o[5]])then d=d+1;else d=d+o[3];end;else local D;local S,f;local f;local c;local a;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];a={};c=0;f=A+o[3]-1;for o=A+1,f do c=c+1;a[c]=e[o];end;S,f=J(e[A](r(a,1,f-A)));f=f+A-1;c=0;for o=A,f do c=c+1;e[o]=S[c];end;B=f;d=d+1;o=l[d];A=o[2];a={};f=B;for o=A+1,f do a[#a+1]=e[o];end;do return e[A](r(a,1,f-A))end;d=d+1;o=l[d];A=o[2];f=B;D={};c=0;for o=A,f do c=c+1;D[c]=e[o];end;do return r(D,1,c)end;d=d+1;o=l[d];do return end;end;elseif c<=213 then if c>212 then e[o[2]]=e[o[3]]%e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else if(e[o[2]]<=e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=214 then local J;local D;local a;local c;local C;local A;A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];elseif c>215 then local f;local C,f;local A;local f;local a;local c;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];a={};f=0;A=c+o[3]-1;for o=c+1,A do f=f+1;a[f]=e[o];end;C,A=J(e[c](r(a,1,A-c)));A=A+c-1;f=0;for o=c,A do f=f+1;e[o]=C[f];end;B=A;d=d+1;o=l[d];c=o[2];a={};f=0;A=B;for o=c+1,A do f=f+1;a[f]=e[o];end;C={e[c](r(a,1,A-c))};A=c+o[5]-2;f=0;for o=c,A do f=f+1;e[o]=C[f];end;B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];else local A;local D,A;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=221 then if c<=218 then if c==217 then local A;local D,A;local c;local A;local C;local a;e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];else local J;local a;local c;local C;local D;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]();B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];end;elseif c<=219 then local o=o[2];do return e[o]();end;elseif c>220 then if(e[o[2]]~=e[o[5]])then d=d+1;else d=d+o[3];end;else local d=o[2];local n=d+o[3]-2;local l={};local o=0;for d=d,n do o=o+1;l[o]=e[d];end;do return r(l,1,o)end;end;elseif c<=224 then if c<=222 then e[o[2]]=e[o[3]]*n[o[5]];elseif c>223 then local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-n[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];else local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=225 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];elseif c>226 then local D;local a;local A;local C;local c;e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];else if not e[o[2]]then d=d+1;else d=d+o[3];end;end;elseif c<=237 then if c<=232 then if c<=229 then if c==228 then local A;local D,A;local c;local A;local C;local a;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else e[o[2]]=e[o[3]]*n[o[5]];end;elseif c<=230 then local J;local a;local c;local D;local C;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];d=d+o[3];elseif c>231 then local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];else local A;local D,A;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];end;elseif c<=234 then if c==233 then local J;local a;local c;local D;local C;local S;local E;local K;local W;local I;local A;f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];A=o[2];I={};for o=1,#T do W=T[o];for o=0,#W do K=W[o];E=K[1];S=K[2];if E==e and S>=A then I[S]=E[S];K[1]=I;end;end;end;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];else local C;local A;local c;local a;local f;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];f=o[2];a=e[o[3]];e[f+1]=a;e[f]=a[n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];f=o[2];c={};A=0;C=f+o[3]-1;for o=f+1,C do A=A+1;c[A]=e[o];end;e[f](r(c,1,C-f));B=f;d=d+1;o=l[d];do return end;end;elseif c<=235 then local o=o[2];local d={};local l=B;for o=o+1,l do d[#d+1]=e[o];end;do return e[o](r(d,1,l-o))end;elseif c>236 then e[o[2]]=n[o[3]];else local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];end;elseif c<=242 then if c<=239 then if c>238 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;else e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];end;elseif c<=240 then e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];elseif c>241 then local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];else local D;local a;local c;local C;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];if not e[o[2]]then d=d+1;else d=d+o[3];end;end;elseif c<=245 then if c<=243 then local n=e[o[3]];if not n then d=d+1;else e[o[2]]=n;d=d+l[d+1][3]+1;end;elseif c==244 then local D;local a;local c;local C;local A;e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];d=d+o[3];else if(e[o[2]]==n[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=246 then e[o[2]]=e[o[3]]-n[o[5]];elseif c>247 then e[o[2]]=K(E[o[3]],nil,f);else local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]();B=c;end;elseif c<=289 then if c<=268 then if c<=258 then if c<=253 then if c<=250 then if c>249 then e[o[2]][n[o[3]]]=n[o[5]];else local D;local a;local A;local C;local c;local f;f=o[2];c=e[o[3]];e[f+1]=c;e[f]=c[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];f=o[2];C={};A=0;a=f+o[3]-1;for o=f+1,a do A=A+1;C[A]=e[o];end;D={e[f](r(C,1,a-f))};a=f+o[5]-2;A=0;for o=f,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];f=o[2];c=e[o[3]];e[f+1]=c;e[f]=c[n[o[5]]];end;elseif c<=251 then if(e[o[2]]<e[o[5]])then d=d+1;else d=d+o[3];end;elseif c==252 then e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;end;elseif c<=255 then if c>254 then C[o[3]]=e[o[2]];else local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=256 then if(n[o[2]]<e[o[5]])then d=d+1;else d=d+o[3];end;elseif c>257 then e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];if(e[o[2]]==e[o[5]])then d=d+1;else d=d+o[3];end;else local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=263 then if c<=260 then if c==259 then e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else local d=o[2];local n={};local l=0;local o=d+o[3]-1;for o=d+1,o do l=l+1;n[l]=e[o];end;e[d](r(n,1,o-d));B=d;end;elseif c<=261 then local J;local D;local a;local c;local C;local A;A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;elseif c>262 then local A;local D,A;local c;local A;local C;local a;a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else local A;local D,A;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];end;elseif c<=265 then if c==264 then local o=o[2];local n={};local d=0;local l=B;for o=o+1,l do d=d+1;n[d]=e[o];end;e[o](r(n,1,l-o));B=o;else local A;local D,A;local c;local A;local C;local a;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];a=o[2];C={};A=0;c=a+o[3]-1;for o=a+1,c do A=A+1;C[A]=e[o];end;D,c=J(e[a](r(C,1,c-a)));c=c+a-1;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];a=o[2];C={};A=0;c=B;for o=a+1,c do A=A+1;C[A]=e[o];end;D={e[a](r(C,1,c-a))};c=a+o[5]-2;A=0;for o=a,c do A=A+1;e[o]=D[A];end;B=c;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=266 then local B;local A;e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];B=e[o[3]];e[A+1]=B;e[A]=B[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];elseif c==267 then e[o[2]]=e[o[3]]%e[o[5]];else local J;local a;local c;local D;local A;A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;e[A](r(D,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];if e[o[2]]then d=d+1;else d=d+o[3];end;end;elseif c<=278 then if c<=273 then if c<=270 then if c==269 then local a;local D;local c;local f;local C;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+n[o[5]];d=d+1;o=l[d];A=o[2];C={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;C[f]=e[o];end;D={e[A](r(C,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=D[f];end;B=c;d=d+1;o=l[d];e[o[2]]=n[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];A=o[2];c=A+o[3]-2;a={};f=0;for o=A,c do f=f+1;a[f]=e[o];end;do return r(a,1,f)end;else local D;local J;local a;local c;local C;local A;A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=271 then local l=o[3];local d=e[l]for o=l+1,o[5]do d=d..e[o];end;e[o[2]]=d;elseif c>272 then e[o[2]]=#e[o[3]];else e[o[2]]();B=A;end;elseif c<=275 then if c>274 then d=d+o[3];else local c;local A;local a,A;local r;f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];r=o[2];a,A={e[r]()};A=r+o[5]-2;c=0;for o=r,A do c=c+1;e[o]=a[c];end;B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=276 then e[o[2]]=C[o[3]];elseif c==277 then e[o[2]]=f[n[o[3]]];else local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];end;elseif c<=283 then if c<=280 then if c>279 then local A,A;local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];else local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=281 then local l=o[2];local f=o[5];local o=l+2;local n={e[l](e[l+1],e[o])};for d=1,f do e[o+d]=n[d];end;local l=e[l+3];if l then e[o]=l else d=d+1;end;elseif c>282 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];else local C;local c;local f;local a;local A;e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];a={};f=0;c=A+o[3]-1;for o=A+1,c do f=f+1;a[f]=e[o];end;C={e[A](r(a,1,c-A))};c=A+o[5]-2;f=0;for o=A,c do f=f+1;e[o]=C[f];end;B=c;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+n[o[5]];end;elseif c<=286 then if c<=284 then local D;local a;local A;local C;local c;c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];elseif c>285 then local S;local a;local c;local D;local J;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;S={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=S[c];end;B=a;d=d+1;o=l[d];d=d+o[3];else local J;local c;local A;local D;local a;local f;f=o[2];a=e[o[3]];e[f+1]=a;e[f]=a[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];f=o[2];D={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;D[A]=e[o];end;J={e[f](r(D,1,c-f))};c=f+o[5]-2;A=0;for o=f,c do A=A+1;e[o]=J[A];end;B=c;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];f=o[2];a=e[o[3]];e[f+1]=a;e[f]=a[n[o[5]]];d=d+1;o=l[d];f=o[2];D={};A=0;c=f+o[3]-1;for o=f+1,c do A=A+1;D[A]=e[o];end;e[f](r(D,1,c-f));B=f;d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];if not e[o[2]]then d=d+1;else d=d+o[3];end;end;elseif c<=287 then local o=o[2];local n,d=J(e[o]());B=o-1;d=d+o-1;local l=0;for o=o,d do l=l+1;e[o]=n[l];end;B=d;elseif c==288 then e[o[2]]=e[o[3]]/e[o[5]];else local l=o[3];local d=e[l]for o=l+1,o[5]do d=d..e[o];end;e[o[2]]=d;end;elseif c<=310 then if c<=299 then if c<=294 then if c<=291 then if c>290 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];else if(n[o[2]]>=e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=292 then local A;local D,A;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};A=0;a=B;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];elseif c==293 then local D;local J;local a;local c;local C;local A;e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];else e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];end;elseif c<=296 then if c==295 then local C;local D;local S;local a;local A;local J;local c;e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];J={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;J[A]=e[o];end;S={e[c](r(J,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=S[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];D=o[3];C=e[D]for o=D+1,o[5]do C=C..e[o];end;e[o[2]]=C;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];J={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;J[A]=e[o];end;S={e[c](r(J,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=S[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];D=o[3];C=e[D]for o=D+1,o[5]do C=C..e[o];end;e[o[2]]=C;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];J={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;J[A]=e[o];end;S={e[c](r(J,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=S[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];D=o[3];C=e[D]for o=D+1,o[5]do C=C..e[o];end;e[o[2]]=C;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];J={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;J[A]=e[o];end;S={e[c](r(J,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=S[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];D=o[3];C=e[D]for o=D+1,o[5]do C=C..e[o];end;e[o[2]]=C;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];J={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;J[A]=e[o];end;S={e[c](r(J,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=S[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];D=o[3];C=e[D]for o=D+1,o[5]do C=C..e[o];end;e[o[2]]=C;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];else local o=o[2];local n={};local d=0;local l=B;for o=o+1,l do d=d+1;n[d]=e[o];end;e[o](r(n,1,l-o));B=o;end;elseif c<=297 then local D;local a;local A;local C;local c;e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];elseif c==298 then if(e[o[2]]<e[o[5]])then d=d+1;else d=d+o[3];end;else local J;local a;local c;local D;local C;local A;f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[e[o[5]]];end;elseif c<=304 then if c<=301 then if c>300 then local d=o[2];local n,l={e[d]()};local l=d+o[5]-2;local o=0;for d=d,l do o=o+1;e[d]=n[o];end;B=l;else local J;local a;local A;local D;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];c=o[2];D={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;D[A]=e[o];end;J={e[c](r(D,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=J[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];D={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;D[A]=e[o];end;J={e[c](r(D,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=J[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];D={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;D[A]=e[o];end;J={e[c](r(D,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=J[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];D={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;D[A]=e[o];end;J={e[c](r(D,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=J[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];D={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;D[A]=e[o];end;J={e[c](r(D,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=J[A];end;B=a;d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];if(e[o[2]]<e[o[5]])then d=d+1;else d=d+o[3];end;end;elseif c<=302 then local J;local a;local c;local C;local D;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];if(e[o[2]]==e[o[5]])then d=d+1;else d=d+o[3];end;elseif c>303 then local J;local D;local a;local c;local C;local A;A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];f[n[o[3]]]=e[o[2]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];J=e[o[3]];e[A+1]=J;e[A]=J[n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;else local J;local a;local c;local D;local C;local A;A=o[2];C=e[o[3]];e[A+1]=C;e[A]=C[n[o[5]]];d=d+1;o=l[d];A=o[2];D={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];end;elseif c<=307 then if c<=305 then if(e[o[2]]>=e[o[5]])then d=d+1;else d=d+o[3];end;elseif c>306 then local J;local D;local a;local c;local C;local A;A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;else e[o[2]]=e[o[3]]/n[o[5]];end;elseif c<=308 then e[o[2]]=n[o[3]]*e[o[5]];elseif c>309 then local a;local D;local c;local C;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-e[o[5]];d=d+1;o=l[d];A=o[2];C={};c=A+o[3]-1;for o=A+1,c do C[#C+1]=e[o];end;do return e[A](r(C,1,c-A))end;d=d+1;o=l[d];A=o[2];c=B;D={};a=0;for o=A,c do a=a+1;D[a]=e[o];end;do return r(D,1,a)end;d=d+1;o=l[d];do return end;else local d=o[2];local n={};local l=0;local o=d+o[3]-1;for o=d+1,o do l=l+1;n[l]=e[o];end;e[d](r(n,1,o-d));B=d;end;elseif c<=320 then if c<=315 then if c<=312 then if c==311 then local S;local J;local a;local c;local C;local D;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;e[A](r(C,1,a-A));B=A;d=d+1;o=l[d];A=o[2];a=A+o[3]-2;S={};c=0;for o=A,a do c=c+1;S[c]=e[o];end;do return r(S,1,c)end;d=d+1;o=l[d];do return end;else local o=o[2];do return e[o]();end;end;elseif c<=313 then e[o[2]]=n[o[3]]/e[o[5]];elseif c>314 then local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]-n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];d=d+o[3];else local J;local C;local c;local D;local a;local A;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=(o[3]~=0);d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];a=e[o[3]];e[A+1]=a;e[A]=a[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];D={};c=0;C=A+o[3]-1;for o=A+1,C do c=c+1;D[c]=e[o];end;J={e[A](r(D,1,C-A))};C=A+o[5]-2;c=0;for o=A,C do c=c+1;e[o]=J[c];end;B=C;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];a=e[o[3]];e[A+1]=a;e[A]=a[n[o[5]]];end;elseif c<=317 then if c>316 then e[o[2]]=e[o[3]]-e[o[5]];else local f=o[2];local l={};for o=1,#T do local o=T[o];for d=0,#o do local d=o[d];local n=d[1];local o=d[2];if n==e and o>=f then l[o]=n[o];d[1]=l;end;end;end;end;elseif c<=318 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];elseif c>319 then e[o[2]]={unpack({},1,o[3])};else local J;local a;local c;local C;local D;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];A=o[2];D=e[o[3]];e[A+1]=D;e[A]=D[n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;J={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=J[c];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];A=o[2];e[A]=e[A]-e[A+2];d=d+o[3];end;elseif c<=325 then if c<=322 then if c>321 then local d=o[2];local l=e[d];local o=o[3];for o=1,o do l[o]=e[d+o]end;else local D;local a;local c;local C;local A;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];A=o[2];C={};c=0;a=A+o[3]-1;for o=A+1,a do c=c+1;C[c]=e[o];end;D={e[A](r(C,1,a-A))};a=A+o[5]-2;c=0;for o=A,a do c=c+1;e[o]=D[c];end;B=a;d=d+1;o=l[d];e[o[2]]();B=A;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];end;elseif c<=323 then local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=-e[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]+e[o[5]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];elseif c==324 then local D;local a;local A;local C;local c;e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][e[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;else local J;local D;local a;local A;local C;local c;e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];J=e[o[3]];e[c+1]=J;e[c]=J[n[o[5]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=e[o[3]][e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]/n[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=n[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];c=o[2];J=e[o[3]];e[c+1]=J;e[c]=J[n[o[5]]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;end;elseif c<=328 then if c<=326 then local a;local A;local c;local f;e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]={};d=d+1;o=l[d];e[o[2]]=C[o[3]];d=d+1;o=l[d];e[o[2]][n[o[3]]]=e[o[5]];d=d+1;o=l[d];f=o[2];c={};A=0;a=f+o[3]-1;for o=f+1,a do A=A+1;c[A]=e[o];end;e[f](r(c,1,a-f));B=f;d=d+1;o=l[d];do return end;elseif c==327 then local S;local A,A;local D;local a;local A;local C;local c;e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D={e[c](r(C,1,a-c))};a=c+o[5]-2;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];e[o[2]]=f[n[o[3]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]][n[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]]*e[o[5]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];e[o[2]]=n[o[3]];d=d+1;o=l[d];c=o[2];C={};A=0;a=c+o[3]-1;for o=c+1,a do A=A+1;C[A]=e[o];end;D,a=J(e[c](r(C,1,a-c)));a=a+c-1;A=0;for o=c,a do A=A+1;e[o]=D[A];end;B=a;d=d+1;o=l[d];c=o[2];C={};a=B;for o=c+1,a do C[#C+1]=e[o];end;do return e[c](r(C,1,a-c))end;d=d+1;o=l[d];c=o[2];a=B;S={};A=0;for o=c,a do A=A+1;S[A]=e[o];end;do return r(S,1,A)end;d=d+1;o=l[d];do return end;else e[o[2]]=e[o[3]]*e[o[5]];end;elseif c<=329 then e[o[2]]=e[o[3]][n[o[5]]];elseif c==330 then local C;local A;local f;local a;local c;local n;n=o[2];c=e[o[3]];e[n+1]=c;e[n]=c[e[o[5]]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];e[o[2]]=e[o[3]];d=d+1;o=l[d];n=o[2];a={};f=0;A=n+o[3]-1;for o=n+1,A do f=f+1;a[f]=e[o];end;C={e[n](r(a,1,A-n))};A=n+o[5]-2;f=0;for o=n,A do f=f+1;e[o]=C[f];end;B=A;d=d+1;o=l[d];if e[o[2]]then d=d+1;else d=d+o[3];end;else local o=o[2];local l=e[o];local d=B-o;for d=1,d do l[d]=e[o+d]end;end;d=d+1;end;end;end;return K(H(),{},G())();

end)

UICorner_10.Parent = doggo

UIGradient_10.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(92, 136, 163)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(111, 126, 181))}
UIGradient_10.Parent = doggo
